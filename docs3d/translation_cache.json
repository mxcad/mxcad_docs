{
  "[mxcad_3d API 文档](../README.md) / Mx3dAlgoChamfer": "[mxcad_3d API documentation](../README. md)/Mx3dAlgoChamfer",
  "倒斜角算法": "Inverted angle algorithm",
  "构造函数，输入需要倒斜角的对象": "Constructor, input the object that requires a reverse angle",
  "| `S` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | 进行倒斜角算法的对象 |": "|S | [Mx3dShapeObject] (Mx3dShapeObject. md)|",
  "添加对象上需要倒斜角的边": "Add edges on objects that require a reverse angle",
  "| `Dis` | `number` | 倒斜角距离 |": "|Dis | number | Inverted angle distance|",
  "| `E` | [`Mx3dShapeEdge`](Mx3dShapeEdge.md) | 对象上的边 |": "|E | [Mx3dShapeEdge] (Mx3dShapeEdge. md) | Edges on objects|",
  "获取倒斜角后的形状对象": "Obtain the shape object after obtaining the inverted angle",
  "倒斜角后的形状对象": "Shape object after oblique angle reversal",
  "[mxcad_3d API 文档](../README.md) / Mx3dAlgoFillet": "[mxcad_3d API documentation](../README. md)/Mx3dAlgoFleet",
  "倒圆角算法": "Rounding algorithm",
  "[mxcad_3d API 文档](../README.md) / Mx3dAlgoFillet2d": "[mxcad_3d API documentation](../README. md)/Mx3dAlgoSpell2d",
  "二维倒圆角算法": "Two dimensional fillet algorithm",
  "默认构造函数": "Default constructor ",
  "构造函数，传入Wire和Wire所在平面": "Constructor, pass in the wire and the plane where the wire is located",
  "| `theWire` | [`Mx3dShapeWire`](Mx3dShapeWire.md) | 要倒圆角的Wire |": "|TheWire | [Mx3dShapeWire] (Mx3dShapeWire. md) | Wire to be rounded|",
  "| `thePlane` | [`Mx3dGePlane`](Mx3dGePlane.md) | Wire所在平面 |": "|ThePlane | [Mx3dGePlane] (Mx3dGePlane. md) | The plane where the wire is located|",
  "构造函数，传入两条位于同一平面Edge，和所在平面": "Constructor, passing in two lines located on the same plane Edge and the plane where they are located",
  "| `theEdge1` | [`Mx3dShapeEdge`](Mx3dShapeEdge.md) | 第一条Edge |": "|TheEdge1 | [Mx3dShapeEdge] (Mx3dShapeEdge. md) | First Edge|",
  "| `theEdge2` | [`Mx3dShapeEdge`](Mx3dShapeEdge.md) | 第二条Edge |": "|TheEdge2 | [Mx3dShapeEdge] (Mx3dShapeEdge. md) | Second Edge|",
  "| `thePlane` | [`Mx3dGePlane`](Mx3dGePlane.md) | 所在平面 |": "|The Plane | [Mx3dGePlane] (Mx3dGePlane. md) | The plane where it is located|",
  "初始化函数，传入Wire和Wire所在平面": "Initialize function, passing in the wire and the plane where the wire is located",
  "初始化函数，传入两条位于同一平面Edge，和所在平面": "Initialization function, passing in two lines located on the same plane Edge and the plane where they are located",
  "获取圆角执行结果的数量": "Obtain the number of rounded corner execution results",
  "| `thePoint` | [`Mx3dGePoint`](Mx3dGePoint.md) | 计算圆角处的点 |": "|ThePoint | [Mx3dGePoint] (Mx3dGePoint. md) | Calculate the point at the rounded corner|",
  "圆角执行结果的数量": "The number of rounded corner execution results",
  "执行圆角算法": "Execute fillet algorithm",
  "| `theRadius` | `number` | 圆角的半径 |": "|TheRadius | number | radius of rounded corners|",
  "算法是否执行成功": "Whether the algorithm has been successfully executed",
  "| `thePoint` | [`Mx3dGePoint`](Mx3dGePoint.md) | `undefined` | 设置要获取位于原曲线位于哪个交点的结果 |": "|` thePoint ` | [` Mx3dGePoint `] (Mx3dGePoint. md) | ` undefined ` | Set the result to be obtained at which intersection point of the original curve is located|",
  "| `theEdge1` | [`Mx3dShapeEdge`](Mx3dShapeEdge.md) | `undefined` | 返回的第一条Edge |": "|The Edge1 | [Mx3dShapeEdge] (Mx3dShapeEdge. md) | undefined | The first Edge returned|",
  "| `theEdge2` | [`Mx3dShapeEdge`](Mx3dShapeEdge.md) | `undefined` | 返回的第二条Edge |": "|` theEdge2 ` | [` Mx3dShapeEdge `] (Mx3dShapeEdge. md) | ` undefined ` | The second Edge returned|",
  "| `iSolution` | `number` | `-1` | 默认-1，获取最靠近thePoint的结果 |": "|ISolution | number | -1 | default -1, get the result closest to thePoint|",
  "[mxcad_3d API 文档](../README.md) / Mx3dAlgoObject": "[mxcad_3d API Document](../README. md)/Mx3dAlgoObject",
  "模型算法的基类": "Base class for model algorithms",
  "[mxcad_3d API 文档](../README.md) / Mx3dApplication": "[mxcad_3d API documentation](../README. md)/Mx3dApplication",
  "应用程序类，全局单实例": "Application class, global single instance",
  "为当前应用程序创建一个视图": "Create a view for the current application",
  "| `theCanvasSelector` | `string` | canvas的CSS选择器字符串 |": "|The Canvas selector | string | CSS selector string for canvas|",
  "返回一个视图对象": "Return a view object",
  "获取当前视图对象": "Retrieve the current view object",
  "返回当前的视图对象": "Return the current view object",
  "[mxcad_3d API 文档](../README.md) / Mx3dAspectArrow": "[mxcad_3d API Document](../README. md)/Mx3dAspectArrow",
  "Mx3dAspectArrow 类用于定义箭头的显示属性。\r": "The Mx3dAspectArrow class is used to define the display properties of arrows.",
  "该类提供了设置箭头角度、长度、颜色和缩放特性的方法。": "This class provides methods for setting arrow angle, length, color, and scaling properties.",
  "构造一个箭头显示属性对象。": "Construct an arrow to display attribute objects.",
  "构造一个具有指定角度和长度的箭头显示属性对象。": "Construct an arrow display attribute object with a specified angle and length.",
  "| `anAngle` | `number` | 箭头的角度。 |": "|Angle | number | The angle of the arrow|",
  "| `aLength` | `number` | 箭头的长度。 |": "|ALength | number | The length of the arrow|",
  "获取箭头的当前角度。": "Get the current angle of the arrow.",
  "当前箭头的角度。": "The angle of the current arrow.",
  "检查箭头是否可缩放。": "Check if the arrow is scalable.",
  "如果箭头是可缩放的，则返回 true；否则返回 false。": "If the arrow is scalable, return true; Otherwise, return false.",
  "获取箭头的当前长度。": "Get the current length of the arrow.",
  "当前箭头的长度。": "The length of the current arrow.",
  "设置箭头的角度。": "Set the angle of the arrow.",
  "| `anAngle` | `number` | 要设置的箭头角度。 |": "|An Angle | Number | Arrow angle to be set|",
  "设置箭头的颜色。": "Set the color of the arrow.",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 要设置的箭头颜色。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | The arrow color to be set|",
  "设置箭头的长度。": "Set the length of the arrow.",
  "| `theLength` | `number` | 要设置的箭头长度。 |": "|The Length | Number | The length of the arrow to be set|",
  "设置箭头是否可缩放。": "Set whether the arrow is scalable.",
  "| `theIsZoomable` | `boolean` | 如果为 true，箭头是可缩放的；否则为 false。 |": "|If 'theIsZoomable' | 'boolean' | is true, the arrow is scalable; Otherwise, it is false|",
  "[mxcad_3d API 文档](../README.md) / Mx3dAspectDim": "[mxcad_3d API documentation](../README. md)/Mx3dAspectDim",
  "Mx3dAspectDim 类定义了在 3D 表示中显示尺寸的属性。\r": "The Mx3dAspectDim class defines the attribute of displaying dimensions in 3D representations.",
  "这包括尺寸测量相关的线条、文本和箭头的设置。": "This includes the setting of lines, text, and arrows related to size measurement.",
  "构造函数，创建一个默认的显示尺寸的属性对象。": "Constructor, create a default display size attribute object.",
  "获取箭头的方向。": "Obtain the direction of the arrow.",
  "箭头方向。": "Arrow direction.",
  "获取箭头尾部的大小。": "Get the size of the arrow tail.",
  "尺寸值。": "Size value.",
  "获取延伸尺寸的大小。": "Obtain the size of the extension dimension.",
  "检查箭头是否为 3D。": "Check if the arrow is in 3D.",
  "如果箭头为 3D，返回 true，否则返回 false。": "If the arrow is 3D, return true; otherwise, return false.",
  "检查尺寸文本是否为 3D。": "Check if the size text is in 3D.",
  "如果文本为 3D，返回 true，否则返回 false。": "If the text is 3D, return true; otherwise, return false.",
  "检查 3D 尺寸文本是否有阴影。": "Check if there are shadows in the 3D size text.",
  "如果文本有阴影，返回 true，否则返回 false。": "If the text has shadows, return true; otherwise, return false.",
  "检查是否显示单位。": "Check if the unit is displayed.",
  "如果显示单位，返回 true，否则返回 false。": "If the unit is displayed, return true; otherwise, return false.",
  "设置箭头为 3D 或 2D。": "Set the arrow to 3D or 2D.",
  "| `theIsArrows3d` | `boolean` | 如果为 true，将箭头设置为 3D；否则为 2D。 |": "|` theIsArrows3d ` | ` boolean ` | If true, set the arrow to 3D; Otherwise, it is 2D|",
  "设置尺寸文本为 3D 或 2D。": "Set the size text to 3D or 2D.",
  "| `isText3d` | `boolean` | 如果为 true，将文本设置为 3D；否则为 2D。 |": "|IsText3d | boolean | If true, set the text to 3D; Otherwise, it is 2D|",
  "开启或关闭 3D 尺寸文本的阴影。": "Turn on or off shadows for 3D sized text.",
  "| `theIsTextShaded` | `boolean` | 如果为 true，开启阴影；否则关闭阴影。 |": "|If ` theIsTextChaded ` | ` boolean ` | is true, turn on shadows; Otherwise, turn off the shadow|",
  "设置是否显示单位。": "Set whether to display units.",
  "| `theIsDisplayed` | `boolean` | 如果为 true，显示单位；否则不显示。 |": "|` theIsDisplayed ` | ` boolean ` | If true, display units; Otherwise, it will not be displayed|",
  "设置尺寸箭头的显示属性。": "Set the display properties of the size arrow.",
  "| `theAspect` | [`Mx3dAspectArrow`](Mx3dAspectArrow.md) | 箭头显示属性。 |": "|The Aspect | [Mx3dAspectArrow] (Mx3dAspectArrow. md) | Arrow display properties|",
  "设置箭头的方向（外部或内部）。": "Set the direction of the arrow (external or internal).",
  "| `theArrowOrient` | [`MxDimensionArrowOrientation`](../enums/MdGe.MxDimensionArrowOrientation.md) | 箭头方向。 |": "|The ArrowOrientation | [MxDimension ArrowOrientation] (../enums/MdGe. MxDimension ArrowOrientation. md) | Arrow direction|",
  "设置箭头尾部的大小（无文本的延伸）。": "Set the size of the arrow tail (without text extension).",
  "| `theSize` | `number` | 尺寸值。 |": "|TheSize | Number | Size value|",
  "为尺寸的所有部分（线条、箭头和文本）设置相同的颜色。": "Set the same color for all parts of the size (lines, arrows, and text).",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 颜色值。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | Color value|",
  "设置延伸尺寸的大小。": "Set the size of the extension dimension.",
  "设置尺寸线条的显示属性。": "Set the display properties of dimension lines.",
  "| `theAspect` | [`Mx3dAspectLine`](Mx3dAspectLine.md) | 线条显示属性。 |": "|The Aspect | [Mx3dAspectLine] (Mx3dAspectLine. md) | Line display properties|",
  "设置尺寸文本的显示属性。": "Set the display properties of size text.",
  "| `theAspect` | [`Mx3dAspectText`](Mx3dAspectText.md) | 文本显示属性。 |": "|The Aspect | [Mx3dAspectText] (Mx3dAspectText. md) | Text display properties|",
  "设置文本的水平位置。": "Set the horizontal position of the text.",
  "| `thePosition` | [`MxDimensionTextHorizontalPosition`](../enums/MdGe.MxDimensionTextHorizontalPosition.md) | 文本的水平位置。 |": "|ThePosition | [MxDimension TextHorizontalPosition] (../enums/MdGe. MxDimension TextHorizontalPosition. md) | The horizontal position of the text|",
  "设置文本的垂直位置。": "Set the vertical position of the text.",
  "| `thePosition` | [`MxDimensionTextVerticalPosition`](../enums/MdGe.MxDimensionTextVerticalPosition.md) | 文本的垂直位置。 |": "|ThePosition | [MxDimension TextVerticalPosition] (../enums/MdGe. MxDimension TextVerticalPosition. md) | The vertical position of the text|",
  "设置用于格式化尺寸值标签的语法格式。": "Set the syntax format for formatting size value labels.",
  "| `theFormat` | `string` | 格式字符串。 |": "|TheFormat | String | Format string|",
  "获取文本的水平位置。": "Retrieve the horizontal position of the text.",
  "文本的水平位置。": "The horizontal position of the text.",
  "获取文本的垂直位置。": "Get the vertical position of the text.",
  "文本的垂直位置。": "The vertical position of the text.",
  "获取尺寸值标签的格式。": "Obtain the format of the size value label.",
  "格式字符串。": "Format string.",
  "[mxcad_3d API 文档](../README.md) / Mx3dAspectLine": "[mxcad_3d API Document](../README. md)/Mx3dAspectLine",
  "表示线样式。": "Indicate the line style.",
  "构造函数，创建一个指定颜色，线型，线宽的线样式对象。": "Constructor, create a line style object that specifies color, line type, and line width.",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 颜色。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | Color|",
  "| `theType` | [`MxTypeOfLine`](../enums/MdGe.MxTypeOfLine.md) | 线型。 |": "|TheType | [MxTypeOfLine] (../enums/MdGe. MxTypeOfLine. md) | Line type|",
  "| `theWidth` | `number` | 线宽。 |": "|TheWidth | Number | Line Width|",
  "设置线样式对象的颜色。": "Set the color of the line style object.",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 要设置的颜色对象（Mx3dGeColor）。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | The color object to be set (Mx3dGeColor)|",
  "设置线样式对象的线型。": "Set the line type of the line style object.",
  "设置线样式对象的线宽。": "Set the line width of the line style object.",
  "[mxcad_3d API 文档](../README.md) / Mx3dAspectObject": "[mxcad_3d API Document](../README. md)/Mx3dAspectObject",
  "样式基类": "Style base class",
  "[mxcad_3d API 文档](../README.md) / Mx3dAspectText": "[mxcad_3d API Document](../README. md)/Mx3dAspectText",
  "表示用于定义文本显示属性的类。\r": "Represents a class used to define text display properties.",
  "此类封装了设置文本颜色、字体、高度、角度、对齐方式和方向的方法。": "This type encapsulates methods for setting text color, font, height, angle, alignment, and orientation.",
  "创建一个默认的文字样式对象。": "Create a default text style object.",
  "获取文本显示的角度。": "Obtain the angle at which the text is displayed.",
  "文本的角度。": "The perspective of the text.",
  "获取文本显示的高度。": "Get the height of the text display.",
  "文本的高度。": "The height of the text.",
  "获取文本的水平对齐方式。": "Get the horizontal alignment of the text.",
  "水平对齐方式（MdGe.MxHorizontalTextAlignment）。": "Horizontal alignment method (MdGe. MxHorizontalTextAlignment).",
  "获取文本的显示方向。": "Get the display orientation of the text.",
  "文本方向（MdGe.MxTextPath）。": "Text direction (MdGe. MxTextPath).",
  "设置文本显示的角度。": "Set the angle of text display.",
  "| `theAngle` | `number` | 要设置的文本角度。 |": "|The Angle | number | The text angle to be set|",
  "设置文本显示的颜色。": "Set the color for text display.",
  "设置文本显示的字体。": "Set the font for displaying text.",
  "| `theFont` | `string` | 要设置的字体名称。 |": "|The font name to be set is' theFont '|' string '|",
  "设置文本显示的高度。": "Set the height for displaying text.",
  "| `theHeight` | `number` | 要设置的文本高度。 |": "|TheHeight | Number | The text height to be set|",
  "设置文本的水平对齐方式。": "Set the horizontal alignment of the text.",
  "| `theJustification` | [`MxHorizontalTextAlignment`](../enums/MdGe.MxHorizontalTextAlignment.md) | 要设置的水平对齐方式（MdGe.MxHorizontalTextAlignment）。 |": "|The Justification | [MxHorizontalTextAlignment] (../enums/MdGe. MxHorizontalTextAlignment. md) | The horizontal alignment method to be set (MdGe. MxHorizontalTextAlignment)|",
  "设置文本的显示方向。": "Set the display direction of the text.",
  "| `theOrientation` | [`MxTextPath`](../enums/MdGe.MxTextPath.md) | 要设置的文本方向（MdGe.MxTextPath）。 |": "|The Orientation | [MxTextPath] (../enums/MdGe. MxTextPath. md) | The text direction to be set (MdGe. MxTextPath)|",
  "设置文本的垂直对齐方式。": "Set the vertical alignment of the text.",
  "| `theJustification` | [`MxVerticalTextAlignment`](../enums/MdGe.MxVerticalTextAlignment.md) | 要设置的垂直对齐方式（MdGe.MxVerticalTextAlignment）。 |": "|The Justification | [MxVerticalTextAlignment] (../enums/MdGe. MxVerticalTextAlignment. md) | The vertical alignment method to be set (MdGe. MxVerticalTextAlignment)|",
  "获取文本的垂直对齐方式。": "Get the vertical alignment of the text.",
  "垂直对齐方式（MdGe.MxVerticalTextAlignment）。": "Vertical alignment method (MdGe. MxVerticalTextAlignment).",
  "[mxcad_3d API 文档](../README.md) / Mx3dBaseObject": "[mxcad_3d API Document](../README. md)/Mx3dBaseObject",
  "管理对象生命周期的基类": "Base class for managing the lifecycle of objects",
  "[mxcad_3d API 文档](../README.md) / Mx3dBrepCastGeom": "[mxcad_3d API Document](../README. md)/Mx3dBrepCastGeom",
  "拓扑转换为参数几何的接口": "Interface for converting topology to parametric geometry",
  "将拓扑边Edge转换为参数几何曲线": "Convert topological edge Edge to parametric geometric curve",
  "| `E` | [`Mx3dShapeEdge`](Mx3dShapeEdge.md) | 拓扑Edge |": "|E | [Mx3dShapeEdge] (Mx3dShapeEdge. md) | Topological Edge|",
  "| `SEParam` | [FirstParam: number, LastParam: number] | 返回转换后曲线的起始参数 |": "|SEParam | [FirstParam: number, LastParam: number] | Returns the starting parameters of the converted curve|",
  "参数几何曲线": "Parameter geometry curve",
  "将拓扑面转换为参数几何曲面": "Convert the topological surface into a parametric geometric surface",
  "| `F` | [`Mx3dShapeFace`](Mx3dShapeFace.md) | 拓扑面 |": "|F | [Mx3dShapeFace] (Mx3dShapeFace. md)|",
  "参数几何曲面": "Parameter Geometric Surface",
  "[mxcad_3d API 文档](../README.md) / Mx3dDbDocument": "[mxcad_3d API Document](../README. md)/Mx3dDbDocument",
  "文档类，继承自 Mx3dDbObject。": "Document class, inherited from Mx3dDbObject.",
  "构造函数，用于初始化 Mx3dDbDocument 实例。": "Constructor, used to initialize Mx3dDbDocument instance.",
  "中止当前事务。": "Suspend the current transaction.",
  "添加一个新的颜色标签。": "Add a new color label.",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 颜色对象。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | Color object|",
  "返回新增的颜色标签对象。": "Return the newly added color label object.",
  "添加一个新的形状标签。": "Add a new shape label.",
  "返回新增的形状标签对象。": "Return the newly added shape label object.",
  "提交当前事务。": "Submit the current transaction.",
  "返回布尔值，表示是否成功提交。": "Return a Boolean value indicating whether the submission was successful.",
  "获取访问入口标签。": "Obtain the access entry tag.",
  "返回访问入口标签对象。": "Return the access entry label object.",
  "获取入口颜色标签。": "Obtain the entrance color label.",
  "返回入口颜色标签对象。": "Return the entry color label object.",
  "获取文档名称。": "Get the document name.",
  "返回文档名称的字符串。": "Returns a string of the document name.",
  "获取入口图层标签。": "Obtain the entry layer label.",
  "返回入口图层标签对象。": "Return the entry layer label object.",
  "获取入口形状标签。": "Obtain the entrance shape label.",
  "返回入口形状标签对象。": "Return the entrance shape label object.",
  "获取顶级自由标签列表。": "Get a list of top free labels.",
  "返回顶级自由标签的数组。": "Return an array of top-level free labels.",
  "获取视图对象。": "Retrieve the view object.",
  "返回视图对象。": "Return the view object.",
  "开启一个事务开始。": "Start a transaction.",
  "读取模型文件并解析为文档。": "Read the model file and parse it into a document.",
  "| `theFile` | [`File`]( https://developer.mozilla.org/en-US/docs/Web/API/File ) | 要读取的文件对象。 |": "| `theFile` | [`File`](  https://developer.mozilla.org/en-US/docs/Web/API/File ）The file object to be read|",
  "| `theFormat` | [`MxFormat`](../enums/MdGe.MxFormat.md) | 模型文件格式。 |": "|TheFormat | [MxFormat] (../enums/MdGe. MxFormat. md) | Model file format|",
  "返回一个 Promise，解析结果为布尔值，表示成功或失败。": "Return a Promise, parsed as a Boolean value, indicating success or failure.",
  "重做最后一个撤销的事务。": "Redo the last revoked transaction.",
  "返回布尔值，表示是否成功重做。": "Returns a Boolean value indicating whether the redo was successful.",
  "删除指定的组件。": "Delete the specified component.",
  "| `theLabel` | [`Mx3dDbLabel`](Mx3dDbLabel.md) | 要删除的标签对象。 |": "|TheLabel | [Mx3dDbLabel] (Mx3dDbLabel. md) | The label object to be deleted|",
  "删除指定的形状标签。": "Delete the specified shape label.",
  "| `theLabel` | [`Mx3dDbLabel`](Mx3dDbLabel.md) | 要删除的形状标签对象。 |": "|TheLabel | [Mx3dDbLabel] (Mx3dDbLabel. md) | The shape label object to be deleted|",
  "返回布尔值，表示是否成功删除。": "Return a Boolean value indicating whether the deletion was successful.",
  "撤销最后一个记录的事务。": "Revoke the transaction of the last record.",
  "返回布尔值，表示是否成功撤销。": "Return a Boolean value indicating whether the revocation was successful.",
  "写入文档到指定路径。": "Write the document to the specified path.",
  "| `theFilePath` | `string` | 文件路径。 |": "|The FilePath | string | file path|",
  "| `theFormat` | [`MxFormat`](../enums/MdGe.MxFormat.md) | 文件格式。 |": "|TheFormat | [MxFormat] (../enums/MdGe. MxFormat. md) | File format|",
  "返回布尔值，表示是否成功写入。": "Returns a Boolean value indicating whether the write was successful.",
  "[mxcad_3d API 文档](../README.md) / Mx3dDbLabel": "[mxcad_3d API Document](../README. md)/Mx3dDbLabel",
  "文档标签类，继承自 Mx3dDbObject，提供对标签的各种操作。": "The document tag class inherits from Mx3dDbObject and provides various operations on tags.",
  "添加一个子标签。": "Add a sub tag.",
  "返回新增的子标签对象。": "Return the newly added sub label object.",
  "添加一个组件。": "Add a component.",
  "| `comp` | [`Mx3dDbLabel`](Mx3dDbLabel.md) | 组件标签对象。 |": "|Comp | [Mx3dDbLabel] (Mx3dDbLabel. md) | Component label object|",
  "| `Loc` | [`Mx3dGeLocation`](Mx3dGeLocation.md) | 位置对象。 |": "|Loc | [Mx3dGeLocation] (Mx3dGeLocation. md) | Position object|",
  "返回添加的组件标签对象。": "Return the added component label object.",
  "添加一个子形状。": "Add a sub shape.",
  "| `theShape` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | 形状对象。 |": "|The Shape | [Mx3dShapeObject] (Mx3dShapeObject. md) | Shape object|",
  "获取标签属性字符串，JSON字符串。": "Get tag attribute string, JSON string.",
  "返回标签属性字符串。": "Return the tag attribute string.",
  "获取所有子标签。": "Retrieve all sub tags.",
  "返回子标签的数组。": "Return an array of sub tags.",
  "获取标签颜色。": "Get the label color.",
  "返回颜色对象。": "Return the color object.",
  "获取标签条目，是一个唯一的数字字符序列。": "Retrieve a tag entry, which is a unique sequence of numerical characters.",
  "返回标签条目的字符串。": "Return the string of the label entry.",
  "获取标签的位置。": "Retrieve the location of the label.",
  "返回位置对象。": "Return the location object.",
  "获取标签名称。": "Get the tag name.",
  "返回标签名称的字符串。": "Returns a string of tag names.",
  "获取父标签。": "Get the parent tag.",
  "返回父标签对象。": "Return the parent label object.",
  "获取引用的标签。": "Retrieve the referenced label.",
  "返回引用的标签对象。": "Return the referenced label object.",
  "获取标签的形状。": "Obtain the shape of the label.",
  "返回形状对象。": "Return the shape object.",
  "检查标签是否有子标签。": "Check if the label has sub labels.",
  "返回布尔值，表示是否有子标签。": "Return a Boolean value indicating whether there are sub labels.",
  "检查标签是否有父标签。": "Check if the tag has a parent tag.",
  "返回布尔值，表示是否有父标签。": "Returns a Boolean value indicating whether there is a parent label.",
  "检查标签是否有形状。": "Check if the label has a shape.",
  "返回布尔值，表示是否有形状。": "Returns a Boolean value indicating whether there is a shape.",
  "检查标签是否是装配。": "Check if the label is assembled.",
  "返回布尔值，表示是否是装配。": "Return a Boolean value indicating whether it is an assembly.",
  "检查标签是否是组件。": "Check if the label is a component.",
  "返回布尔值，表示是否是组件。": "Returns a Boolean value indicating whether it is a component.",
  "检查标签是否是复合形状。": "Check if the label is a composite shape.",
  "返回布尔值，表示是否是复合形状。": "Returns a Boolean value indicating whether it is a composite shape.",
  "检查标签是否是自由标签。": "Check if the label is a free label.",
  "返回布尔值，表示是否是自由标签。": "Returns a Boolean value indicating whether it is a free label.",
  "检查标签是否是引用。": "Check if the label is a reference.",
  "返回布尔值，表示是否是引用。": "Returns a Boolean value indicating whether it is a reference.",
  "检查标签是否设置了颜色。": "Check if the label has set the color.",
  "返回布尔值，表示是否设置了颜色。": "Returns a Boolean value indicating whether a color has been set.",
  "检查标签是否是形状。": "Check if the label is shaped.",
  "返回布尔值，表示是否是形状。": "Returns a Boolean value indicating whether it is a shape.",
  "检查标签是否是简单形状。": "Check if the label has a simple shape.",
  "返回布尔值，表示是否是简单形状。": "Returns a Boolean value indicating whether it is a simple shape.",
  "检查标签是否是子形状。": "Check if the label is a sub shape.",
  "返回布尔值，表示是否是子形状。": "Returns a Boolean value indicating whether it is a sub shape.",
  "检查标签是否是顶级标签。": "Check if the label is a top-level label.",
  "返回布尔值，表示是否是顶级标签。": "Returns a Boolean value indicating whether it is a top-level label.",
  "设置标签颜色。": "Set label color.",
  "设置标签形状的材质。": "Set the material for the label shape.",
  "| `theMaterial` | [`Mx3dGeMaterial`](Mx3dGeMaterial.md) | 材质对象。 |": "|The Material | [Mx3dGeMaterial. md] | Material object|",
  "设置标签名称。": "Set the label name.",
  "| `theName` | `string` | 标签名称。 |": "|TheName | string | Label name|",
  "设置标签的形状。": "Set the shape of the label.",
  "设置标签形状的纹理。": "Set the texture of the label shape.",
  "| `theFilePath` | `string` | `undefined` | 纹理文件路径。 |": "|TheFilePath | string | undefined | Texture file path|",
  "| `theScaleU` | `number` | `1` | U 方向缩放比例，默认值为 1。 |": "|TheScaleU | number | 1 | U-direction scaling ratio, default value is 1|",
  "| `theScaleV` | `number` | `1` | V 方向缩放比例，默认值为 1。 |": "|TheScaleV | number | 1 | V-direction scaling ratio, default value is 1|",
  "| `theRepeatU` | `number` | `1` | U 方向重复次数，默认值为 1。 |": "|The RepeatU | number | 1 | number of repetitions in the U direction, with a default value of 1|",
  "| `theRepeatV` | `number` | `1` | V 方向重复次数，默认值为 1。 |": "|The RepeatV | number | 1 | number of repetitions in the V direction, with a default value of 1|",
  "| `theOriginU` | `number` | `0` | U 方向起始位置，默认值为 0。 |": "|The OriginU | number | 0 | U direction starting position, default value is 0|",
  "| `theOriginV` | `number` | `0` | V 方向起始位置，默认值为 0。 |": "|The OriginV | number | 0 | starting position in the V direction, with a default value of 0|",
  "[mxcad_3d API 文档](../README.md) / Mx3dDbObject": "[mxcad_3d API Document](../README. md)/Mx3dDbObject",
  "数据库对象基类": "Database Object Base Class",
  "[mxcad_3d API 文档](../README.md) / Mx3dDimAngle": "[mxcad_3d API Document](../README. md)/Mx3dDimAngle",
  "构造角度尺寸，针对指定的两条交叉边。": "Construct angle dimensions for the specified two intersecting edges.",
  "| `theFirstEdge` | [`Mx3dShapeEdge`](Mx3dShapeEdge.md) | 第一条边。 |": "|The FirstEdge | [Mx3dShapeEdge] (Mx3dShapeEdge. md) | The first edge|",
  "| `theSecondEdge` | [`Mx3dShapeEdge`](Mx3dShapeEdge.md) | 第二条边。 |": "|The Second Edge | [Mx3dShapeEdge] (Mx3dShapeEdge. md) | The second edge|",
  "构造角度尺寸，针对指定的三点。": "Construct angle dimensions for the specified three points.",
  "| `theFirstPoint` | [`Mx3dGePoint`](Mx3dGePoint.md) | 第一点。 |": "|The FirstPoint | [Mx3dGePoint] (Mx3dGePoint. md) | The first point|",
  "| `theSecondPoint` | [`Mx3dGePoint`](Mx3dGePoint.md) | 第二点（角度中心点）。 |": "|The Second Point | [Mx3dGePoint] (Mx3dGePoint. md) | The second point (angular center point)|",
  "| `theThirdPoint` | [`Mx3dGePoint`](Mx3dGePoint.md) | 第三点。 |": "|The Third Point | [Mx3dGePoint] (Mx3dGePoint. md) | The third point|",
  "返回角度的中心点。": "Return the center point of the angle.",
  "返回角度的第一点。": "Return to the first point of the angle.",
  "返回第一个形状对象。": "Return the first shape object.",
  "返回箭头可见性类型。": "Return arrow visibility type.",
  "返回显示单位字符串。": "Return the display unit string.",
  "返回尺寸线位置距离。": "Return the distance of the dimension line position.",
  "返回几何类型。": "Return the geometric type.",
  "返回模型单位字符串。": "Return the model unit string.",
  "返回角度的平面。": "Return the plane of the angle.",
  "返回文本位置点。": "Return the text location point.",
  "返回当前角度类型。": "Return the current angle type.",
  "返回角度值。": "Return the angle value.",
  "返回文本位置是否自定义。": "Return whether the text position is customized.",
  "返回是否有效。": "Return whether it is valid.",
  "返回尺寸的类型。": "Return the type of size.",
  "返回角度的第二点。": "Return to the second point of the angle.",
  "返回第二个形状对象。": "Return the second shape object.",
  "返回二维文本选择公差。": "Return the two-dimensional text and select the tolerance.",
  "设置箭头可见性类型。": "Set the arrow visibility type.",
  "| `theType` | [`MxTypeOfAngleArrowVisibility`](../enums/MdGe.MxTypeOfAngleArrowVisibility.md) | 箭头可见性类型。 |": "|` theType ` | [` MxTypeOfAngleArrowVisibility `] (../enums/MdGe. MxTypeOfAngleArrowVisibility. md) | Arrow visibility type|",
  "设置计算值。": "Set the calculated value.",
  "设置自定义平面。": "Set a custom plane.",
  "| `thePlane` | [`Mx3dGePlane`](Mx3dGePlane.md) | 自定义平面。 |": "|ThePlane | [Mx3dGePlane] (Mx3dGePlane. md) | Custom Plane|",
  "设置自定义值。": "Set custom values.",
  "| `theValue` | `number` | 自定义角度值。 |": "|` theValue ` | ` number ` | Customize angle values|",
  "设置尺寸外观。": "Set the size and appearance.",
  "| `theDimensionAspect` | [`Mx3dAspectDim`](Mx3dAspectDim.md) | 尺寸外观。 |": "|TheDimensionAspect | [Mx3dAspectDim] (Mx3dAspectDim. md) | Size and appearance|",
  "设置显示单位字符串。": "Set the display unit string.",
  "| `theUnits` | `string` | 显示单位。 |": "|TheUnits | String | Display units|",
  "设置尺寸线位置距离。": "Set the position distance of the dimension line.",
  "| `theFlyout` | `number` | 尺寸线位置距离。 |": "|The Flyout | Number | Position distance of the dimension line|",
  "设置测量几何体为圆锥面。": "Set the measurement geometry to a conical surface.",
  "| `theCone` | [`Mx3dShapeFace`](Mx3dShapeFace.md) | 圆锥面。 |": "|The Cone | [Mx3dShapeFace] (Mx3dShapeFace. md) | Conical surface|",
  "设置测量几何体为两条交叉边。": "Set the measurement geometry to two intersecting edges.",
  "设置测量几何体为三点。": "Set the measurement geometry to three points.",
  "| `theThridPoint` | [`Mx3dGePoint`](Mx3dGePoint.md) | 第三点。 |": "|TheThridPoint | [Mx3dGePoint] (Mx3dGePoint. md) | Third point|",
  "设置模型单位字符串。": "Set the model unit string.",
  "| `theUnits` | `string` | 模型单位。 |": "|TheUnits | String | Model units|",
  "设置二维文本选择公差。": "Set tolerance for selecting 2D text.",
  "| `theTol` | `number` | 选择公差。 |": "|TheTol | Number | Select the tolerance|",
  "设置文本位置。": "Set the text position.",
  "| `theTextPos` | [`Mx3dGePoint`](Mx3dGePoint.md) | 文本位置点。 |": "|TheTextPos | [Mx3dGePoint] (Mx3dGePoint. md) | Text position point|",
  "设置角度类型。": "Set the angle type.",
  "| `theType` | [`MxTypeOfAngle`](../enums/MdGe.MxTypeOfAngle.md) | 角度类型。 |": "|TheType | [MxTypeOfAngle] (../enums/MdGe. MxTypeOfAngle. md) | Angle type|",
  "返回第三个形状对象。": "Return the third shape object.",
  "取消设置自定义平面。": "Cancel setting custom plane.",
  "取消设置固定文本位置。": "Cancel setting fixed text position.",
  "[mxcad_3d API 文档](../README.md) / Mx3dDimDiameter": "[mxcad_3d API documentation](../README. md)/Mx3dDimDiameter",
  "构造直径尺寸，针对指定的圆形。": "Construct diameter dimensions for the specified circle.",
  "| `theCircle` | [`Mx3dGeCircle`](Mx3dGeCircle.md) | 要测量的圆形。 |": "|The Circle | [Mx3dGeCircle] (Mx3dGeCircle. md) | The circle to be measured|",
  "构造直径尺寸，针对指定的圆形，并按照给定的平面进行定向。": "Construct a diameter dimension for a specified circle and orient it according to a given plane.",
  "| `thePlane` | [`Mx3dGePlane`](Mx3dGePlane.md) | 定义尺寸首选定向的平面。 |": "|ThePlane | [Mx3dGePlane] (Mx3dGePlane. md) | Define the preferred orientation plane for size|",
  "返回圆上的锚点，用于此直径尺寸。": "Return the anchor point on the circle for this diameter dimension.",
  "返回该尺寸正在测量的圆形。": "Return the circle being measured for this size.",
  "获取尺寸线位置距离。": "Obtain the distance of the dimension line position.",
  "获取几何类型。": "Get the geometric type.",
  "获取当前的平面。": "Get the current plane.",
  "返回当前的平面。": "Return to the current plane.",
  "获取文本位置。": "Get the text location.",
  "获取当前的尺寸值。": "Get the current size value.",
  "返回当前的尺寸值。": "Return the current size value.",
  "判断文本位置是否为自定义。": "Determine whether the text position is customized.",
  "返回布尔值，表示文本位置是否为自定义。": "Returns a Boolean value indicating whether the text position is custom.",
  "判断当前尺寸是否有效。": "Determine if the current size is valid.",
  "返回布尔值，表示尺寸是否有效。": "Return a Boolean value indicating whether the size is valid.",
  "获取尺寸类型。": "Obtain the size type.",
  "返回尺寸类型。": "Return size type.",
  "获取二维文本的选择容差。": "Obtain the selection tolerance for 2D text.",
  "返回二维文本的选择容差。": "Return the selection tolerance of two-dimensional text.",
  "设置计算的尺寸值。": "Set the calculated size value.",
  "设置自定义尺寸值。": "Set custom size values.",
  "| `theValue` | `number` | 自定义尺寸值。 |": "|` theValue ` | ` number ` | Customize size values|",
  "设置尺寸的显示外观。": "Set the display appearance of the size.",
  "设置显示单位。": "Set display units.",
  "| `theUnits` | `string` | 单位字符串。 |": "|TheUnits | String | Unit string|",
  "| `theFlyout` | `number` | 尺寸线位置距离值。 |": "|The Flyout | number | dimension line position distance value|",
  "设置要测量的几何体。": "Set the geometry to be measured.",
  "设置模型单位。": "Set model units.",
  "设置二维文本的选择容差。": "Set the selection tolerance for 2D text.",
  "| `theTol` | `number` | 容差值。 |": "|TheTol | Number | Tolerance value|",
  "返回正在测量的形状对象。": "Return the shape object being measured.",
  "取消自定义平面。": "Cancel custom plane.",
  "取消固定文本位置。": "Cancel fixed text position.",
  "[mxcad_3d API 文档](../README.md) / Mx3dDimLength": "[mxcad_3d API documentation](../README. md)/Mx3dDimLength",
  "构造一个空的长度尺寸对象。": "Construct an empty length dimension object.",
  "构造长度尺寸，针对指定的边和平面。": "Construct length dimensions for specified edges and planes.",
  "| `theEdge` | [`Mx3dShapeEdge`](Mx3dShapeEdge.md) | 测量的边。 |": "|The Edge | [Mx3dShapeEdge] (Mx3dShapeEdge. md) | The measured edge|",
  "| `thePlane` | [`Mx3dGePlane`](Mx3dGePlane.md) | 测量的平面。 |": "|The Plane | [Mx3dGePlane] (Mx3dGePlane. md) | The measured plane|",
  "构造长度尺寸，针对指定的两点和平面。": "Construct length dimensions for specified two points and a plane.",
  "| `theSecondPoint` | [`Mx3dGePoint`](Mx3dGePoint.md) | 第二点。 |": "|The Second Point | [Mx3dGePoint] (Mx3dGePoint. md) | Second Point|",
  "返回长度尺寸的第一点。": "Return the first point of the length dimension.",
  "第一点。": "The first point.",
  "返回长度尺寸的第一形状对象。": "Return the first shape object of length dimension.",
  "第一形状对象。": "The first shape object.",
  "尺寸线位置距离。": "Distance of dimension line position.",
  "几何类型。": "Geometric type.",
  "获取测量平面。": "Obtain the measurement plane.",
  "测量平面。": "Measure the plane.",
  "文本位置。": "Text location.",
  "获取尺寸值。": "Obtain size values.",
  "检查文本位置是否自定义。": "Check if the text position is customized.",
  "如果文本位置是自定义的，则返回 true；否则，返回 false。": "If the text position is customized, return true; Otherwise, return false.",
  "检查尺寸是否有效。": "Check if the size is valid.",
  "如果尺寸有效，则返回 true；否则，返回 false。": "If the size is valid, return true; Otherwise, return false.",
  "尺寸类型。": "Size type.",
  "返回长度尺寸的第二点。": "Return the second point of the length dimension.",
  "第二点。": "Second point.",
  "返回长度尺寸的第二形状对象。": "Return the second shape object of length dimension.",
  "第二形状对象。": "The second shape object.",
  "获取2D文本选择公差。": "Obtain 2D text selection tolerance.",
  "2D文本选择公差。": "2D text selection tolerance.",
  "| `theValue` | `number` | 自定义值。 |": "|` theValue ` | ` number ` | Custom value|",
  "设置自定义方向。": "Set custom direction.",
  "| `theDirection` | [`Mx3dGeDir`](Mx3dGeDir.md) | 方向。 |": "|The Direction | [Mx3dGeDir] (Mx3dGeDir. md) | Direction|",
  "| `theUseDirection` | `boolean` | 是否使用自定义方向。 |": "|` theUseDirection ` | ` boolean ` | Whether to use a custom direction|",
  "设置测量几何，基于指定的两点和平面。": "Set measurement geometry based on specified two points and a plane.",
  "设置测量几何，基于指定的形状。": "Set the measurement geometry based on the specified shape.",
  "| `theFirstShape` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | 第一形状对象。 |": "|The FirstShape | [Mx3dShapeObject] (Mx3dShapeObject. md) | The first shape object|",
  "| `theSecondShape` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | 第二形状对象。 |": "|The Second Shape | [Mx3dShapeObject] (Mx3dShapeObject. md) | Second Shape Object|",
  "设置2D文本选择公差。": "Set 2D text selection tolerance.",
  "| `theTol` | `number` | 2D文本选择公差。 |": "|TheTol | Number | 2D text selection tolerance|",
  "| `theTextPos` | [`Mx3dGePoint`](Mx3dGePoint.md) | 文本位置。 |": "|TheTextPos | [Mx3dGePoint] (Mx3dGePoint. md) | Text position|",
  "取消自定义平面设置。": "Cancel custom plane settings.",
  "[mxcad_3d API 文档](../README.md) / Mx3dDimObject": "[mxcad_3d API Document](../README. md)/Mx3dDimObject",
  "尺寸标注的基类": "Base class for dimension annotation",
  "[mxcad_3d API 文档](../README.md) / Mx3dDimRadius": "[mxcad_3d API documentation](../README. md)/Mx3dDimRadius",
  "构造半径尺寸，针对指定的圆形。": "Construct radius dimensions for the specified circle.",
  "构造半径尺寸，针对指定的圆形，并按照给定的锚点进行定向。": "Construct a radius dimension for a specified circle and orient it according to the given anchor points.",
  "| `theAnchorPoint` | [`Mx3dGePoint`](Mx3dGePoint.md) | 用于定向的锚点，必须位于圆上。 |": "|The AnchorPoint | [Mx3dGePoint] (Mx3dGePoint. md) | The anchor point used for orientation must be located on a circle|",
  "获取圆上的锚点，用于此半径尺寸。": "Obtain anchor points on the circle for this radius dimension.",
  "返回圆上的锚点。": "Return the anchor point on the circle.",
  "获取正在测量的圆形。": "Get the circle being measured.",
  "获取尺寸平面。": "Obtain the dimension plane.",
  "返回尺寸平面。": "Return to the dimension plane.",
  "返回文本位置。": "Return the text location.",
  "返回尺寸值。": "Return the size value.",
  "检查文本位置是否为自定义。": "Check if the text position is customized.",
  "返回是否为自定义文本位置。": "Return whether it is a custom text location.",
  "检查该半径尺寸是否有效。": "Check if the radius size is valid.",
  "返回2D文本选择公差。": "Return 2D text to select tolerance.",
  "设置自定义的尺寸值。": "Set custom size values.",
  "| `theValue` | `number` | 自定义的尺寸值。 |": "|TheValue | Number | Custom size value|",
  "设置尺寸的外观。": "Set the appearance of the size.",
  "| `theDimensionAspect` | [`Mx3dAspectDim`](Mx3dAspectDim.md) | 尺寸的外观。 |": "|TheDimensionAspect | [Mx3dAspectDim] (Mx3dAspectDim. md) | Appearance of dimensions|",
  "设置测量的圆形。": "Set the circle for measurement.",
  "设置测量的圆形，并指定锚点。": "Set the measured circle and specify the anchor point.",
  "| `theHasAnchor` | `boolean` | 是否使用锚点。 |": "|'theHasAnchor '|' boolean '| Whether to use anchor points|",
  "| `theTextPos` | [`Mx3dGePoint`](Mx3dGePoint.md) | 文本的位置。 |": "|TheTextPos | [Mx3dGePoint] (Mx3dGePoint. md) | The position of the text|",
  "获取测量的形状。": "Obtain the measured shape.",
  "返回测量的形状。": "Return the measured shape.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeAxis": "[mxcad_3d API documentation](../README. md)/Mx3dGeAxis",
  "表示一个轴": "Representing an axis",
  "默认构造": "Default Construction",
  "构造函数": "Constructor function",
  "| `theLoc` | `UniPoint` | 轴的原点 |": "|TheLoc | UniPoint | Origin of the axis|",
  "| `theDir` | `UniDir` | 轴的方向 |": "|The Direction of the Axis | UniDir|",
  "获取轴的方向": "Obtain the direction of the axis",
  "方向": "direction",
  "获取轴的原点": "Obtain the origin of the axis",
  "原点": "origin",
  "设置轴的方向": "Set the direction of the axis",
  "| `theDir` | [`Mx3dGeDir`](Mx3dGeDir.md) | 方向 |": "|TheDir | [Mx3dGeDir] (Mx3dGeDir. md) | Direction|",
  "设置轴的原点": "Set the origin of the axis",
  "| `theLoc` | `UniPoint` | 原点 |": "|TheLoc | UniPoint | Origin|",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeBndBox": "[mxcad_3d API documentation](../README. md)/Mx3dGeBendBox",
  "表示三维空间中的一个包围盒。": "Represents a bounding box in three-dimensional space.",
  "提供构造函数以及操作包围盒的方法，包括设置、更新、变换和检查等。\r": "Provide constructors and methods for manipulating bounding boxes, including setting, updating, transforming, and checking.",
  "包围盒类主要用于空间中的包围体计算与操作，通常用于碰撞检测、空间分割等场景。": "The bounding box class is mainly used for calculating and manipulating bounding boxes in space, and is typically used in scenarios such as collision detection and spatial segmentation.",
  "默认构造一个空的包围盒。": "Construct an empty bounding box by default.",
  "使用给定的最小点和最大点构造一个包围盒。": "Construct a bounding box using the given minimum and maximum points.",
  "| `theMin` | [`Mx3dGePoint`](Mx3dGePoint.md) | 包围盒的最小点。 |": "|TheMin | [Mx3dGePoint] (Mx3dGePoint. md) | The minimum point of the bounding box|",
  "| `theMax` | [`Mx3dGePoint`](Mx3dGePoint.md) | 包围盒的最大点。 |": "|TheMax | [Mx3dGePoint] (Mx3dGePoint. md) | The maximum point of the bounding box|",
  "设置包围盒的方向。": "Set the direction of the bounding box.",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 包围盒的参考点。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | The reference point of the bounding box|",
  "| `D` | [`Mx3dGeDir`](Mx3dGeDir.md) | 包围盒的方向。 |": "|D | [Mx3dGeDir] (Mx3dGeDir. md) | The direction of the bounding box|",
  "将包围盒设置为一个无效状态（空的包围盒）。": "Set the bounding box to an invalid state (empty bounding box).",
  "将包围盒设置为包含整个空间。": "Set the bounding box to contain the entire space.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeCircle": "[mxcad_3d API Document](../README. md)/Mx3dGeCircuit",
  "非参数几何圆": "Non parametric geometric circle",
  "创建一个默认的圆对象。": "Create a default circular object.",
  "创建一个带有坐标系和半径的圆对象。": "Create a circular object with a coordinate system and radius.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 坐标系。 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Coordinate system|",
  "| `theRadius` | `number` | 圆的半径。 |": "|TheRadius | Number | The radius of a circle|",
  "返回圆的面积。": "Return the area of a circle.",
  "圆的面积。": "The area of a circle.",
  "返回圆的轴。": "Return the axis of the circle.",
  "圆的轴。": "The axis of a circle.",
  "判断一个点是否在圆上。": "Determine whether a point is on a circle.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Point|",
  "| `theLinearTolerance` | `number` | 线性容差。 |": "|The LinearTolerance | Number | Linear Tolerance|",
  "如果点在圆上返回true，否则返回false。": "If the point is on a circle, return true; otherwise, return false.",
  "计算圆到一个点的距离。": "Calculate the distance from a circle to a point.",
  "距离值。": "Distance value.",
  "返回圆的周长。": "Return the circumference of a circle.",
  "圆的周长。": "The circumference of a circle.",
  "返回圆的位置。": "Return the position of the circle.",
  "圆的位置点。": "The position point of the circle.",
  "根据一个轴镜像当前圆。": "Mirror the current circle based on an axis.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 镜像轴。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Mirror axis|",
  "根据一个坐标系镜像当前圆。": "Mirror the current circle based on a coordinate system.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 镜像坐标系。 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Mirror coordinate system|",
  "根据一个点镜像当前圆。": "Mirror the current circle based on a point.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 镜像点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Mirror point|",
  "返回根据一个轴镜像后的圆。": "Return the circle mirrored based on an axis.",
  "镜像后的圆。": "The circle after mirroring.",
  "返回根据一个坐标系镜像后的圆。": "Return the circle mirrored based on a coordinate system.",
  "返回根据一个点镜像后的圆。": "Return the circle mirrored based on a point.",
  "返回圆的坐标系。": "Return the coordinate system of a circle.",
  "圆的坐标系。": "The coordinate system of a circle.",
  "返回圆的半径。": "Return the radius of the circle.",
  "圆的半径。": "The radius of a circle.",
  "旋转当前圆。": "Rotate the current circle.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 旋转轴。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Rotation axis|",
  "| `theAng` | `number` | 旋转角度。 |": "|TheAng | Number | Rotation angle|",
  "返回旋转后的圆。": "Return the rotated circle.",
  "旋转后的圆。": "The rotated circle.",
  "缩放当前圆。": "Scale the current circle.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 缩放中心点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Zoom center point|",
  "| `theS` | `number` | 缩放比例。 |": "|TheS | Number | Scale ratio|",
  "返回缩放后的圆。": "Return the scaled circle.",
  "缩放后的圆。": "The scaled circle.",
  "设置圆的轴。": "Set the axis of the circle.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 圆的轴。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | The axis of a circle|",
  "设置圆的位置。": "Set the position of the circle.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 圆的位置点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | The position point of the circle|",
  "设置圆的坐标系。": "Set the coordinate system for the circle.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 圆的坐标系。 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | The coordinate system of a circle|",
  "设置圆的半径。": "Set the radius of the circle.",
  "计算圆到一个点的平方距离。": "Calculate the square distance from a circle to a point.",
  "平方距离值。": "Square distance value.",
  "根据变换矩阵变换当前圆。": "Transform the current circle according to the transformation matrix.",
  "| `theT` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 变换矩阵。 |": "|` theT ` | [` Mx3dGeTsf `] (Mx3dGeTsf. md) | Transform matrix|",
  "返回根据变换矩阵变换后的圆。": "Return the circle transformed according to the transformation matrix.",
  "变换后的圆。": "The transformed circle.",
  "根据两个点平移当前圆。": "Translate the current circle based on two points.",
  "| `theP1` | [`Mx3dGePoint`](Mx3dGePoint.md) | 起点。 |": "|TheP1 | [Mx3dGePoint] (Mx3dGePoint. md) | Starting point|",
  "| `theP2` | [`Mx3dGePoint`](Mx3dGePoint.md) | 终点。 |": "|TheP2 | [Mx3dGePoint] (Mx3dGePoint. md) | Endpoint|",
  "根据向量平移当前圆。": "Translate the current circle based on the vector.",
  "| `theV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 平移向量。 |": "|TheV | [Mx3dGeVec] (Mx3dGeVec. md) | Translation vector|",
  "返回根据两个点平移后的圆。": "Return the circle translated based on two points.",
  "平移后的圆。": "The circle after translation.",
  "返回根据向量平移后的圆。": "Return the circle translated according to the vector.",
  "返回圆的X轴。": "Return the X-axis of the circle.",
  "圆的X轴。": "The X-axis of a circle.",
  "返回圆的Y轴。": "Return the Y-axis of the circle.",
  "圆的Y轴。": "The Y-axis of a circle.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeColor": "[mxcad_3d API Document](../README. md)/Mx3dGeColor",
  "表示颜色对象的类。": "The class that represents color objects.",
  "创建一个颜色对象。": "Create a color object.",
  "使用颜色名称创建一个颜色对象。": "Create a color object using a color name.",
  "| `theColorName` | [`MxNameOfColor`](../enums/MdGe.MxNameOfColor.md) | 颜色名称。 |": "|TheColorName | [MxNameOfColor] (../enums/MdGe. MxNameOfColor. md) | Color name|",
  "使用 RGB 值和颜色类型创建一个颜色对象。": "Create a color object using RGB values and color types.",
  "| `theR` | `number` | 红色分量。 |": "|TheR | number | red component|",
  "| `theG` | `number` | 绿色分量。 |": "|TheG | Number | Green component|",
  "| `theB` | `number` | 蓝色分量。 |": "|TheB | Number | Blue component|",
  "| `theType` | [`MxTypeOfColor`](../enums/MdGe.MxTypeOfColor.md) | 颜色类型。 |": "|TheType | [MxTypeOfColor] (../enums/MdGe. MxTypeOfColor. md) | Color type|",
  "获取蓝色分量的值。": "Obtain the value of the blue component.",
  "蓝色分量。": "Blue component.",
  "改变颜色的对比度。": "Change the contrast of colors.",
  "| `theDelta` | `number` | 对比度变化量。 |": "|The Delta | number | contrast variation|",
  "改变颜色的强度。": "Change the intensity of the color.",
  "| `theDelta` | `number` | 强度变化量。 |": "|The Delta | number | intensity change|",
  "计算颜色之间的 Delta E2000 差异。": "Calculate the Delta E2000 difference between colors.",
  "| `theOther` | [`Mx3dGeColor`](Mx3dGeColor.md) | 另一个颜色对象。 |": "|TheOther | [Mx3dGeColor] (Mx3dGeColor. md) | Another color object|",
  "Delta E2000 差异值。": "Delta E2000 differential value.",
  "计算颜色之间的距离。": "Calculate the distance between colors.",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 另一个颜色对象。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | Another color object|",
  "颜色距离。": "Color distance.",
  "获取绿色分量的值。": "Obtain the value of the green component.",
  "绿色分量。": "Green component.",
  "获取色调值。": "Obtain color tone values.",
  "色调值。": "Color tone value.",
  "判断颜色是否不同。": "Determine if the colors are different.",
  "是否不同。": "Is it different.",
  "判断颜色是否相同。": "Determine if the colors are the same.",
  "是否相同。": "Are they the same.",
  "获取亮度值。": "Obtain brightness value.",
  "亮度值。": "Brightness value.",
  "获取颜色的名称。": "Get the name of the color.",
  "颜色名称。": "Color name.",
  "获取红色分量的值。": "Obtain the value of the red component.",
  "红色分量。": "The red component.",
  "获取饱和度值。": "Obtain saturation value.",
  "饱和度值。": "Saturation value.",
  "设置颜色的值。": "Set the value of the color.",
  "| `theName` | [`MxNameOfColor`](../enums/MdGe.MxNameOfColor.md) | 颜色名称。 |": "|TheName | [MxNameOfColor] (../enums/MdGe. MxNameOfColor. md) | Color name|",
  "| `theC1` | `number` | 红色分量。 |": "|TheC1 | Number | Red component|",
  "| `theC2` | `number` | 绿色分量。 |": "|TheC2 | Number | Green component|",
  "| `theC3` | `number` | 蓝色分量。 |": "|TheC3 | Number | Blue component|",
  "计算颜色之间的平方距离。": "Calculate the square distance between colors.",
  "颜色平方距离。": "Color squared distance.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeConic": "[mxcad_3d API Document](../README. md)/Mx3dGeeConic",
  "圆锥曲线基类": "Conical Curve Base Class",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeCSYS": "[mxcad_3d API Document](../README. md)/Mx3dGeCSYS",
  "表示通用坐标系的类。": "A class that represents a universal coordinate system.",
  "创建一个默认的坐标系对象。": "Create a default coordinate system object.",
  "使用右手坐标系创建一个坐标系对象。": "Create a coordinate system object using the right-handed coordinate system.",
  "| `csysr` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 右手坐标系对象。 |": "|Csysr | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Right hand coordinate system object|",
  "使用原点和 Z 轴方向创建一个坐标系对象。": "Create a coordinate system object using the origin and Z-axis direction.",
  "| `origin` | [`Mx3dGePoint`](Mx3dGePoint.md) | 坐标系的原点。 |": "|Origin | [Mx3dGePoint] (Mx3dGePoint. md) | The origin of the coordinate system|",
  "| `z_axis` | [`Mx3dGeDir`](Mx3dGeDir.md) | 坐标系的 Z 轴方向。 |": "|The Z-axis direction of the coordinate system is Mx3dGeDir (Mx3dGeDir. md)|",
  "使用原点、Z 轴方向和 X 轴向量创建一个坐标系对象。": "Create a coordinate system object using the origin, Z-axis direction, and X-axis vector.",
  "| `x_vec` | [`Mx3dGeDir`](Mx3dGeDir.md) | 坐标系的 X 轴向量。 |": "|The X-axis vector of the coordinate system [Mx3dGeDir] (Mx3dGeDir. md)|",
  "计算与另一个坐标系的角度。": "Calculate the angle with another coordinate system.",
  "| `other` | [`Mx3dGeCSYS`](Mx3dGeCSYS.md) | 另一个坐标系。 |": "|Other | [Mx3dGeCSYS] (Mx3dGeCSYS. md) | Another coordinate system|",
  "两个坐标系之间的角度。": "The angle between two coordinate systems.",
  "获取坐标系的轴。": "Obtain the axes of the coordinate system.",
  "坐标系的轴。": "The axis of the coordinate system.",
  "获取右手坐标系。": "Obtain the right-hand coordinate system.",
  "右手坐标系对象。": "Right hand coordinate system object.",
  "判断坐标系是否为直接的。": "Determine whether the coordinate system is direct.",
  "是否为直接的。": "Is it direct.",
  "获取坐标系的方向。": "Obtain the direction of the coordinate system.",
  "坐标系的方向。": "The direction of the coordinate system.",
  "判断坐标系是否与一个轴共面。": "Determine whether the coordinate system is coplanar with an axis.",
  "| `axis` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 轴对象。 |": "|Axis | [Mx3dGeAxis] (Mx3dGeAxis. md) | Axis object|",
  "| `linearTolerance` | `number` | 线性公差。 |": "|Linear Tolerance | Number | Linear Tolerance|",
  "| `angularTolerance` | `number` | 角度公差。 |": "|Angular Tolerance | Number | Angular Tolerance|",
  "是否共面。": "Is it coplanar.",
  "判断坐标系是否与另一个坐标系共面。": "Determine whether the coordinate system is coplanar with another coordinate system.",
  "获取坐标系的原点位置。": "Obtain the origin position of the coordinate system.",
  "坐标系的原点位置。": "The origin position of the coordinate system.",
  "通过一个轴对坐标系进行镜像。": "Mirror the coordinate system through an axis.",
  "| `axis` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 镜像轴。 |": "|Axis | [Mx3dGeAxis] (Mx3dGeAxis. md) | Mirror axis|",
  "通过右手坐标系对当前坐标系进行镜像。": "Mirror the current coordinate system using the right-handed coordinate system.",
  "通过一个点对坐标系进行镜像。": "Mirror the coordinate system through a point.",
  "| `point` | [`Mx3dGePoint`](Mx3dGePoint.md) | 镜像点。 |": "|Point | [Mx3dGePoint] (Mx3dGePoint. md) | Mirror point|",
  "通过一个轴对坐标系进行镜像，并返回镜像后的坐标系对象。": "Mirror the coordinate system through an axis and return the mirrored coordinate system object.",
  "镜像后的坐标系对象。": "Mirrored coordinate system object.",
  "通过右手坐标系对当前坐标系进行镜像，并返回镜像后的坐标系对象。": "Mirror the current coordinate system using the right-hand coordinate system and return the mirrored coordinate system object.",
  "通过一个点对坐标系进行镜像，并返回镜像后的坐标系对象。": "Mirror the coordinate system through a point and return the mirrored coordinate system object.",
  "绕轴旋转坐标系。": "Rotate the coordinate system around the axis.",
  "| `axis` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 旋转轴。 |": "|Axis | [Mx3dGeAxis] (Mx3dGeAxis. md) | Rotation axis|",
  "| `ang` | `number` | 旋转角度。 |": "|'ang' | 'number' | Rotation angle|",
  "绕轴旋转坐标系，并返回旋转后的坐标系对象。": "Rotate the coordinate system around the axis and return the rotated coordinate system object.",
  "旋转后的坐标系对象。": "The rotated coordinate system object.",
  "按比例缩放坐标系。": "Scale the coordinate system proportionally.",
  "| `point` | [`Mx3dGePoint`](Mx3dGePoint.md) | 缩放的基点。 |": "|Point | [Mx3dGePoint] (Mx3dGePoint. md) | The base point for scaling|",
  "| `s` | `number` | 缩放比例。 |": "|S | number | scaling ratio|",
  "按比例缩放坐标系，并返回缩放后的坐标系对象。": "Scale the coordinate system proportionally and return the scaled coordinate system object.",
  "缩放后的坐标系对象。": "The scaled coordinate system object.",
  "设置坐标系的轴。": "Set the axis of the coordinate system.",
  "| `z_axis` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 坐标系的 Z 轴。 |": "|The Z-axis of the coordinate system [Mx3dGeAxis] (Mx3dGeAxis. md)|",
  "设置坐标系的方向。": "Set the direction of the coordinate system.",
  "| `z_dir` | [`Mx3dGeDir`](Mx3dGeDir.md) | 坐标系的 Z 轴方向。 |": "|The Z-axis direction of the coordinate system [Mx3dGeDir] (Mx3dGeDir. md)|",
  "设置坐标系的原点位置。": "Set the origin position of the coordinate system.",
  "| `theX` | `number` | 原点的 X 坐标。 |": "|The X coordinate of the origin|",
  "| `theY` | `number` | 原点的 Y 坐标。 |": "|The Y coordinate of the origin|",
  "| `theZ` | `number` | 原点的 Z 坐标。 |": "|The Z coordinate of the origin|",
  "设置坐标系的 X 轴方向。": "Set the X-axis direction of the coordinate system.",
  "| `x_dir` | [`Mx3dGeDir`](Mx3dGeDir.md) | X 轴方向。 |": "|X_dir | [Mx3dGeDir] (Mx3dGeDir. md) | X-axis direction|",
  "设置坐标系的 Y 轴方向。": "Set the Y-axis direction of the coordinate system.",
  "| `y_dir` | [`Mx3dGeDir`](Mx3dGeDir.md) | Y 轴方向。 |": "|Y_dir | [Mx3dGeDir] (Mx3dGeDir. md) | Y-axis direction|",
  "变换坐标系。": "Transform the coordinate system.",
  "| `t` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 变换对象。 |": "|T | [Mx3dGetStrf] (Mx3dGetStrf. md) | Transform the object|",
  "变换坐标系，并返回变换后的坐标系对象。": "Transform the coordinate system and return the transformed coordinate system object.",
  "变换后的坐标系对象。": "The transformed coordinate system object.",
  "通过两个点平移坐标系。": "Translate the coordinate system through two points.",
  "| `point1` | [`Mx3dGePoint`](Mx3dGePoint.md) | 起点。 |": "|Point1 | [Mx3dGePoint] (Mx3dGePoint. md) | Starting point|",
  "| `point2` | [`Mx3dGePoint`](Mx3dGePoint.md) | 终点。 |": "|Point2 | [Mx3dGePoint] (Mx3dGePoint. md) | Endpoint|",
  "按向量平移坐标系。": "Translate the coordinate system by vector.",
  "| `vec` | [`Mx3dGeVec`](Mx3dGeVec.md) | 平移向量。 |": "|Vec | [Mx3dGeVec] (Mx3dGeVec. md) | Translation vector|",
  "通过两个点平移坐标系，并返回平移后的坐标系对象。": "Translate the coordinate system through two points and return the translated coordinate system object.",
  "平移后的坐标系对象。": "Translated coordinate system object.",
  "按向量平移坐标系，并返回平移后的坐标系对象。": "Translate the coordinate system by vector and return the translated coordinate system object.",
  "获取坐标系的 X 轴方向。": "Obtain the X-axis direction of the coordinate system.",
  "X 轴方向。": "X-axis direction.",
  "反转 X 轴方向。": "Reverse the X-axis direction.",
  "获取坐标系的 Y 轴方向。": "Obtain the Y-axis direction of the coordinate system.",
  "Y 轴方向。": "Y-axis direction.",
  "反转 Y 轴方向。": "Reverse the Y-axis direction.",
  "反转 Z 轴方向。": "Reverse the Z-axis direction.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeCSYSR": "[mxcad_3d API Document](../README. md)/Mx3dGeCSYSR",
  "表示右手坐标系的类。": "The class representing the right-handed coordinate system.",
  "创建一个默认的右手坐标系对象。": "Create a default right-handed coordinate system object.",
  "使用原点、Z 轴方向和 X 轴向量创建一个右手坐标系对象。": "Create a right-handed coordinate system object using the origin, Z-axis direction, and X-axis vector.",
  "使用原点、Z 轴方向创建一个右手坐标系对象，X Y 方向自动确定。": "Create a right-handed coordinate system object using the origin and Z-axis direction, with the X and Y directions automatically determined.",
  "计算与另一个右手坐标系的角度。": "Calculate the angle with another right-handed coordinate system.",
  "| `theOther` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 另一个右手坐标系。 |": "|` theOther ` | [` Mx3dGeCSYSR `] (Mx3dGeCSYSR. md) | Another right-handed coordinate system|",
  "获取右手坐标系的轴。": "Obtain the axis of the right-hand coordinate system.",
  "右手坐标系的轴。": "The axis of the right-hand coordinate system.",
  "获取右手坐标系的 Z 轴方向。": "Obtain the Z-axis direction of the right-hand coordinate system.",
  "Z 轴方向。": "Z-axis direction.",
  "判断右手坐标系是否与一个轴共面。": "Determine whether the right-hand coordinate system is coplanar with an axis.",
  "| `A1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 轴对象。 |": "|A1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Axis object|",
  "| `LinearTolerance` | `number` | 线性公差。 |": "|LinearTolerance | number | Linear tolerance|",
  "| `AngularTolerance` | `number` | 角度公差。 |": "|AngularTolerance | number | Angle tolerance|",
  "判断右手坐标系是否与另一个右手坐标系共面。": "Determine whether the right-handed coordinate system is coplanar with another right-handed coordinate system.",
  "| `Other` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 另一个右手坐标系。 |": "|Other | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Another right-handed coordinate system|",
  "获取右手坐标系的原点位置。": "Obtain the origin position of the right-hand coordinate system.",
  "原点位置。": "Origin position.",
  "通过一个轴对右手坐标系进行镜像。": "Mirror the right-handed coordinate system through an axis.",
  "| `A1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 镜像轴。 |": "|A1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Mirror axis|",
  "通过右手坐标系对当前右手坐标系进行镜像。": "Mirror the current right-handed coordinate system using the right-handed coordinate system.",
  "| `A2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 右手坐标系对象。 |": "|A2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Right hand coordinate system object|",
  "通过一个点对右手坐标系进行镜像。": "Mirror the right-hand coordinate system through a point.",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 镜像点。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Mirror point|",
  "通过一个轴对右手坐标系进行镜像，并返回镜像后的右手坐标系对象。": "Mirror the right-handed coordinate system through an axis and return the mirrored right-handed coordinate system object.",
  "镜像后的右手坐标系对象。": "Mirror the right-handed coordinate system object.",
  "通过右手坐标系对当前右手坐标系进行镜像，并返回镜像后的右手坐标系对象。": "Mirror the current right-handed coordinate system using the right-handed coordinate system and return the mirrored right-handed coordinate system object.",
  "通过一个点对右手坐标系进行镜像，并返回镜像后的右手坐标系对象。": "Mirror the right-handed coordinate system through a point and return the mirrored right-handed coordinate system object.",
  "绕轴旋转右手坐标系。": "Rotate the right-hand coordinate system around the axis.",
  "绕轴旋转右手坐标系，并返回旋转后的右手坐标系对象。": "Rotate the right-handed coordinate system around the axis and return the rotated right-handed coordinate system object.",
  "旋转后的右手坐标系对象。": "Rotate the right-handed coordinate system object.",
  "对右手坐标系进行缩放。": "Scale the right-hand coordinate system.",
  "对右手坐标系进行缩放，并返回缩放后的右手坐标系对象。": "Scale the right-handed coordinate system and return the scaled right-handed coordinate system object.",
  "缩放后的右手坐标系对象。": "The scaled right-handed coordinate system object.",
  "设置右手坐标系的 Z 轴方向。": "Set the Z-axis direction of the right-hand coordinate system.",
  "| `z_dir` | [`Mx3dGeDir`](Mx3dGeDir.md) | Z 轴方向。 |": "|Z-dir | [Mx3dGeDir] (Mx3dGeDir. md) | Z-axis direction|",
  "设置右手坐标系的原点位置。": "Set the origin position of the right-hand coordinate system.",
  "设置右手坐标系的 X 轴方向。": "Set the X-axis direction of the right-hand coordinate system.",
  "| `x_dir` | [`Mx3dGePoint`](Mx3dGePoint.md) | X 轴方向。 |": "|X_dir | [Mx3dGePoint] (Mx3dGePoint. md) | X-axis direction|",
  "设置右手坐标系的 Y 轴方向。": "Set the Y-axis direction of the right-hand coordinate system.",
  "变换右手坐标系。": "Transform the right-handed coordinate system.",
  "变换右手坐标系，并返回变换后的右手坐标系对象。": "Transform the right-handed coordinate system and return the transformed right-handed coordinate system object.",
  "变换后的右手坐标系对象。": "The transformed right-handed coordinate system object.",
  "通过两个点平移右手坐标系。": "Translate the right-hand coordinate system through two points.",
  "通过向量平移右手坐标系。": "Translate the right-hand coordinate system through vectors.",
  "通过两个点平移右手坐标系，并返回平移后的右手坐标系对象。": "Translate the right-handed coordinate system by two points and return the translated right-handed coordinate system object.",
  "平移后的右手坐标系对象。": "Translated right-handed coordinate system object.",
  "通过向量平移右手坐标系，并返回平移后的右手坐标系对象。": "Translate the right-handed coordinate system through vectors and return the translated right-handed coordinate system object.",
  "获取右手坐标系的 X 轴方向。": "Obtain the X-axis direction of the right-hand coordinate system.",
  "获取右手坐标系的 Y 轴方向。": "Obtain the Y-axis direction of the right-handed coordinate system.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeCurve": "[mxcad_3d API Document](../README. md)/Mx3dGeCurve",
  "曲线基类": "Curve base class",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeCylinder": "[mxcad_3d API Document](../README. md)/Mx3dGeCylinder",
  "表示圆柱体的类。": "Represents a class of cylinders.",
  "创建一个默认的圆柱体对象。": "Create a default cylindrical object.",
  "使用坐标系和半径创建一个圆柱体对象。": "Create a cylindrical object using a coordinate system and radius.",
  "| `theA3` | [`Mx3dGeCSYS`](Mx3dGeCSYS.md) | 坐标系。 |": "|TheA3 | [Mx3dGeCSYS] (Mx3dGeCSYS. md) | Coordinate system|",
  "| `theRadius` | `number` | 圆柱体的半径。 |": "|TheRadius | Number | The radius of a cylinder|",
  "获取圆柱体的轴。": "Obtain the axis of the cylinder.",
  "圆柱体的轴。": "The axis of a cylinder.",
  "检查圆柱体的方向是否为正向。": "Check if the direction of the cylinder is positive.",
  "是否为正向。": "Is it positive.",
  "获取圆柱体的原点位置。": "Get the origin position of the cylinder.",
  "通过一个轴对圆柱体进行镜像。": "Mirror the cylinder through an axis.",
  "通过右手坐标系对圆柱体进行镜像。": "Mirror the cylinder using the right-hand coordinate system.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 右手坐标系。 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Right hand coordinate system|",
  "通过一个点对圆柱体进行镜像。": "Mirror a cylinder through a point.",
  "通过一个轴对圆柱体进行镜像，并返回镜像后的圆柱体对象。": "Mirror a cylinder through an axis and return the mirrored cylinder object.",
  "镜像后的圆柱体对象。": "The mirrored cylindrical object.",
  "通过右手坐标系对圆柱体进行镜像，并返回镜像后的圆柱体对象。": "Mirror the cylinder using the right-hand coordinate system and return the mirrored cylinder object.",
  "通过一个点对圆柱体进行镜像，并返回镜像后的圆柱体对象。": "Mirror a cylinder through a point and return the mirrored cylinder object.",
  "获取圆柱体的位置。": "Get the position of the cylinder.",
  "圆柱体的位置。": "The position of the cylinder.",
  "获取圆柱体的半径。": "Get the radius of the cylinder.",
  "圆柱体的半径。": "The radius of a cylinder.",
  "绕轴旋转圆柱体。": "Rotate the cylinder around its axis.",
  "绕轴旋转圆柱体，并返回旋转后的圆柱体对象。": "Rotate the cylinder around its axis and return the rotated cylinder object.",
  "旋转后的圆柱体对象。": "The rotated cylindrical object.",
  "对圆柱体进行缩放。": "Scale the cylinder.",
  "对圆柱体进行缩放，并返回缩放后的圆柱体对象。": "Scale the cylinder and return the scaled cylinder object.",
  "缩放后的圆柱体对象。": "The scaled cylindrical object.",
  "设置圆柱体的轴。": "Set the axis of the cylinder.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 圆柱体的轴。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Axis of the cylinder|",
  "设置圆柱体的原点位置。": "Set the origin position of the cylinder.",
  "| `theLoc` | [`Mx3dGePoint`](Mx3dGePoint.md) | 原点位置。 |": "|TheLoc | [Mx3dGePoint] (Mx3dGePoint. md) | Origin position|",
  "设置圆柱体的位置。": "Set the position of the cylinder.",
  "设置圆柱体的半径。": "Set the radius of the cylinder.",
  "| `theR` | `number` | 圆柱体的半径。 |": "|TheR | Number | The radius of the cylinder|",
  "创建一个 Mx3dShapeObject 对象，表示圆柱体的形状。": "Create an Mx3dShapeObject object to represent the shape of a cylinder.",
  "| `H` | `number` | 圆柱体的高度。 |": "|H | number | The height of the cylinder|",
  "| `Angle?` | `number` | 可选参数，表示圆柱体的角度。 |": "| `Angle?` | ` Number ` | Optional parameter, representing the angle of the cylinder|",
  "返回一个新的 Mx3dShapeObject 对象，表示圆柱体的形状。": "Return a new Mx3dShapeObject object representing the shape of a cylinder.",
  "变换圆柱体。": "Transform the cylinder.",
  "变换圆柱体，并返回变换后的圆柱体对象。": "Transform the cylinder and return the transformed cylinder object.",
  "变换后的圆柱体对象。": "The transformed cylindrical object.",
  "将圆柱体的位置沿着两个点之间的直线进行平移。": "Translate the position of the cylinder along a straight line between two points.",
  "| `theP1` | [`Mx3dGePoint`](Mx3dGePoint.md) | 第一个点，用于确定平移的起点。 |": "|TheP1 | [Mx3dGePoint] (Mx3dGePoint. md) | The first point used to determine the starting point of translation|",
  "| `theP2` | [`Mx3dGePoint`](Mx3dGePoint.md) | 第二个点，用于确定平移的终点。 |": "|TheP2 | [Mx3dGePoint] (Mx3dGePoint. md) | The second point is used to determine the endpoint of the translation|",
  "通过向量平移圆柱体。": "Translate the cylinder through a vector.",
  "创建一个新的圆柱体对象，位置沿着两个点之间的直线进行平移。": "Create a new cylindrical object and translate its position along a line between two points.",
  "返回一个新的 Mx3dGeCylinder 对象，平移后的圆柱体。": "Return a new Mx3dGeCylinder object, the translated cylinder.",
  "通过向量平移圆柱体，并返回平移后的圆柱体对象。": "Translate the cylinder through a vector and return the translated cylinder object.",
  "平移后的圆柱体对象。": "Translated cylindrical object.",
  "反转圆柱体的 U 参数方向。": "Reverse the U-parameter direction of the cylinder.",
  "反转圆柱体的 V 参数方向。": "Reverse the V-parameter direction of the cylinder.",
  "获取圆柱体的 X 轴。": "Obtain the X-axis of the cylinder.",
  "X 轴。": "X-axis.",
  "获取圆柱体的 Y 轴。": "Obtain the Y-axis of the cylinder.",
  "Y 轴。": "Y-axis.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeDir": "[mxcad_3d API Document](../README. md)/Mx3dGeDir",
  "表示方向的向量，模长始终为1": "The vector representing direction always has a modulus of 1",
  "| `theXv` | `number` | X方向 |": "|TheXv | number | X direction|",
  "| `theYv` | `number` | Y方向 |": "|TheYv | number | Y direction|",
  "| `theZv` | `number` | Z方向 |": "|TheZv | number | Z direction|",
  "获取与另一个方向的夹角，范围[0,PI]": "Obtain the angle with another direction, range [0, PI]",
  "| `theOther` | [`Mx3dGeDir`](Mx3dGeDir.md) | 另一个方向 |": "|TheOther | [Mx3dGeDir] (Mx3dGeDir. md) | Another direction|",
  "夹角": "included angle",
  "[me] = [me] ^ theRight，[me]代表自身，^代表叉乘": "[me]=[me] ^ theRight, [me] represents self, ^ represents cross product",
  "| `theRight` | [`Mx3dGeDir`](Mx3dGeDir.md) | 另一个方向向量 |": "|TheRight | [Mx3dGeDir] (Mx3dGeDir. md) | Another direction vector|",
  "[me] ^ (theV1 ^ theV2)，[me]代表自身，^代表叉乘": "[me] ^ (theV1 ^ theV2), [me] represents self, ^ represents cross product",
  "| `theV1` | [`Mx3dGeDir`](Mx3dGeDir.md) | 另一个方向向量 |": "|TheV1 | [Mx3dGeDir] (Mx3dGeDir. md) | Another direction vector|",
  "| `theV2` | [`Mx3dGeDir`](Mx3dGeDir.md) | 另一个方向向量 |": "|TheV2 | [Mx3dGeDir] (Mx3dGeDir. md) | Another direction vector|",
  "[res] ^ (theV1 ^ theV2)，[me]代表自身，[res]代表结果，^代表叉乘": "[res] ^ (theV1 ^ theV2), [me] represents self, [res] represents result, ^ represents cross product",
  "叉乘结果": "Cross product result",
  "[res] = [me] ^ theRight，[me]代表自身，[res]代表结果，^代表叉乘": "[res]=[me] ^ theRight, [me] represents self, [res] represents result, ^ represents cross product",
  "[res] = [me] * theOther，[me]代表自身，[res]代表结果，*代表点乘": "[res]=[me] * theOther, [me] represents self, [res] represents result, * represents dot multiplication",
  "| `theOther` | [`Mx3dGeDir`](Mx3dGeDir.md) | 另一个方向向量 |": "|TheOther | [Mx3dGeDir] (Mx3dGeDir. md) | Another direction vector|",
  "点乘结果": "Point multiplication result",
  "[res] = [me] * (theV1 ^ theV2)，[me]代表自身，[res]代表结果，^代表叉乘，*代表点乘": "[res]=[me] * (theV1 ^ theV2), [me] represents self, [res] represents result, ^ represents cross product, * represents dot product",
  "最后点乘结果": "Final multiplication result",
  "判断是否和另外一个方向相等": "Determine if it is equal to another direction",
  "| `theAngularTolerance` | `number` | 角度精度 |": "|The Angular Tolerance | Number | Angle Accuracy|",
  "是否是同一方向": "Is it in the same direction",
  "判断是否和另外一个方向垂直": "Determine if it is perpendicular to another direction",
  "是否垂直": "Is it vertical",
  "判断是否和另外一个方向相反": "Determine if it is in the opposite direction to another direction",
  "是否相反": "Is it the opposite",
  "判断是否和另外一个方向平行（同向或反向均为平行）": "Determine whether it is parallel to another direction (parallel in either the same or opposite direction)",
  "是否平行": "Is it parallel",
  "按照一个镜像中心方向向量镜像": "Mirror according to a vector in the direction of the mirror center",
  "| `theV` | [`Mx3dGeDir`](Mx3dGeDir.md) | 镜像中心方向 |": "|TheV | [Mx3dGeDir] (Mx3dGeDir. md) | Mirror center direction|",
  "翻转方向": "Flip direction",
  "获取翻转方向后的结果": "Obtain the result after flipping direction",
  "翻转方向后的结果": "The result after flipping the direction",
  "设置X方向的大小": "Set the size in the X direction",
  "| `theX` | `number` | X方向的大小 |": "|TheX | Number | Size in the X direction|",
  "设置X,Y,Z方向的大小": "Set the size in the X, Y, Z directions",
  "| `theXv` | `number` | X方向的大小 |": "|TheXv | Number | Size in the X direction|",
  "| `theYv` | `number` | Y方向的大小 |": "|TheYv | Number | Size in the Y direction|",
  "| `theZv` | `number` | Z方向的大小 |": "|TheZv | Number | Size in the Z direction|",
  "设置Y方向的大小": "Set the size in the Y direction",
  "| `theY` | `number` | Y方向的大小 |": "|TheY | Number | Size in the Y direction|",
  "设置Z方向的大小": "Set the size in the Z direction",
  "| `theZ` | `number` | Z方向的大小 |": "|TheZ | Number | Size in the Z direction|",
  "获取X方向的大小": "Obtain the size in the X direction",
  "X方向的大小": "The size in the X direction",
  "获取Y方向的大小": "Obtain the size in the Y direction",
  "Y方向的大小": "The size in the Y direction",
  "获取Z方向的大小": "Obtain the size in the Z direction",
  "Z方向的大小": "The size in the Z direction",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeEllipse": "[mxcad_3d API Document](../README. md)/Mx3dGeEclipse",
  "表示三维空间中的椭圆对象，继承自Mx3dGeObject类。\r": "Represents an elliptical object in three-dimensional space, inherited from the Mx3dGeObject class.",
  "支持通过不同参数构造椭圆，并提供了丰富的属性访问与操作方法。": "Supports constructing ellipses with different parameters and provides rich attribute access and operation methods.",
  "构造一个未初始化的椭圆实例。": "Construct an uninitialized instance of an ellipse.",
  "根据给定的坐标系和半径构造椭圆。": "Construct an ellipse based on the given coordinate system and radius.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 椭圆所在的坐标系 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | The coordinate system where the ellipse is located|",
  "| `theMajorRadius` | `number` | 主半径 |": "|` theMajorRadius ` | ` number ` | Main radius|",
  "| `theMinorRadius` | `number` | 次半径 |": "|The MinorRadius | Number | Sub radius|",
  "计算并返回椭圆的面积。": "Calculate and return the area of an ellipse.",
  "椭圆的面积": "The area of an ellipse",
  "返回椭圆的轴。": "Return the axis of the ellipse.",
  "椭圆的轴": "The axis of an ellipse",
  "获取椭圆的第一条直接线，是垂直于主轴的直线，位于椭圆上，满足特定几何关系。": "The first direct line of the ellipse is a straight line perpendicular to the main axis, located on the ellipse and satisfying a specific geometric relationship.",
  "直线1": "Line 1",
  "获取椭圆的第二条直接线，是垂直于主轴的直线，位于椭圆上，满足特定几何关系。": "The second direct line of the ellipse is a straight line perpendicular to the main axis, located on the ellipse and satisfying a specific geometric relationship.",
  "直线2": "Line 2",
  "计算并返回椭圆的离心率，即焦距与半长轴之比。": "Calculate and return the eccentricity of the ellipse, which is the ratio of the focal length to the semi major axis.",
  "离心率": "Eccentricity",
  "计算并返回椭圆的焦距，两焦点之间的距离。": "Calculate and return the focal length of the ellipse and the distance between the two focal points.",
  "焦距": "focal length",
  "获取椭圆的第一个焦点。": "Obtain the first focal point of the ellipse.",
  "第一焦点": "First Focus",
  "获取椭圆的第二个焦点。": "Obtain the second focal point of the ellipse.",
  "二焦点": "Two focal points",
  "获取椭圆的当前位置，即中心点。": "Get the current position of the ellipse, which is the center point.",
  "当前位置": "current location",
  "获取椭圆的主半径。": "Obtain the principal radius of the ellipse.",
  "主半径": "Main radius",
  "获取椭圆的次半径。": "Obtain the secondary radius of the ellipse.",
  "次半径": "Secondary radius",
  "对椭圆执行镜像操作，以指定轴为对称轴。": "Mirror the ellipse to specify the axis of symmetry.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 镜像操作的轴 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Axis of mirror operation|",
  "对椭圆执行镜像操作，以指定坐标系所在的平面为对称面。": "Perform a mirror operation on an ellipse to specify the plane of the coordinate system as the symmetry plane.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 镜像操作的坐标系 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Coordinate system for mirror operation|",
  "对椭圆执行镜像操作，以指定点为中心进行对称变换。": "Perform a mirror operation on the ellipse and perform a symmetric transformation around a specified point as the center.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 镜像操作的中心点 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | The center point of the mirror operation|",
  "返回沿指定轴镜像后的椭圆副本。": "Return the elliptical copy mirrored along the specified axis.",
  "镜像后的椭圆副本": "Mirrored elliptical copy",
  "返回沿指定坐标系所在平面镜像后的椭圆副本。": "Returns a copy of the ellipse mirrored along the plane of the specified coordinate system.",
  "返回沿指定点镜像后的椭圆副本。": "Return the elliptical copy mirrored along the specified point.",
  "获取椭圆的参数，可能指椭圆上某点对应的参数方程中的参数。": "Obtaining the parameters of an ellipse may refer to the parameters in the parameter equation corresponding to a point on the ellipse.",
  "参数值": "Parameter values",
  "获取椭圆的位置坐标系，定义椭圆所在的坐标框架。": "Obtain the position coordinate system of the ellipse and define the coordinate framework where the ellipse is located.",
  "位置坐标系": "Position coordinate system",
  "旋转椭圆，围绕指定轴按给定角度执行旋转操作。": "Rotate an ellipse and perform a rotation operation around a specified axis at a given angle.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 旋转轴 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Rotation axis|",
  "| `theAng` | `number` | 旋转角度（弧度） |": "|TheAng | number | Rotation angle (radians)|",
  "返回旋转后的椭圆副本。": "Return the rotated elliptical copy.",
  "旋转后的椭圆副本": "Rotating elliptical copy",
  "缩放椭圆，从指定点出发按给定比例缩放。": "Scaling an ellipse, starting from a specified point and scaling according to a given ratio.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 缩放中心点 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Zoom center point|",
  "| `theS` | `number` | 缩放比例 |": "|TheS | number | scaling ratio|",
  "返回缩放后的椭圆副本。": "Return the scaled copy of the ellipse.",
  "缩放后的椭圆副本": "Scaling the elliptical copy",
  "设置椭圆的轴。": "Set the axis of the ellipse.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 新的轴 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | New axis|",
  "设置椭圆的位置。": "Set the position of the ellipse.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 新的位置点 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | New location point|",
  "设置椭圆的主半径。": "Set the main radius of the ellipse.",
  "| `theMajorRadius` | `number` | 新的主半径 |": "|` theMajorRadius ` | ` number ` | New main radius|",
  "设置椭圆的次半径。": "Set the secondary radius of the ellipse.",
  "| `theMinorRadius` | `number` | 新的次半径 |": "|TheMinorRadius | Number | New sub radius|",
  "设置椭圆的坐标系。": "Set the coordinate system of the ellipse.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 新的坐标系 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | New coordinate system|",
  "应用变换矩阵转换椭圆。": "Transform ellipses using transformation matrices.",
  "| `theT` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 转换矩阵 |": "|` theT ` | [` Mx3dGeTsf `] (Mx3dGeTsf. md) | Transformation Matrix|",
  "返回经过变换后的椭圆副本。": "Return the transformed copy of the ellipse.",
  "变换后的椭圆副本": "The transformed elliptical copy",
  "椭距平移椭圆，从一点移到另一点。": "Elliptical distance translation refers to the movement of an ellipse from one point to another.",
  "| `theP1` | [`Mx3dGePoint`](Mx3dGePoint.md) | 起点 |": "|TheP1 | [Mx3dGePoint] (Mx3dGePoint. md) | Starting Point|",
  "| `theP2` | [`Mx3dGePoint`](Mx3dGePoint.md) | 终点 |": "|TheP2 | [Mx3dGePoint] (Mx3dGePoint. md) | Endpoint|",
  "沿圆沿指定向量平移。": "Translate along the specified vector along the circle.",
  "| `theV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 平移向量 |": "|TheV | [Mx3dGeVec] (Mx3dGeVec. md) | Translation vector|",
  "返回等距平移后的椭圆副本。": "Return the elliptical copy after equidistant translation.",
  "平移后的椭圆副本": "Translated elliptical copy",
  "返回平移后的椭圆副本。": "Return the translated elliptical copy.",
  "获取椭圆的主轴，即沿主半径方向的轴。": "Obtain the main axis of the ellipse, which is the axis along the main radius direction.",
  "椭圆的主轴": "The main axis of an ellipse",
  "获取椭圆的次轴，即沿次半径方向的轴。": "Obtain the minor axis of the ellipse, which is the axis along the minor radius direction.",
  "椭圆的次轴": "The secondary axis of an ellipse",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeHyperbola": "[mxcad_3d API Document](../README. md)/Mx3dGeHyperbola",
  "表示一个三维空间中的双曲线对象。\r": "Represents a hyperbolic object in three-dimensional space.",
  "该类用于创建、操作和查询双曲线的各种属性，包括其轴、位置、半径以及各种变换状态。": "This class is used to create, manipulate, and query various properties of hyperbolas, including their axis, position, radius, and various transformation states.",
  "默认构造函数，用于创建一个未定义的双曲线。": "The default constructor is used to create an undefined hyperbola.",
  "根据给定的主半径和次半径以及一个坐标系统（Mx3dGeCSYSR）来构造一个双曲线。\r": "Construct a hyperbola based on the given primary and secondary radii and a coordinate system (Mx3dGeCSYSR).",
  "坐标系统定义了双曲线的位置，其中：\r": "The coordinate system defines the position of hyperbolas, where:",
  "- 原点为双曲线中心，\r": "-The origin is the center of the hyperbola,",
  "- \"X方向\"定义了双曲线的主轴，\r": "-The 'X direction' defines the principal axis of the hyperbola,",
  "- \"Y方向\"定义了双曲线的次轴。": "-The 'Y direction' defines the secondary axis of a hyperbola.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 定义双曲线位置的坐标系统。 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Define the coordinate system for hyperbolic positions|",
  "| `theMajorRadius` | `number` | 双曲线的主半径。 |": "|The MajorRadius | number | The principal radius of a hyperbola|",
  "| `theMinorRadius` | `number` | 双曲线的次半径。 |": "|The MinorRadius | Number | The sub radius of a hyperbola|",
  "获取双曲线的对称轴。": "Obtain the symmetry axis of the hyperbola.",
  "返回双曲线的对称轴。": "Return the axis of symmetry of the hyperbola.",
  "获取另一条对称轴。": "Obtain another axis of symmetry.",
  "返回双曲线的另一条对称轴。": "Return the other axis of symmetry of the hyperbola.",
  "获取双曲线的轴线。": "Obtain the axis of the hyperbola.",
  "双曲线的轴线。": "The axis of a hyperbola.",
  "获取共轭分支1。": "Obtain conjugate branch 1.",
  "双曲线的共轭分支1。": "Conjugate branch 1 of hyperbola.",
  "获取共轭分支2。": "Obtain conjugate branch 2.",
  "双曲线的共轭分支2。": "Conjugate branch 2 of hyperbola.",
  "获取直接线1。": "Obtain direct line 1.",
  "双曲线的直接线1。": "The direct line 1 of the hyperbola.",
  "获取直接线2。": "Obtain direct line 2.",
  "双曲线的直接线2。": "The direct line 2 of the hyperbola.",
  "获取离心率。": "Obtain eccentricity.",
  "双曲线的离心率。": "The eccentricity of hyperbolas.",
  "获取焦距。": "Obtain the focal length.",
  "双曲线的焦距。": "The focal length of a hyperbola.",
  "获取焦点1。": "Get Focus 1.",
  "双曲线的第一个焦点。": "The first focal point of a hyperbola.",
  "获取焦点2。": "Get Focus 2.",
  "双曲线的第二个焦点。": "The second focal point of the hyperbola.",
  "获取双曲线的当前位置点，即中心点。": "Obtain the current position point of the hyperbola, which is the center point.",
  "位置点。": "Location point.",
  "获取双曲线的长轴半径。": "Obtain the major axis radius of the hyperbola.",
  "一个 number，表示双曲线的长轴半径。": "A number representing the major axis radius of a hyperbola.",
  "获取双曲线的短轴半径。": "Obtain the short axis radius of the hyperbola.",
  "一个 number，表示双曲线的短轴半径。": "A number representing the short axis radius of a hyperbola.",
  "按轴镜像双曲线。": "Mirror hyperbolic curves along the axis.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 镜像轴 (Mx3dGeAxis)。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Mirror axis (Mx3dGeAxis)|",
  "按坐标系镜像双曲线。": "Mirror hyperbolic curves according to the coordinate system.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 镜像的坐标系 (Mx3dGeCSYSR)。 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Mirror coordinate system (Mx3dGeCSYSR)|",
  "通过点镜像变换双曲线。": "Transform hyperbolas through point mirroring.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 一个 Mx3dGePoint 对象，表示镜像的中心点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | An Mx3dGePoint object representing the center point of a mirror image|",
  "获取按轴镜像后的双曲线。": "Obtain the hyperbolic curve mirrored by axis.",
  "按轴镜像后的双曲线 (Mx3dGeHyperbola)。": "The hyperbolic curve (Mx3dGeHyperbola) mirrored along the axis.",
  "获取按坐标系镜像后的双曲线。": "Obtain the hyperbolic curve mirrored in the coordinate system.",
  "按坐标系镜像后的双曲线 (Mx3dGeHyperbola)。": "The hyperbolic curve (Mx3dGeHyperbola) mirrored in the coordinate system.",
  "获取按点镜像后的双曲线。": "Obtain the hyperbolic curve after point mirroring.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 镜像点 (Mx3dGePoint)。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Mirror Point (Mx3dGePoint)|",
  "按点镜像后的双曲线 (Mx3dGeHyperbola)。": "The hyperbolic curve (Mx3dGeHyperbola) after point mirroring.",
  "获取双曲线的另一分支，与当前分支关于主轴对称。": "Obtain another branch of the hyperbola that is symmetric about the main axis with the current branch.",
  "另一分支。": "Another branch.",
  "获取双曲线的参数。": "Get the parameters of the hyperbola.",
  "一个 number，表示双曲线的参数。": "A number representing the parameters of a hyperbola.",
  "获取双曲线的坐标系统，定义其位置和方向。": "Obtain the coordinate system of the hyperbola and define its position and direction.",
  "坐标系。": "Coordinate system.",
  "旋转双曲线。": "Rotating hyperbola.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 旋转轴 (Mx3dGeAxis)。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Rotation axis (Mx3dGeAxis)|",
  "获取旋转后的双曲线。": "Obtain the rotated hyperbola.",
  "旋转后的双曲线 (Mx3dGeHyperbola)。": "The rotated hyperbola (Mx3dGeHyperbola).",
  "缩放双曲线。": "Scale the hyperbola.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 缩放中心 (Mx3dGePoint)。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Zoom Center (Mx3dGePoint)|",
  "获取缩放后的双曲线。": "Obtain the scaled hyperbolic curve.",
  "缩放后的双曲线 (Mx3dGeHyperbola)。": "The scaled hyperbola (Mx3dGeHyperbola).",
  "设置双曲线的轴。": "Set the axis of the hyperbola.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 要设置的新轴。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | The new axis to be set|",
  "设置双曲线的位置。": "Set the position of the hyperbola.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 新的位置点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | New location point|",
  "设置双曲线的主半径。": "Set the main radius of the hyperbola.",
  "| `theMajorRadius` | `number` | 新的主半径值。 |": "|` theMajorRadius ` | ` number ` | New main radius value|",
  "设置双曲线的次半径。": "Set the secondary radius of the hyperbola.",
  "| `theMinorRadius` | `number` | 新的次半径值。 |": "|The MinorRadius | number | new sub radius value|",
  "设置双曲线的坐标系统，从而重新定义其位置和方向。": "Set up a coordinate system for hyperbolas to redefine their position and direction.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 新的坐标系统。 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | New coordinate system|",
  "对双曲线进行变换。": "Transform the hyperbola.",
  "获取变换后的双曲线。": "Obtain the transformed hyperbola.",
  "变换后的双曲线 (Mx3dGeHyperbola)。": "The transformed hyperbola (Mx3dGeHyperbola).",
  "按点平移双曲线。": "Translate the hyperbola by point.",
  "| `theP1` | [`Mx3dGePoint`](Mx3dGePoint.md) | 起点 (Mx3dGePoint)。 |": "|TheP1 | [Mx3dGePoint] (Mx3dGePoint. md) | Starting point (Mx3dGePoint)|",
  "| `theP2` | [`Mx3dGePoint`](Mx3dGePoint.md) | 终点 (Mx3dGePoint)。 |": "|TheP2 | [Mx3dGePoint] (Mx3dGePoint. md) | Endpoint (Mx3dGePoint)|",
  "按向量平移双曲线。": "Translate the hyperbola by vector.",
  "| `theV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 平移向量 (Mx3dGeVector)。 |": "|TheV | [Mx3dGeVec] (Mx3dGeVec. md) | Translation vector (Mx3dGeVector)|",
  "获取按点平移后的双曲线。": "Obtain the hyperbolic curve after point translation.",
  "按点平移后的双曲线 (Mx3dGeHyperbola)。": "The hyperbolic curve (Mx3dGeHyperbola) after point translation.",
  "获取按向量平移后的双曲线。": "Obtain the hyperbolic curve translated by vector.",
  "平移后的双曲线 (Mx3dGeHyperbola)。": "Translated hyperbola (Mx3dGeHyperbola).",
  "获取X轴，定义双曲线的主要方向。": "Obtain the X-axis and define the main direction of the hyperbola.",
  "X轴。": "X-axis.",
  "获取Y轴，定义双曲线的次要方向。": "Obtain the Y-axis and define the secondary direction of the hyperbola.",
  "Y轴。": "Y-axis.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeLine": "[mxcad_3d API Document](../README. md)/Mx3dGeLine",
  "表示非参数几何直线的类。": "A class that represents non parametric geometric lines.",
  "使用轴创建一条直线。": "Create a straight line using an axis.",
  "使用点和方向创建一条直线。": "Create a straight line using points and directions.",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 起点。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Starting point|",
  "| `V` | [`Mx3dGeDir`](Mx3dGeDir.md) | 方向。 |": "|V | [Mx3dGeDir] (Mx3dGeDir. md) | Direction|",
  "获取直线的连续性。": "Obtain the continuity of a straight line.",
  "连续性枚举值。": "Continuity enumeration values.",
  "获取给定参数的点。": "Get the point of the given parameter.",
  "| `U` | `number` | 参数值。 |": "|The parameter value of 'U' | 'number'|",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 点对象。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Point object|",
  "获取给定参数的点和一阶导数向量。": "Obtain the point and first derivative vector of the given parameters.",
  "| `V1` | [`Mx3dGeVec`](Mx3dGeVec.md) | 一阶导数向量。 |": "|V1 | [Mx3dGeVec] (Mx3dGeVec. md) | First derivative vector|",
  "获取给定参数的点、一阶导数向量和二阶导数向量。": "Obtain the point, first derivative vector, and second derivative vector of the given parameters.",
  "| `V2` | [`Mx3dGeVec`](Mx3dGeVec.md) | 二阶导数向量。 |": "|V2 | [Mx3dGeVec] (Mx3dGeVec. md) | Second derivative vector|",
  "获取给定参数的点、一阶导数向量、二阶导数向量和三阶导数向量。": "Obtain the point, first derivative vector, second derivative vector, and third derivative vector of the given parameters.",
  "| `V3` | [`Mx3dGeVec`](Mx3dGeVec.md) | 三阶导数向量。 |": "|V3 | [Mx3dGeVec] (Mx3dGeVec. md) | Third derivative vector|",
  "获取给定参数的N阶导数向量。": "Obtain the Nth derivative vector of the given parameters.",
  "| `N` | `number` | 导数阶数。 |": "|N | number | derivative order|",
  "N阶导数向量。": "N-order derivative vector.",
  "获取指定参数区间内的边界。": "Retrieve the boundary within the specified parameter interval.",
  "| `p1` | `number` | 起始参数。 |": "|P1 | Number | Starting parameter|",
  "| `p2` | `number` | 终止参数。 |": "|P2 | number | Terminate parameter|",
  "边界对象。": "Boundary objects.",
  "获取直线的起始参数。": "Get the starting parameters of the line.",
  "起始参数。": "Starting parameters.",
  "检查直线的连续性等级。": "Check the continuity level of the straight line.",
  "| `N` | `number` | 连续性等级。 |": "|N | number | Continuity level|",
  "是否达到指定连续性等级。": "Has the specified continuity level been reached.",
  "检查直线是否闭合。": "Check if the straight line is closed.",
  "是否闭合。": "Is it closed.",
  "检查直线是否是周期性的。": "Check if the straight line is periodic.",
  "是否周期性。": "Is it periodic.",
  "获取直线的终止参数。": "Get the termination parameter of the line.",
  "终止参数。": "Terminate parameter.",
  "获取参数变换的结果。": "Obtain the result of parameter transformation.",
  "| `T` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 变换对象。 |": "|T | [Mx3dGetStrf] (Mx3dGetStrf. md) | Transform the object|",
  "参数变换结果。": "Parameter transformation result.",
  "获取直线的周期。": "Obtain the period of the straight line.",
  "周期。": "Cycle.",
  "获取直线的位置。": "Obtain the position of the straight line.",
  "轴对象。": "Axis object.",
  "反转直线的方向。": "Reverse the direction of a straight line.",
  "获取反转方向后的新直线。": "Obtain a new straight line with reversed direction.",
  "反转后的新直线对象。": "The reversed new line object.",
  "获取反转参数。": "Get the inversion parameter.",
  "| `U` | `number` | 原参数。 |": "|U | number | Original parameter|",
  "反转后的参数。": "Inverted parameters.",
  "设置直线的方向。": "Set the direction of the line.",
  "| `V` | [`Mx3dGeDir`](Mx3dGeDir.md) | 方向对象。 |": "|V | [Mx3dGeDir] (Mx3dGeDir. md) | Directional object|",
  "设置直线的起点。": "Set the starting point of the line.",
  "设置直线的位置。": "Set the position of the line.",
  "对直线应用变换。": "Apply transformations to straight lines.",
  "获取变换后的参数。": "Obtain the transformed parameters.",
  "变换后的参数。": "The transformed parameters.",
  "获取给定参数对应的点。": "Retrieve the point corresponding to the given parameter.",
  "点对象。": "Point object.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeLocation": "[mxcad_3d API documentation](../README. md)/Mx3dGeLocation",
  "表示3D几何系统中的位置。\r": "Representing the position in a 3D geometric system.",
  "提供了操作3D位置和变换的各种方法。": "Provides various methods for manipulating 3D positions and transformations.",
  "默认构造函数，创建一个单位位置。": "The default constructor creates a unit position.",
  "构造函数，使用指定的变换初始化位置。": "Constructor, initialize the position using the specified transformation.",
  "| `theTrsf` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 用于初始化位置的变换对象。 |": "|` theTrsf ` | [` Mx3dGeTrsf `] (Mx3dGeTrsf. md) | Used to initialize the position transformation object|",
  "清除当前位置的变换。": "Clear the transformation of the current position.",
  "计算当前位置与另一个位置的除法。": "Calculate the division between the current position and another position.",
  "| `Other` | [`Mx3dGeLocation`](Mx3dGeLocation.md) | 另一个位置对象。 |": "|Other | [Mx3dGeLocation. md] | Another location object|",
  "除法后的位置对象。": "The position object after division.",
  "获取位置的第一幂。": "Obtain the first power of the location.",
  "位置的第一幂值。": "The first power value of the position.",
  "将当前位置设置为单位变换。": "Set the current position as a unit transformation.",
  "计算当前位置的逆变换。": "Calculate the inverse transformation of the current position.",
  "逆变换后的位置对象。": "The position object after inverse transformation.",
  "检查当前位置是否与另一个位置不同。": "Check if the current location is different from another location.",
  "如果当前位置与另一个位置不同，则返回true；否则返回false。": "If the current location is different from another location, return true; Otherwise, return false.",
  "检查当前位置是否与另一个位置相等。": "Check if the current position is equal to another position.",
  "如果当前位置与另一个位置相等，则返回true；否则返回false。": "If the current position is equal to another position, return true; Otherwise, return false.",
  "检查当前位置是否为单位变换。": "Check if the current position is a unit transformation.",
  "如果当前位置为单位变换，则返回true；否则返回false。": "If the current position is a unit transformation, return true; Otherwise, return false.",
  "计算当前位置与另一个位置的乘积。": "Calculate the product of the current location and another location.",
  "| `theLocation` | [`Mx3dGeLocation`](Mx3dGeLocation.md) | 另一个位置对象。 |": "|TheLocation | [Mx3dGeLocation. md] | Another location object|",
  "乘积后的位置对象。": "The position object after multiplication.",
  "获取下一个位置对象。": "Get the next location object.",
  "下一个位置对象。": "Next location object.",
  "计算当前位置的幂运算。": "Calculate the power operation of the current position.",
  "| `pwr` | `number` | 幂的值。 |": "|The value of the power of 'pwr' | 'number' ||",
  "幂运算后的位置对象。": "The position object after power operation.",
  "计算当前位置与另一个位置的左除（前除）。": "Calculate the left division (front division) between the current position and another position.",
  "左除后的位置对象。": "The position object after left division.",
  "获取位置的缩放精度。": "Obtain the scaling accuracy of the position.",
  "位置的缩放精度值。": "The scaling accuracy value of the position.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeMaterial": "[mxcad_3d API Document](../README. md)/Mx3dGeMaterial",
  "表示三维图形中的材料属性，封装了材料的各种属性和设置方法。": "Representing material properties in 3D graphics, encapsulating various properties and setting methods of materials.",
  "创建一个默认材料对象。": "Create a default material object.",
  "创建一个具有指定名称的材料对象。": "Create a material object with a specified name.",
  "| `theName` | [`MxNameOfMaterial`](../enums/MdGe.MxNameOfMaterial.md) | 材料名称，参见 MdGe.MxNameOfMaterial。 |": "|TheName | [MxNameOfMaterial] (../enums/MdGe. MxNameOfMaterial. md) | Material name, see MdGe MxNameOfMaterial。 |",
  "返回反透明度系数（0.0为完全透明，1.0为完全不透明）。": "Return the opacity coefficient (0.0 is completely transparent, 1.0 is completely opaque).",
  "反透明度系数。": "Transparency coefficient.",
  "返回环境光颜色。": "Return the ambient light color.",
  "环境光颜色。": "Environmental light color.",
  "返回材料的颜色。": "Return the color of the material.",
  "材料的颜色。": "The color of the material.",
  "返回漫反射颜色。": "Return diffuse color.",
  "漫反射颜色。": "Diffuse reflection color.",
  "返回发光颜色。": "Return the glowing color.",
  "发光颜色。": "Luminous color.",
  "增加光泽度。": "Increase glossiness.",
  "| `theDelta` | `number` | 增加的百分比。 |": "|The Delta | number | percentage increase|",
  "检查当前材料是否与另一个材料不同。": "Check if the current material is different from another material.",
  "| `theOther` | [`Mx3dGeMaterial`](Mx3dGeMaterial.md) | 另一个材料对象。 |": "|TheOther | [Mx3dGeMaterial. md] | Another material object|",
  "如果当前材料与另一个材料不同，则返回 true，否则返回 false。": "If the current material is different from another material, return true; otherwise, return false.",
  "检查当前材料是否与另一个材料相等。": "Check if the current material is equal to another material.",
  "如果当前材料与另一个材料相等，则返回 true，否则返回 false。": "If the current material is equal to another material, return true; otherwise, return false.",
  "返回材料的名称（字符串形式）。": "Return the name of the material (in string form).",
  "材料的字符串名称。": "The string name of the material.",
  "返回材料类型。": "Return the material type.",
  "材料类型，参见 MdGe.MxTypeOfMaterial。": "Material type, see MdGe MxTypeOfMaterial。",
  "返回材料的名称。": "Return the name of the material.",
  "材料名称。": "Material name.",
  "检查指定类型的反射模式是否启用。": "Check if the specified type of reflection mode is enabled.",
  "| `theType` | [`MxTypeOfReflection`](../enums/MdGe.MxTypeOfReflection.md) | 反射类型，参见 MdGe.MxTypeOfReflection。 |": "|TheType | [MxTypeOfReflection] (../enums/MdGe. MxTypeOfReflection. md) | Reflection type, see MdGe MxTypeOfReflection。 |",
  "如果指定类型的反射模式启用，则返回 true，否则返回 false。": "If the reflection mode of the specified type is enabled, return true; otherwise, return false.",
  "返回折射率。": "Return refractive index.",
  "折射率值。": "Refractive index value.",
  "返回请求的材料名称。": "Return the requested material name.",
  "请求的材料名称。": "The name of the requested material.",
  "重置材料属性为默认值。": "Reset material properties to default values.",
  "设置反透明度系数。": "Set the opacity coefficient.",
  "| `theValue` | `number` | 反透明度系数（0.0至1.0）。 |": "|TheValue | Number | Opacity coefficient (0.0 to 1.0)|",
  "设置环境光颜色。": "Set the ambient light color.",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 新的环境光颜色。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | New ambient light color|",
  "设置材料的颜色。": "Set the color of the material.",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 新的颜色。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | New color|",
  "设置漫反射颜色。": "Set diffuse reflection color.",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 新的漫反射颜色。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | New diffuse color|",
  "设置发光颜色。": "Set the glowing color.",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 新的发光颜色。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | New glowing color|",
  "设置材料的名称。": "Set the name of the material.",
  "| `theName` | `string` | 新的材料名称。 |": "|TheName | String | New material name|",
  "设置材料类型。": "Set the material type.",
  "| `theType` | [`MxTypeOfMaterial`](../enums/MdGe.MxTypeOfMaterial.md) | 新的材料类型，参见 MdGe.MxTypeOfMaterial。 |": "|TheType | [MxTypeOfMaterial] (../enums/MdGe. MxTypeOfMaterial. md) | New material types, see MdGe MxTypeOfMaterial。 |",
  "设置折射率。": "Set the refractive index.",
  "| `theValue` | `number` | 新的折射率值，必须大于等于1.0。 |": "|TheValue | Number | The new refractive index value must be greater than or equal to 1.0|",
  "设置材料的光泽度。": "Set the glossiness of the material.",
  "| `theValue` | `number` | 新的光泽度值（通常在0到1之间）。 |": "|TheValue | Number | New glossiness value (usually between 0 and 1)|",
  "设置镜面反射颜色。": "Set the specular reflection color.",
  "| `theColor` | [`Mx3dGeColor`](Mx3dGeColor.md) | 新的镜面反射颜色。 |": "|TheColor | [Mx3dGeColor] (Mx3dGeColor. md) | New specular reflection color|",
  "设置透明度系数。": "Set the transparency coefficient.",
  "| `theValue` | `number` | 透明度系数（0.0至1.0）。 |": "|TheValue | Number | Transparency coefficient (0.0 to 1.0)|",
  "返回材料的光泽度。": "Return the glossiness of the material.",
  "光泽度值。": "Glossiness value.",
  "返回镜面反射颜色。": "Return the specular reflection color.",
  "镜面反射颜色。": "Mirror reflection color.",
  "返回材料的字符串表示形式。": "Return the string representation of the material.",
  "返回透明度系数（0.0为完全透明，1.0为完全不透明）。": "Return the transparency coefficient (0.0 is completely transparent, 1.0 is completely opaque).",
  "透明度系数。": "Transparency coefficient.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeObject": "[mxcad_3d API Document](../README. md)/Mx3dGeObject",
  "数学几何基类": "Mathematical Geometry Base Class",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomBezierCurve": "[mxcad_3d API Document](../README. md)/Mx3dGeomBizierCurve",
  "Mx3dGeomBezierCurve 表示Bezier曲线，提供了一系列方法来操作和查询Bezier曲线的属性。": "Mx3dGeomBezierCurve represents the Bezier curve and provides a series of methods to manipulate and query the properties of the Bezier curve.",
  "构造函数，创建一个Bezier曲线。": "Constructor, create a Bezier curve.",
  "| `CurvePoles` | [`Mx3dGePoint`](Mx3dGePoint.md)[] | 控制点数组。 |": "|CurveHoles | [Mx3dGePoint] (Mx3dGePoint. md) [] | Control point array|",
  "| `PoleWeights?` | `number`[] | 控制点权重数组（可选）。 |": "| `PoleWeights?` | ` Number ` [] | Control point weight array (optional)|",
  "获取曲线的连续性类型。": "Obtain the continuity type of the curve.",
  "曲线的连续性类型。": "The continuity type of the curve.",
  "复制曲线对象。": "Copy the curve object.",
  "复制的曲线对象。": "The copied curve object.",
  "计算曲线在指定参数值处的点。": "Calculate the point of the curve at the specified parameter value.",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 计算得到的点。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Calculated point|",
  "计算曲线在指定参数值处的点及其一阶导数。": "Calculate the point and its first derivative of the curve at the specified parameter value.",
  "| `V1` | [`Mx3dGeVec`](Mx3dGeVec.md) | 计算得到的一阶导数。 |": "|V1 | [Mx3dGeVec] (Mx3dGeVec. md) | Calculated first derivative|",
  "计算曲线在指定参数值处的点及其一阶和二阶导数。": "Calculate the points and their first and second derivatives of the curve at the specified parameter values.",
  "| `V2` | [`Mx3dGeVec`](Mx3dGeVec.md) | 计算得到的二阶导数。 |": "|V2 | [Mx3dGeVec] (Mx3dGeVec. md) | Calculated second derivative|",
  "计算曲线在指定参数值处的点及其一阶、二阶和三阶导数。": "Calculate the points and their first, second, and third derivatives of the curve at the specified parameter values.",
  "| `V3` | [`Mx3dGeVec`](Mx3dGeVec.md) | 计算得到的三阶导数。 |": "|V3 | [Mx3dGeVec] (Mx3dGeVec. md) | Calculated third derivative|",
  "计算曲线在指定参数值处的N阶导数。": "Calculate the Nth derivative of the curve at the specified parameter values.",
  "| `N` | `number` | 导数的阶数。 |": "|N | number | The order of the derivative|",
  "计算得到的N阶导数。": "Calculate the Nth derivative.",
  "获取曲线的阶数。": "Obtain the order of the curve.",
  "曲线的阶数。": "The order of the curve.",
  "返回对象的动态类型。": "Return the dynamic type of the object.",
  "动态类型的字符串。": "A dynamically typed string.",
  "创建一条边。": "Create an edge.",
  "| `p1` | `number` | 边的起点参数。 |": "|P1 | Number | The starting parameter of the edge|",
  "| `p2` | `number` | 边的终点参数。 |": "|P2 | number | End parameter of edge|",
  "创建的边对象。": "The created edge object.",
  "获取曲线的终点。": "Obtain the endpoint of the curve.",
  "曲线的终点。": "The endpoint of the curve.",
  "获取曲线的第一个参数值。": "Obtain the first parameter value of the curve.",
  "曲线的第一个参数值。": "The first parameter value of the curve.",
  "提高Bezier曲线的阶数。": "Increase the order of Bezier curves.",
  "| `Degree` | `number` | 新的阶数。 |": "|Degree | number | New order|",
  "在指定索引之后插入一个控制点。": "Insert a control point after specifying the index.",
  "| `Index` | `number` | 插入点的索引。 |": "|Index | Number | The index of the insertion point|",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 新的控制点。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | New control point|",
  "| `Weight?` | `number` | 新的控制点的权重（可选）。 |": "| `Weight?` | ` Number ` | The weight of the new control point (optional)|",
  "在指定索引之前插入一个控制点。": "Insert a control point before specifying the index.",
  "检查曲线的连续性。": "Check the continuity of the curve.",
  "| `N` | `number` | 连续性的阶数。 |": "|N | number | The order of continuity|",
  "曲线是否具有指定阶数的连续性。": "Does the curve have continuity of a specified order.",
  "检查曲线是否闭合。": "Check if the curve is closed.",
  "曲线是否闭合。": "Is the curve closed.",
  "检查曲线的参数化是否周期性。": "Check if the parameterization of the curve is periodic.",
  "曲线是否周期性。": "Is the curve periodic.",
  "检查曲线是否是有理Bezier曲线。": "Check if the curve is a rational Bezier curve.",
  "曲线是否是有理的。": "Is the curve reasonable.",
  "获取曲线的最后一个参数值。": "Obtain the last parameter value of the curve.",
  "曲线的最后一个参数值。": "The last parameter value of the curve.",
  "通过轴对几何对象进行镜像变换。": "Mirror transform geometric objects through axes.",
  "通过右手坐标系对几何对象进行镜像变换。": "Mirror transform geometric objects using a right-handed coordinate system.",
  "通过点对几何对象进行镜像变换。": "Mirror transform geometric objects through points.",
  "返回通过轴镜像变换后的新几何对象。": "Return the new geometric object transformed through axis mirroring.",
  "新的几何对象。": "New geometric objects.",
  "返回通过右手坐标系镜像变换后的新几何对象。": "Return the new geometric object after mirror transformation through the right-handed coordinate system.",
  "返回通过点镜像变换后的新几何对象。": "Return the new geometric object after point mirror transformation.",
  "获取曲线的控制点数量。": "Obtain the number of control points for the curve.",
  "曲线的控制点数量。": "The number of control points on the curve.",
  "创建偏移曲线。": "Create an offset curve.",
  "| `Offset` | `number` | 偏移量。 |": "|Offset | Number | Offset|",
  "| `V` | `UniDir` | 偏移方向，与偏移方向垂直。 |": "|The offset direction is perpendicular to the offset direction|",
  "| `isNotCheckC0` | `boolean` | 是否检查C0连续性。 |": "|IsNotCheckC0 | boolean | Check for C0 continuity|",
  "创建的偏移曲线。": "The created offset curve.",
  "返回曲线的周期。": "Return the period of the curve.",
  "曲线的周期。": "The period of the curve.",
  "获取指定索引的控制点。": "Retrieve the control point of the specified index.",
  "| `Index` | `number` | 控制点的索引。 |": "|Index | Number | The index of the control point|",
  "指定的控制点。": "Designated control points.",
  "获取所有控制点。": "Obtain all control points.",
  "所有控制点的数组。": "An array of all control points.",
  "删除指定索引的控制点。": "Delete the control point of the specified index.",
  "| `Index` | `number` | 要删除的控制点的索引。 |": "|Index | Number | The index of the control point to be deleted|",
  "反转Bezier曲线的参数方向。": "Reverse the parameter direction of Bezier curve.",
  "返回反向后的新几何曲线对象。": "Return the new geometric curve object in reverse.",
  "新的几何曲线对象。": "New geometric curve object.",
  "获取反转后的参数值。": "Retrieve the inverted parameter values.",
  "| `U` | `number` | 原参数值。 |": "|U | number | Original parameter value|",
  "反转后的参数值。": "Inverted parameter values.",
  "旋转几何对象。": "Rotate geometric objects.",
  "| `Ang` | `number` | 旋转角度。 |": "|Ang | number | Rotation angle|",
  "返回旋转后的新几何对象。": "Return the rotated new geometric object.",
  "缩放几何对象。": "Scale geometric objects.",
  "| `S` | `number` | 缩放比例。 |": "|S | number | scaling ratio|",
  "返回缩放后的新几何对象。": "Return the scaled new geometric object.",
  "截取Bezier曲线的一部分。": "Extract a portion of the Bezier curve.",
  "| `U1` | `number` | 起始参数值。 |": "|U1 | number | Starting parameter value|",
  "| `U2` | `number` | 结束参数值。 |": "|U2 | number | End parameter value|",
  "设置指定索引的控制点。": "Set the control point for the specified index.",
  "| `Index` | `number` | 要设置的控制点的索引。 |": "|Index | Number | The index of the control point to be set|",
  "设置指定索引的控制点权重。": "Set the control point weights for the specified index.",
  "| `Weight` | `number` | 新的权重值。 |": "|Weight | number | New weight values|",
  "获取曲线的起始点。": "Obtain the starting point of the curve.",
  "曲线的起始点。": "The starting point of the curve.",
  "对曲线应用变换。": "Apply transformations to curves.",
  "| `T` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 变换矩阵。 |": "|T | [Mx3dGetStrf] (Mx3dGetStrf. md) | Transform matrix|",
  "返回变换后的新几何对象。": "Return the transformed new geometric object.",
  "通过两个点平移几何对象。": "Translate geometric objects through two points.",
  "| `P1` | [`Mx3dGePoint`](Mx3dGePoint.md) | 起始点对象。 |": "|P1 | [Mx3dGePoint] (Mx3dGePoint. md) | Starting point object|",
  "| `P2` | [`Mx3dGePoint`](Mx3dGePoint.md) | 终止点对象。 |": "|P2 | [Mx3dGePoint] (Mx3dGePoint. md) | End point object|",
  "通过向量平移几何对象。": "Translate geometric objects through vectors.",
  "| `V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 向量对象。 |": "|V | [Mx3dGeVec] (Mx3dGeVec. md) | Vector object|",
  "返回通过两个点平移后的新几何对象。": "Return the new geometric object after translating through two points.",
  "返回通过向量平移后的新几何对象。": "Return the new geometric object after vector translation.",
  "返回给定参数 U 处的点。": "Return the point at the given parameter U.",
  "给定参数处的点对象。": "The point object at the given parameter.",
  "获取指定索引的控制点权重。": "Retrieve the control point weights for the specified index.",
  "指定的控制点权重。": "Designated control point weights.",
  "获取所有控制点的权重。": "Obtain the weights of all control points.",
  "所有控制点权重的数组。": "An array of all control point weights.",
  "创建一条线。": "Create a line.",
  "创建的线对象。": "The created line object.",
  "父类对象转 Mx3dGeomBezierCurve 类对象": "Convert parent class object to Mx3dGeomBizierCurve class object",
  "| `theObject` | [`Mx3dGeomObject`](Mx3dGeomObject.md) | 父类对象 |": "|TheObject | [Mx3dGeomObject] (Mx3dGeomObject. md) | Parent class object|",
  "Mx3dGeomBezierCurve 类对象": "Mx3dGeomBizierCurve class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomBezierSurface": "[mxcad_3d API Document](../README. md)/Mx3dGeomBizierSurface",
  "表示一个Bezier曲面，继承自Mx3dGeomBoundedSurface。\r": "Represents a Bezier surface, inherited from Mx3dGeomSounddSurface.",
  "提供多种操作和查询方法来处理Bezier曲面。": "Provide multiple operations and query methods to handle Bezier surfaces.",
  "构造函数用于创建一个Bezier曲面。": "Constructor is used to create a Bezier surface.",
  "| `SurfacePoles` | [`Mx3dGePoint`](Mx3dGePoint.md)[][] | 控制点数组，二维数组形式。 |": "|SurfacePoles | [Mx3dGePoint. md] [] | Control point array, in the form of a two-dimensional array|",
  "| `PoleWeights?` | `number`[][] | 控制点权重数组（可选）。 |": "| `PoleWeights?` | ` Number ` [] [] | Control point weight array (optional)|",
  "获取曲面的边界范围。": "Obtain the boundary range of the surface.",
  "| `U1U2V1V2` | [dU1: number, dU2: number, dV1: number, dV2: number] | 范围数组。 |": "|U1U2V1V2 | [dU1: number, dU2: number, dV1: number, dV2: number] | Range array|",
  "获取曲面的连续性。": "Obtain the continuity of the surface.",
  "返回连续性枚举值。": "Return the continuity enumeration value.",
  "复制当前曲面对象。": "Copy the current surface object.",
  "返回一个新的曲面对象。": "Return a new surface object.",
  "计算曲面在指定点的零阶导数。": "Calculate the zero derivative of a surface at a specified point.",
  "| `U` | `number` | 参数U值。 |": "|U | number | parameter U value|",
  "| `V` | `number` | 参数V值。 |": "|V | number | parameter V value|",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 输出点。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Output point|",
  "计算曲面在指定点的一级导数。": "Calculate the first derivative of a surface at a specified point.",
  "| `D1U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出U方向的一阶导数向量。 |": "|D1U | [Mx3dGeVec] (Mx3dGeVec. md) | Output the first-order derivative vector in the U direction|",
  "| `D1V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出V方向的一阶导数向量。 |": "|D1V | [Mx3dGeVec] (Mx3dGeVec. md) | Output the first derivative vector in the V direction|",
  "计算曲面在指定点的二阶导数。": "Calculate the second derivative of a surface at a specified point.",
  "| `D2U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出U方向的二阶导数向量。 |": "|D2U | [Mx3dGeVec] (Mx3dGeVec. md) | Output the second derivative vector in the U direction|",
  "| `D2V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出V方向的二阶导数向量。 |": "|D2V | [Mx3dGeVec] (Mx3dGeVec. md) | Output the second derivative vector in the V direction|",
  "| `D2UV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出UV方向的二阶导数向量。 |": "|D2UV | [Mx3dGeVec] (Mx3dGeVec. md) | Output the second derivative vector in the UV direction|",
  "计算曲面在指定点的三阶导数。": "Calculate the third derivative of a surface at a specified point.",
  "| `D3U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出U方向的三阶导数向量。 |": "|D3U | [Mx3dGeVec] (Mx3dGeVec. md) | Output the third derivative vector in the U direction|",
  "| `D3V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出V方向的三阶导数向量。 |": "|D3V | [Mx3dGeVec] (Mx3dGeVec. md) | Output the third derivative vector in the V direction|",
  "| `D3UUV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出UU方向的三阶导数向量。 |": "|D3UUV | [Mx3dGeVec] (Mx3dGeVec. md) | Output the third derivative vector in the UU direction|",
  "| `D3UVV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出UV方向的三阶导数向量。 |": "|D3UVV | [Mx3dGeVec] (Mx3dGeVec. md) | Output the third derivative vector in the UV direction|",
  "计算曲面在指定点的N阶导数。": "Calculate the Nth derivative of a surface at a specified point.",
  "| `Nu` | `number` | U方向阶数。 |": "|Nu | number | U-direction order|",
  "| `Nv` | `number` | V方向阶数。 |": "|Nv | number | order in the V direction|",
  "返回导数向量。": "Return the derivative vector.",
  "返回对象的动态类型字符串。": "Return the dynamic type string of the object.",
  "动态类型字符串。": "Dynamic type string.",
  "交换U和V方向的顺序。": "Exchange the order of U and V directions.",
  "根据容忍度生成面片。": "Generate patches based on tolerance.",
  "| `TolDegen` | `number` | 容忍度。 |": "|Tolerant | Number | Tolerance|",
  "返回生成的面片对象。": "Return the generated patch object.",
  "根据线条和是否在内部生成面片。": "Generate patches based on lines and whether they are generated internally.",
  "| `W` | [`Mx3dShapeWire`](Mx3dShapeWire.md) | 线条对象。 |": "|W | [Mx3dShapeWire] (Mx3dShapeWire. md) | Line object|",
  "| `Inside` | `boolean` | 是否在内部。 |": "|Inside | boolean | Is it inside|",
  "根据U、V范围和容忍度生成面片。": "Generate patches based on U, V range and tolerance.",
  "| `UMin` | `number` | U方向最小值。 |": "|UMin | number | minimum value in the U direction|",
  "| `UMax` | `number` | U方向最大值。 |": "|UMax | number | maximum value in the U direction|",
  "| `VMin` | `number` | V方向最小值。 |": "|VMin | number | minimum value in the V direction|",
  "| `VMax` | `number` | V方向最大值。 |": "|VMax | number | maximum value in the V direction|",
  "增加曲面的阶数。": "Increase the order of the surface.",
  "| `UDeg` | `number` | U方向的增加阶数。 |": "|UDeg | number | increase order in the U direction|",
  "| `VDeg` | `number` | V方向的增加阶数。 |": "|VDeg | number | increase order in the V direction|",
  "在指定列后插入一个新的控制点列。": "Insert a new control point column after the specified column.",
  "| `VIndex` | `number` | 列的索引。 |": "|Index of column 'VIndes' |' number '||",
  "| `CPoles` | [`Mx3dGePoint`](Mx3dGePoint.md)[] | 要插入的控制点数组。 |": "|CPoles | [Mx3dGePoint] (Mx3dGePoint. md) [] | Control point array to be inserted|",
  "| `CPoleWeights?` | `number`[] | 控制点权重数组（可选）。 |": "| `CPoleWeights?` | ` Number ` [] | Control point weight array (optional)|",
  "在指定列前插入一个新的控制点列。": "Insert a new control point column before the specified column.",
  "在指定行后插入一个新的控制点行。": "Insert a new control point row after the specified row.",
  "| `UIndex` | `number` | 行的索引。 |": "|The index of the 'UIndes' |' number '| row|",
  "在指定行前插入一个新的控制点行。": "Insert a new control point line before the specified line.",
  "判断U方向上的连续阶数。": "Determine the continuous order in the U direction.",
  "| `N` | `number` | 阶数。 |": "|N | number | order|",
  "返回是否连续的布尔值。": "Returns a Boolean value indicating whether it is continuous.",
  "判断V方向上的连续阶数。": "Determine the continuous order in the V direction.",
  "判断U方向是否闭合。": "Determine whether the U direction is closed.",
  "返回是否闭合的布尔值。": "Returns a Boolean value indicating whether it is closed or not.",
  "判断U方向是否周期性。": "Determine whether the U direction is periodic.",
  "返回是否周期性的布尔值。": "Return a Boolean value indicating whether it is periodic.",
  "判断U方向是否为有理曲面。": "Determine whether the U direction is a rational surface.",
  "返回是否有理曲面的布尔值。": "Returns the Boolean value of a rational surface.",
  "判断V方向是否闭合。": "Determine whether the V direction is closed.",
  "判断V方向是否周期性。": "Determine whether the V direction is periodic.",
  "判断V方向是否为有理曲面。": "Determine whether the V direction is a rational surface.",
  "获取U方向上的控制点数量。": "Obtain the number of control points in the U direction.",
  "返回U方向控制点数量。": "Return the number of control points in the U direction.",
  "获取V方向上的控制点数量。": "Obtain the number of control points in the V direction.",
  "返回V方向控制点数量。": "Return the number of control points in the V direction.",
  "获取指定控制点位置。": "Retrieve the specified control point location.",
  "| `UIndex` | `number` | U方向的索引。 |": "|UIndes | number | U-direction index|",
  "| `VIndex` | `number` | V方向的索引。 |": "|VIndes | number | index in the V direction|",
  "返回控制点位置。": "Return to the control point location.",
  "获取所有控制点数组。": "Retrieve all control point arrays.",
  "返回控制点二维数组。": "Return a two-dimensional array of control points.",
  "移除指定列的控制点。": "Remove the control point of the specified column.",
  "移除指定行的控制点。": "Remove the control point of the specified row.",
  "定义曲面的一个部分，指定U和V的范围。": "Define a part of the surface and specify the range of U and V.",
  "| `U1` | `number` | 起始U值。 |": "|U1 | number | Starting U value|",
  "| `U2` | `number` | 结束U值。 |": "|U2 | number | End U value|",
  "| `V1` | `number` | 起始V值。 |": "|V1 | number | Starting V value|",
  "| `V2` | `number` | 结束V值。 |": "|V2 | Number | End V value|",
  "设置指定位置的控制点和权重。": "Set control points and weights for the specified location.",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 控制点位置。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Control point position|",
  "| `Weight?` | `number` | 控制点权重（可选）。 |": "| `Weight?` | ` Number ` | Control point weights (optional)|",
  "设置指定列的控制点和权重。": "Set the control points and weights for the specified column.",
  "| `CPoles` | [`Mx3dGePoint`](Mx3dGePoint.md)[] | 控制点数组。 |": "|CPoles | [Mx3dGePoint] (Mx3dGePoint. md) [] | Control point array|",
  "设置指定行的控制点和权重。": "Set the control points and weights for the specified row.",
  "设置指定控制点的权重。": "Set the weight of the specified control point.",
  "| `Weight` | `number` | 权重值。 |": "|Weight | number | weight value|",
  "设置指定列的控制点权重。": "Set the control point weights for the specified column.",
  "| `CPoleWeights` | `number`[] | 控制点权重数组。 |": "|CPoleWeights | number [] | Control point weight array|",
  "设置指定行的控制点权重。": "Set the control point weights for the specified row.",
  "应用变换矩阵到曲面。": "Apply transformation matrix to surface.",
  "根据给定的变换矩阵 T 变换表面参数。": "Transform the surface parameters according to the given transformation matrix T.",
  "| `UV` | [dU: number, dV: number] | 参数数组，包含 U 和 V 的值。 |": "|UV | [dU: number, dV: number] | Parameter array containing the values of U and V|",
  "获取U方向的阶数。": "Obtain the order in the U direction.",
  "返回U方向的阶数。": "Return the order in the U direction.",
  "返回表面在 U 方向的周期。": "Return the period of the surface in the U direction.",
  "表面在 U 方向的周期。": "The period of the surface in the U direction.",
  "反转U方向的参数。": "Reverse the parameter in the U direction.",
  "反转 U 方向的参数化。": "Parameterization of reversing the U direction.",
  "返回当前对象以实现链式调用。": "Return the current object to implement a chain call.",
  "计算反向U参数。": "Calculate the reverse U parameter.",
  "返回反向参数。": "Return the reverse parameter.",
  "返回表面在 V 方向的周期。": "Return the period of the surface in the V direction.",
  "表面在 V 方向的周期。": "The period of the surface in the V direction.",
  "反转V方向的参数。": "Reverse the parameters in the V direction.",
  "反转 V 方向的参数化。": "Parameterization of reversing the V direction.",
  "计算反向V参数。": "Calculate the reverse V parameter.",
  "计算参数 (U, V) 对应的表面上的点。": "Calculate the points on the surface corresponding to the parameters (U, V).",
  "| `U` | `number` | 表面参数 U。 |": "|U | number | Surface parameter U|",
  "| `V` | `number` | 表面参数 V。 |": "|V | number | Surface parameter V|",
  "对应的点。": "Corresponding point.",
  "获取指定控制点的权重。": "Obtain the weight of the specified control point.",
  "返回权重值。": "Return weight values.",
  "获取所有控制点权重数组。": "Retrieve an array of all control point weights.",
  "返回控制点权重二维数组。": "Return a two-dimensional array of control point weights.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomBoundedCurve": "[mxcad_3d API documentation](../README. md)/Mx3dGeomFundedCurve",
  "表示有限范围的曲线的基类": "Base class for representing curves with a limited range",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomBoundedSurface": "[mxcad_3d API Document](../README. md)/Mx3dGeomSounddSurface",
  "表示一定范围内曲面的基类。": "Represents the base class of a surface within a certain range.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomBSplineCurve": "[mxcad_3d API Document](../README. md)/Mx3dGeomBSpline Curve",
  "代表一个B样条曲线。\r": "Represents a B-spline curve.",
  "该类继承自Mx3dGeomBoundedCurve并封装了B样条曲线的操作和属性。": "This class inherits from Mx3dGeomBoundedCurve and encapsulates the operations and properties of B-spline curves.",
  "构造函数用于创建一个B样条曲线。": "The constructor is used to create a B-spline curve.",
  "| `Poles` | [`Mx3dGePoint`](Mx3dGePoint.md)[] | 控制点的数组。 |": "|Poles | [Mx3dGePoint] (Mx3dGePoint. md) [] | Array of control points|",
  "| `Knots` | `number`[] | 节点序列的数组。 |": "|Knots | number [] | Array of node sequences|",
  "| `Multiplicities` | `number`[] | 节点的多重性。 |": "|Multiplicity | Number [] | The multiplicity of nodes|",
  "| `Degree` | `number` | 曲线的阶数。 |": "|Degree | number | The order of the curve|",
  "构造函数用于创建一个带权重的B样条曲线。": "The constructor is used to create a weighted B-spline curve.",
  "| `Weights` | `number`[] | 控制点的权重数组。 |": "|Weights | number [] | Weight array of control points|",
  "获取曲线的连续性。": "Obtain the continuity of the curve.",
  "曲线的连续性。": "The continuity of the curve.",
  "创建当前B样条曲线的副本。": "Create a copy of the current B-spline curve.",
  "返回一个新的B样条曲线对象。": "Return a new B-spline curve object.",
  "在给定参数处计算曲线的点。": "Calculate the points of the curve at the given parameters.",
  "| `U` | `number` | 参数。 |": "|The 'U' | 'number' | parameter|",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 结果点。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Result point|",
  "在给定参数处计算曲线的点和一阶导数。": "Calculate the points and first derivative of the curve at the given parameters.",
  "| `V1` | [`Mx3dGeVec`](Mx3dGeVec.md) | 一阶导数。 |": "|V1 | [Mx3dGeVec] (Mx3dGeVec. md) | First derivative|",
  "在给定参数处计算曲线的点、一阶导数和二阶导数。": "Calculate the points, first derivative, and second derivative of the curve at the given parameters.",
  "| `V2` | [`Mx3dGeVec`](Mx3dGeVec.md) | 二阶导数。 |": "|V2 | [Mx3dGeVec] (Mx3dGeVec. md) | Second derivative|",
  "在给定参数处计算曲线的点、一阶导数、二阶导数和三阶导数。": "Calculate the points, first derivative, second derivative, and third derivative of the curve at the given parameters.",
  "| `V3` | [`Mx3dGeVec`](Mx3dGeVec.md) | 三阶导数。 |": "|V3 | [Mx3dGeVec] (Mx3dGeVec. md) | Third derivative|",
  "在给定参数处计算曲线的N阶导数。": "Calculate the Nth derivative of the curve at the given parameters.",
  "N阶导数。": "Nth derivative.",
  "获取曲线的边。": "Obtain the edges of the curve.",
  "| `p1` | `number` | 边的起始点参数。 |": "|P1 | Number | The starting point parameter of the edge|",
  "| `p2` | `number` | 边的终止点参数。 |": "|P2 | number | End point parameter of the edge|",
  "返回指定参数范围内的曲线边。": "Return the curve edges within the specified parameter range.",
  "返回曲线的第一个参数值。\r": "Return the first parameter value of the curve.",
  "通常用于确定曲线的起始点。": "Usually used to determine the starting point of a curve.",
  "第一个参数值。": "The first parameter value.",
  "获取曲线的第一个节点索引。": "Retrieve the first node index of the curve.",
  "第一个节点索引。": "The first node index.",
  "提高曲线的阶数。": "Increase the order of the curve.",
  "提高指定索引处的节点多重性。": "Improve the node multiplicity at the specified index.",
  "| `Index` | `number` | 节点的索引。 |": "|Index | Number | The index of a node|",
  "| `M` | `number` | 新的多重性。 |": "|M | number | New multiplicity|",
  "提高指定范围内的节点多重性。": "Increase the multiplicity of nodes within the specified range.",
  "| `I1` | `number` | 范围起始索引。 |": "|I1 | number | range starting index|",
  "| `I2` | `number` | 范围结束索引。 |": "|I2 | number | End of range index|",
  "增量提高指定范围内的节点多重性。": "Incremental increase in node multiplicity within a specified range.",
  "| `I1` | `number` | 起始索引。 |": "|I1 | number | Starting index|",
  "| `I2` | `number` | 结束索引。 |": "|I2 | number | End index|",
  "| `M` | `number` | 增加的多重性值。 |": "|The increased multiplicity value of 'M' | 'number'|",
  "插入一个新的节点。": "Insert a new node.",
  "| `U` | `number` | 新节点的位置。 |": "|U | number | The location of the new node|",
  "| `M?` | `number` | 新节点的多重性（可选）。 |": "| `M?` | ` Number ` | The multiplicity of new nodes (optional)|",
  "| `ParametricTolerance?` | `number` | 参数容差（可选）。 |": "| `ParametricTolerance?` | ` Number ` | Parameter tolerance (optional)|",
  "| `Add?` | `boolean` | 是否添加节点而不是替换（可选）。 |": "| `Add?` | ` Boolean | Whether to add nodes instead of replacing them (optional)|",
  "插入多个新的节点。": "Insert multiple new nodes.",
  "| `Knots` | `number`[] | 新节点的位置数组。 |": "|Knots | number [] | Array of new node positions|",
  "| `Mults` | `number`[] | 新节点的多重性数组。 |": "|Mults | number [] | Multiplicity array of new nodes|",
  "检查曲线在指定阶数下是否连续。": "Check if the curve is continuous at the specified order.",
  "如果曲线在指定阶数下是连续的，则返回true；否则返回false。": "If the curve is continuous at a specified order, return true; Otherwise, return false.",
  "如果曲线闭合，则返回true；否则返回false。": "If the curve is closed, return true; Otherwise, return false.",
  "比较当前曲线与另一条曲线的相等性。": "Compare the equality between the current curve and another curve.",
  "| `theOther` | [`Mx3dGeomBSplineCurve`](Mx3dGeomBSplineCurve.md) | 另一个B样条曲线对象。 |": "|` theOther ` | [` Mx3dGeomBSpline Curve `] (Mx3dGeomBSpline Curve. md) | Another B-spline curve object|",
  "| `thePreci` | `number` | 比较精度。 |": "|ThePreci | Number | Compare accuracy|",
  "如果两条曲线在指定精度下相等，返回true；否则返回false。": "If two curves are equal at the specified precision, return true; Otherwise, return false.",
  "检查曲线在指定范围内是否满足G1连续性。": "Check if the curve meets G1 continuity within the specified range.",
  "| `theTf` | `number` | 起始参数。 |": "|The Tf | number | starting parameter|",
  "| `theTl` | `number` | 结束参数。 |": "|TheTl | Number | End parameter|",
  "| `theAngTol` | `number` | 角度公差。 |": "|TheAngTol | Number | Angle tolerance|",
  "如果曲线在指定范围内满足G1连续性，则返回true；否则返回false。": "If the curve satisfies G1 continuity within the specified range, return true; Otherwise, return false.",
  "检查曲线是否周期性。": "Check if the curve is periodic.",
  "如果曲线是周期性的，则返回true；否则返回false。": "If the curve is periodic, return true; Otherwise, return false.",
  "检查曲线是否是有理的。": "Check if the curve is reasonable.",
  "如果曲线是有理的，则返回true；否则返回false。": "If the curve is rational, return true; Otherwise, return false.",
  "获取曲线在指定索引处的节点。": "Retrieve the nodes of the curve at the specified index.",
  "节点。": "Nodes.",
  "获取曲线的节点序列。": "Obtain the node sequence of the curve.",
  "节点序列的数组。": "An array of node sequences.",
  "返回曲线的最后一个参数值。\r": "Return the last parameter value of the curve.",
  "通常用于确定曲线的终点。": "Usually used to determine the endpoint of a curve.",
  "最后一个参数值。": "The last parameter value.",
  "获取曲线的最后一个节点索引。": "Retrieve the index of the last node of the curve.",
  "最后一个节点索引。": "The last node index.",
  "在指定范围内计算局部参数的点。": "Calculate the points of local parameters within the specified range.",
  "| `FromK1` | `number` | 起始节点索引。 |": "|FromK1 | number | Starting node index|",
  "| `ToK2` | `number` | 结束节点索引。 |": "|ToK2 | number | End node index|",
  "在指定范围内计算局部参数的点和一阶导数。": "Calculate the points and first derivative of local parameters within the specified range.",
  "在指定范围内计算局部参数的点、一阶导数和二阶导数。": "Calculate the points, first derivative, and second derivative of local parameters within the specified range.",
  "在指定范围内计算局部参数的点、一阶导数、二阶导数和三阶导数。": "Calculate the points, first derivative, second derivative, and third derivative of local parameters within the specified range.",
  "在指定范围内计算局部参数的N阶导数。": "Calculate the Nth derivative of local parameters within the specified range.",
  "局部参数的点。": "Points of local parameters.",
  "返回曲线的所有节点多重性值。\r": "Return the multiplicity values of all nodes on the curve.",
  "节点多重性用于定义曲线在特定参数值处的重复程度。": "Node multiplicity is used to define the degree of repetition of a curve at specific parameter values.",
  "节点多重性值的数组。": "An array of node multiplicity values.",
  "获取指定索引处的节点多重性。\r": "Retrieve the node multiplicity at the specified index.",
  "| `Index` | `number` | 节点索引。 |": "|Index | Number | Node Index|",
  "节点的多重性值。": "The multiplicity value of nodes.",
  "获取曲线的节点数。": "Obtain the number of nodes on the curve.",
  "节点数。": "Number of nodes.",
  "获取曲线的控制点数。": "Obtain the number of control points for the curve.",
  "控制点数。": "Control the number of points.",
  "创建曲线的偏移副本。": "Create an offset copy of the curve.",
  "| `isNotCheckC0` | `boolean` | 是否不检查C0连续性。 |": "|IsNotCheckC0 | boolean | Do not check C0 continuity|",
  "返回偏移后的曲线边对象。": "Return the offset curve edge object.",
  "获取指定索引处的控制点。\r": "Retrieve the control point at the specified index.",
  "控制点定义了曲线的形状和位置。": "The control points define the shape and position of the curve.",
  "指定索引处的控制点对象。": "Specify the control point object at the index.",
  "获取曲线的控制点序列。": "Obtain the sequence of control points for the curve.",
  "控制点序列的数组。": "An array of control point sequences.",
  "移除一个节点。": "Remove a node.",
  "| `M` | `number` | 节点的多重性。 |": "|The multiplicity of M | number | nodes|",
  "| `Tolerance` | `number` | 容差。 |": "|Tolerance | number | Tolerance|",
  "是否成功移除节点。": "Whether the node has been successfully removed.",
  "反转曲线。": "Reverse the curve.",
  "获取反转参数值。": "Get the reverse parameter value.",
  "截取曲线的一个段。": "Cut a segment of the curve.",
  "| `U1` | `number` | 段的起始参数值。 |": "|The starting parameter value of the U1 | number | segment|",
  "| `U2` | `number` | 段的结束参数值。 |": "|The end parameter value of the U2 | number | segment|",
  "设置节点。": "Set up nodes.",
  "| `K` | `number` | 新的节点值。 |": "|K | number | New node value|",
  "设置节点并指定其多重性。": "Set nodes and specify their multiplicity.",
  "设置所有节点。": "Set up all nodes.",
  "| `dK` | `number`[] | 节点值数组。 |": "|DK | number [] | Node value array|",
  "设置曲线为非周期性。": "Set the curve to non periodic.",
  "设置原点。": "Set the origin point.",
  "| `Index` | `number` | 原点索引。 |": "|Index | Number | Origin Index|",
  "设置原点并指定容差。": "Set the origin and specify the tolerance.",
  "| `U` | `number` | 原点参数值。 |": "|U | number | Origin parameter value|",
  "| `Tol` | `number` | 容差。 |": "|Tol | number | tolerance|",
  "设置曲线为周期性。": "Set the curve to be periodic.",
  "设置指定索引处的控制点。": "Set the control point at the specified index.",
  "| `P` | `UniPoint` | 控制点。 |": "|P | UniPoint | Control point|",
  "设置指定索引处的控制点和权重。": "Set control points and weights at the specified index.",
  "| `Weight` | `number` | 权重。 |": "|Weight | Number | Weight|",
  "设置指定索引处的权重。": "Set the weight at the specified index.",
  "| `Index` | `number` | 权重的索引。 |": "|Index | Number | Index of weights|",
  "获取曲线的起点。": "Obtain the starting point of the curve.",
  "曲线的起点。": "The starting point of the curve.",
  "应用给定的变换矩阵变换曲线。": "Apply the given transformation matrix to transform the curve.",
  "获取指定索引处的权重值。\r": "Retrieve the weight value at the specified index.",
  "权重值用于定义B样条曲线的局部形状和重要性。": "Weight values are used to define the local shape and importance of B-spline curves.",
  "| `Index` | `number` | 权重值的索引。 |": "|Index | Number | Index of weight values|",
  "指定索引处的权重值。": "Specify the weight value at the index.",
  "获取曲线的权重序列。": "Obtain the weight sequence of the curve.",
  "权重序列的数组。": "An array of weight sequences.",
  "获取曲线的Wire。": "Obtain the wire of the curve.",
  "返回表示曲线的Wire对象。": "Return the Wire object representing the curve.",
  "父类对象转 Mx3dGeomBSplineCurve 类对象": "Convert parent object to Mx3dGeomBSpline Curve object",
  "Mx3dGeomBSplineCurve 类对象": "Mx3dGeomBSpline Curve class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomBSplineSurface": "[mxcad_3d API Document](../README. md)/Mx3dGeomBSpline Surface",
  "表示一个B样条曲面，继承自Mx3dGeomBoundedSurface。\r": "Represents a B-spline surface, inherited from Mx3dGeomSounddSurface.",
  "提供多种操作和查询方法来处理B样条曲面。": "Provide multiple operations and query methods to process B-spline surfaces.",
  "构造函数用于创建一个B样条曲面。": "Constructor is used to create a B-spline surface.",
  "| `Poles` | [`Mx3dGePoint`](Mx3dGePoint.md)[][] | 控制点数组，二维数组表示U方向和V方向的控制点。 |": "|Poles | [Mx3dGePoint. md] [] | Control point array, a two-dimensional array representing control points in the U and V directions|",
  "| `dUKnots` | `number`[] | U方向的节点序列。 |": "|DUKnots | number [] | Node sequence in the U direction|",
  "| `dVKnots` | `number`[] | V方向的节点序列。 |": "|DVKnots | number [] | Node sequence in the V direction|",
  "| `iUMults` | `number`[] | U方向节点的多重性。 |": "|The multiplicity of U-direction nodes in iUMults | number []|",
  "| `iVMults` | `number`[] | V方向节点的多重性。 |": "|The multiplicity of nodes in the V direction in iVMults | number []|",
  "| `UDegree` | `number` | U方向的曲线阶数。 |": "|UDegree | number | The order of the curve in the U direction|",
  "| `VDegree` | `number` | V方向的曲线阶数。 |": "|VDegree | number | order of the curve in the V direction|",
  "| `UPeriodic` | `boolean` | U方向是否为周期性。 |": "|UPeriodic | boolean | Is the U direction periodic|",
  "| `VPeriodic` | `boolean` | V方向是否为周期性。 |": "|VPeriodic | boolean | Is the V direction periodic|",
  "构造函数用于创建一个带权的B样条曲面。": "The constructor is used to create a weighted B-spline surface.",
  "| `dWeights` | `number`[][] | 控制点权重的二维数组。 |": "|DWeights | number [] [] | A two-dimensional array of control point weights|",
  "获取曲面的边界。": "Obtain the boundary of the surface.",
  "| `U1U2V1V2` | [dU1: number, dU2: number, dV1: number, dV2: number] | 边界参数。 |": "|U1U2V1V2 | [dU1: number, dU2: number, dV1: number, dV2: number] | Boundary parameter|",
  "检查并获取指定U和V范围内的曲面片段。": "Check and retrieve surface fragments within the specified range of U and V.",
  "| `U1` | `number` | 起始U参数。 |": "|U1 | number | Starting U parameter|",
  "| `U2` | `number` | 结束U参数。 |": "|U2 | number | End the U parameter|",
  "| `V1` | `number` | 起始V参数。 |": "|V1 | number | Starting V parameter|",
  "| `V2` | `number` | 结束V参数。 |": "|V2 | number | End the V parameter|",
  "返回曲面的连续性类型。": "Return the continuity type of the surface.",
  "计算指定参数点的零阶导数。": "Calculate the zero derivative of the specified parameter point.",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 返回的点。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | The point returned|",
  "计算指定参数点的一阶导数。": "Calculate the first derivative of a specified parameter point.",
  "| `D1U` | [`Mx3dGeVec`](Mx3dGeVec.md) | U方向的一阶导数。 |": "|D1U | [Mx3dGeVec] (Mx3dGeVec. md) | First derivative in the U direction|",
  "| `D1V` | [`Mx3dGeVec`](Mx3dGeVec.md) | V方向的一阶导数。 |": "|D1V | [Mx3dGeVec] (Mx3dGeVec. md) | First derivative in the V direction|",
  "计算指定参数点的二阶导数。": "Calculate the second derivative of the specified parameter point.",
  "| `D2U` | [`Mx3dGeVec`](Mx3dGeVec.md) | U方向的二阶导数。 |": "|D2U | [Mx3dGeVec] (Mx3dGeVec. md) | Second derivative in the U direction|",
  "| `D2V` | [`Mx3dGeVec`](Mx3dGeVec.md) | V方向的二阶导数。 |": "|D2V | [Mx3dGeVec] (Mx3dGeVec. md) | Second derivative in the V direction|",
  "| `D2UV` | [`Mx3dGeVec`](Mx3dGeVec.md) | U和V方向的混合二阶导数。 |": "|D2UV | [Mx3dGeVec] (Mx3dGeVec. md) | Mixed second derivative in the U and V directions|",
  "计算指定参数点的三阶导数。": "Calculate the third derivative of the specified parameter point.",
  "| `D3U` | [`Mx3dGeVec`](Mx3dGeVec.md) | U方向的三阶导数。 |": "|D3U | [Mx3dGeVec] (Mx3dGeVec. md) | Third derivative in the U direction|",
  "| `D3V` | [`Mx3dGeVec`](Mx3dGeVec.md) | V方向的三阶导数。 |": "|D3V | [Mx3dGeVec] (Mx3dGeVec. md) | Third derivative in the V direction|",
  "| `D3UUV` | [`Mx3dGeVec`](Mx3dGeVec.md) | U和U方向的混合三阶导数。 |": "|D3UUV | [Mx3dGeVec] (Mx3dGeVec. md) | Mixed third derivative in the U and U directions|",
  "| `D3UVV` | [`Mx3dGeVec`](Mx3dGeVec.md) | U和V方向的混合三阶导数。 |": "|D3UVV | [Mx3dGeVec] (Mx3dGeVec. md) | Mixed third derivative in the U and V directions|",
  "计算指定参数点的N阶导数。": "Calculate the Nth derivative of the specified parameter point.",
  "| `Nu` | `number` | 导数阶数U。 |": "|Nu | number | derivative order U|",
  "| `Nv` | `number` | 导数阶数V。 |": "|Nv | number | derivative order V|",
  "获取动态类型名称。": "Get the dynamic type name.",
  "返回类型名称的字符串。": "Returns a string of the type name.",
  "交换U和V方向的节点序列。": "Exchange node sequences in the U and V directions.",
  "获取U方向的第一个节点索引。": "Retrieve the first node index in the U direction.",
  "返回第一个节点索引。": "Return the index of the first node.",
  "获取V方向的第一个节点索引。": "Retrieve the index of the first node in the V direction.",
  "提高曲面的U和V方向阶数。": "Increase the order of the surface in the U and V directions.",
  "| `UDegree` | `number` | 提高后的U方向阶数。 |": "|UDegree | number | Improved U-direction order|",
  "| `VDegree` | `number` | 提高后的V方向阶数。 |": "|VDegree | number | Increased order in the V direction|",
  "增加U方向节点的多重性。": "Increase the multiplicity of U-direction nodes.",
  "| `UIndex` | `number` | 节点索引。 |": "|UIndes | number | Node index|",
  "| `M` | `number` | 多重性增量。 |": "|M | number | Multiplicity increment|",
  "增加U方向节点多重性在指定区间内。": "Increase the multiplicity of U-direction nodes within the specified interval.",
  "| `FromI1` | `number` | 起始索引。 |": "|FromI1 | number | Starting index|",
  "| `ToI2` | `number` | 结束索引。 |": "|ToI2 | number | End index|",
  "增加V方向节点的多重性。": "Increase the multiplicity of nodes in the V direction.",
  "| `VIndex` | `number` | 节点索引。 |": "|VIndes | number | Node index|",
  "增加V方向节点多重性在指定区间内。": "Increase the multiplicity of nodes in the V direction within the specified interval.",
  "增加U方向节点多重性在指定区间内，按步骤增加。": "Increase the multiplicity of U-direction nodes within the specified interval, step by step.",
  "| `Step` | `number` | 增量步骤。 |": "|Step | Number | Incremental Step|",
  "增加V方向节点多重性在指定区间内，按步骤增加。": "Increase the multiplicity of nodes in the V direction within the specified interval, step by step.",
  "插入U方向节点。": "Insert U-direction node.",
  "| `U` | `number` | 节点值。 |": "|U | number | node value|",
  "| `M` | `number` | 多重性。 |": "|M | number | multiplicity|",
  "| `ParametricTolerance` | `number` | 参数容差。 |": "|Parametric Tolerance | number | Parameter Tolerance|",
  "| `Add` | `boolean` | 是否添加到曲面中。 |": "|Add | boolean | Whether to add to the surface|",
  "| `dKnots` | `number`[] | 节点值数组。 |": "|DKnots | number [] | Node value array|",
  "| `iMults` | `number`[] | 节点多重性数组。 |": "|IMults | number [] | Node multiplicity array|",
  "| `dParametricTolerance` | `number` | 参数容差。 |": "|DParameterTolerance | number | Parameter tolerance|",
  "插入V方向节点。": "Insert a node in the V direction.",
  "| `V` | `number` | 节点值。 |": "|V | number | node value|",
  "检查U方向是否为连续N阶。": "Check if the U direction is a continuous N-order.",
  "| `N` | `number` | 连续阶数。 |": "|N | number | continuous order|",
  "返回是否为连续N阶。": "Return whether it is a continuous N-order.",
  "检查V方向是否为连续N阶。": "Check if the V direction is a continuous N-order.",
  "检查U方向是否为周期性。": "Check if the U direction is periodic.",
  "返回是否为周期性。": "Return whether it is periodic.",
  "检查U方向是否为有理。": "Check if the U direction is reasonable.",
  "返回是否为有理。": "Return whether it is reasonable.",
  "检查V方向是否为周期性。": "Check if the V direction is periodic.",
  "检查V方向是否为有理。": "Check if the V direction is reasonable.",
  "获取U方向的最后一个节点索引。": "Retrieve the index of the last node in the U direction.",
  "返回最后一个节点索引。": "Return the index of the last node.",
  "获取V方向的最后一个节点索引。": "Retrieve the index of the last node in the V direction.",
  "计算局部参数点的零阶导数。": "Calculate the zero order derivative of local parameter points.",
  "| `FromUK1` | `number` | 从U方向的起始节点。 |": "|FromUK1 | number | Starting node from the U direction|",
  "| `ToUK2` | `number` | 到U方向的结束节点。 |": "|ToUK2 | number | End node in the U direction|",
  "| `FromVK1` | `number` | 从V方向的起始节点。 |": "|FromVK1 | number | Starting node from the V direction|",
  "| `ToVK2` | `number` | 到V方向的结束节点。 |": "|ToVK2 | number | End node in the V direction|",
  "计算局部参数点的一阶导数。": "Calculate the first derivative of local parameter points.",
  "计算局部参数点的二阶导数。": "Calculate the second derivative of local parameter points.",
  "计算局部参数点的三阶导数。": "Calculate the third derivative of local parameter points.",
  "计算局部参数点的N阶导数。": "Calculate the Nth derivative of local parameter points.",
  "在局部范围内计算曲面上的点。": "Calculate points on the surface within a local range.",
  "| `FromUK1` | `number` | U方向起始索引。 |": "|FromUK1 | number | U-direction starting index|",
  "| `ToUK2` | `number` | U方向结束索引。 |": "|ToUK2 | number | End index in the U direction|",
  "| `FromVK1` | `number` | V方向起始索引。 |": "|FromVK1 | number | V-direction starting index|",
  "| `ToVK2` | `number` | V方向结束索引。 |": "|ToVK2 | number | End index in the V direction|",
  "返回计算点的二维点。": "Return the two-dimensional point of the calculation point.",
  "定位U方向的节点。": "Locate the node in the U direction.",
  "| `I1I2` | [iI1: number, iI2: number] | 返回的起始和结束节点索引。 |": "|I1I2 | [iI1: number, iI2: number] | Returns the index of the starting and ending nodes|",
  "| `WithKnotRepetition` | `boolean` | 是否包含节点重复。 |": "|WithKnotRepectation | boolean | Does it contain node duplicates|",
  "定位V方向的节点。": "Locate the node in the V direction.",
  "| `V` | `number` | 参数值。 |": "|V | number | parameter value|",
  "移动指定U和V索引的控制点。": "Move the control points for the specified U and V indices.",
  "| `U` | `number` | U参数值。 |": "|U | number | U parameter value|",
  "| `V` | `number` | V参数值。 |": "|V | number | V parameter value|",
  "| `UIndex1` | `number` | U方向起始索引。 |": "|UIndex1 | number | U-direction starting index|",
  "| `UIndex2` | `number` | U方向结束索引。 |": "|UIndex2 | number | End index in the U direction|",
  "| `VIndex1` | `number` | V方向起始索引。 |": "|VIndex1 | number | V-direction starting index|",
  "| `VIndex2` | `number` | V方向结束索引。 |": "|VIndex2 | Number | End index in the V direction|",
  "| `UFULVFVL` | [iUF: number, iUL: number, iVF: number, iVL: number] | 索引数组。 |": "|UFULVFVL | [iUF: number, iUL: number, iVF: number, iVL: number] | Index array|",
  "获取U方向节点数目。": "Obtain the number of U-direction nodes.",
  "返回节点数目。": "Return the number of nodes.",
  "获取U方向控制点数目。": "Obtain the number of U-direction control points.",
  "返回控制点数目。": "Return the number of control points.",
  "获取V方向节点数目。": "Obtain the number of nodes in the V direction.",
  "获取V方向控制点数目。": "Obtain the number of control points in the V direction.",
  "对节点序列进行周期化规范化。": "Normalize the node sequence periodically.",
  "| `UV` | [dU: number, dV: number] | 代表U和V方向的参数。 |": "|UV | [dU: number, dV: number] | represents parameters in the U and V directions|",
  "获取指定U和V索引的控制点。": "Retrieve control points for the specified U and V indices.",
  "| `UIndex` | `number` | U方向索引。 |": "|UIndes | number | U-direction index|",
  "| `VIndex` | `number` | V方向索引。 |": "|VIndes | number | V-direction index|",
  "返回控制点。": "Return to control point.",
  "返回控制点数组。": "Return the control point array.",
  "移除U方向节点。": "Remove the U-direction node.",
  "| `iIndex` | `number` | 节点索引。 |": "|IIndex | Number | Node Index|",
  "| `iM` | `number` | 多重性。 |": "|IM | number | multiplicity|",
  "| `dTolerance` | `number` | 容差值。 |": "|DTolerance | number | tolerance value|",
  "返回是否成功移除。": "Return whether the removal was successful.",
  "移除V方向节点。": "Remove the node in the V direction.",
  "获取指定U和V范围内的曲面片段。": "Retrieve surface fragments within the specified range of U and V.",
  "设置指定U和V索引的控制点。": "Set control points for specified U and V indices.",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 控制点。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Control point|",
  "设置指定U和V索引的控制点及权重。": "Set control points and weights for the specified U and V indices.",
  "设置指定V方向索引的控制点列。": "Set the control point column for the specified V-direction index.",
  "设置指定V方向索引的控制点列及权重。": "Set the control point column and weight for the specified V-direction index.",
  "| `dCPoleWeights` | `number`[] | 控制点权重数组。 |": "|DCPoleWeights | number [] | Control point weight array|",
  "设置指定U方向索引的控制点行。": "Set the control point row for the specified U-direction index.",
  "设置指定U方向索引的控制点行及权重。": "Set the control point row and weight for the specified U-direction index.",
  "设置U方向的节点值。": "Set the node value in the U direction.",
  "| `K` | `number` | 新节点值。 |": "|K | number | New node value|",
  "设置U方向的节点值，包含多重性。": "Set node values in the U direction, including multiplicity.",
  "设置U方向节点序列。": "Set the sequence of U-direction nodes.",
  "| `dUK` | `number`[] | 新的U方向节点序列。 |": "|DUK | number [] | New U-direction node sequence|",
  "设置U方向为非周期性。": "Set the U direction to non periodic.",
  "设置U方向的原点索引。": "Set the origin index in the U direction.",
  "设置U方向为周期性。": "Set the U direction to periodic.",
  "设置V方向的节点值。": "Set the node values in the V direction.",
  "设置V方向的节点值，包含多重性。": "Set node values in the V direction, including multiplicity.",
  "设置V方向节点序列。": "Set the sequence of nodes in the V direction.",
  "| `dVK` | `number`[] | 新的V方向节点序列。 |": "|DVK | number [] | New V-direction node sequence|",
  "设置V方向为非周期性。": "Set the V direction to non periodic.",
  "设置V方向的原点索引。": "Set the origin index in the V direction.",
  "设置V方向为周期性。": "Set the V direction to periodic.",
  "设置指定U和V索引的权重值。": "Set the weight values for the specified U and V indices.",
  "设置指定V方向索引的权重列。": "Set the weight column for the specified V-direction index.",
  "| `dCPoleWeights` | `number`[] | 权重数组。 |": "|DCPoleWeights | number [] | Weight array|",
  "设置指定U方向索引的权重行。": "Set the weight row for the specified U-direction index.",
  "获取指定U方向的节点值。": "Get the node value in the specified U direction.",
  "返回节点值。": "Return the node value.",
  "获取U方向节点序列。": "Obtain the sequence of U-direction nodes.",
  "返回节点序列。": "Return the node sequence.",
  "获取U方向节点数组。": "Retrieve the U-direction node array.",
  "返回节点数组。": "Return a node array.",
  "获取U方向节点多重性数组。": "Retrieve the U-direction node multiplicity array.",
  "返回节点多重性数组。": "Return an array of node multiplicity.",
  "获取U方向节点多重性。": "Obtain U-direction node multiplicity.",
  "返回节点多重性。": "Return node multiplicity.",
  "反转U方向节点序列。": "Reverse the sequence of U-direction nodes.",
  "计算U方向反向参数。": "Calculate the U-direction reverse parameter.",
  "返回反向后的参数值。": "Return the reversed parameter value.",
  "获取V方向的阶数。": "Obtain the order in the V direction.",
  "返回V方向的阶数。": "Return the order in the V direction.",
  "获取指定V方向的节点值。": "Get the node value in the specified V direction.",
  "获取V方向节点序列。": "Obtain the sequence of nodes in the V direction.",
  "获取V方向节点数组。": "Retrieve the array of nodes in the V direction.",
  "获取V方向节点多重性数组。": "Retrieve the multiplicity array of nodes in the V direction.",
  "获取V方向节点多重性。": "Obtain the multiplicity of nodes in the V direction.",
  "反转V方向节点序列。": "Reverse the sequence of nodes in the V direction.",
  "计算V方向反向参数。": "Calculate the reverse parameter in the V direction.",
  "获取指定U和V索引的权重值。": "Retrieve the weight values for the specified U and V indices.",
  "获取所有权重数组。": "Retrieve all weight arrays.",
  "返回权重数组。": "Return the weight array.",
  "父类对象转 Mx3dGeomBSplineSurface 类对象": "Convert parent object to Mx3dGeomBSpline Surface class object",
  "Mx3dGeomBSplineSurface 类对象": "Mx3dGeomBSpline Surface class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomCircle": "[mxcad_3d API Document](../README. md)/Mx3dGeomCircle",
  "表示参数几何圆的类，继承自 Mx3dGeomConic。": "The class that represents the parameter geometric circle inherits from Mx3dGeomConic.",
  "构造函数，接受坐标系和半径参数。": "Constructor, accepts coordinate system and radius parameters.",
  "| `theCSYSR` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 坐标系对象。 |": "|TheCSYSR | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Coordinate system object|",
  "获取二次曲线的轴。": "Obtain the axis of the quadratic curve.",
  "获取二次曲线的连续性。": "Obtain the continuity of the quadratic curve.",
  "复制圆对象。": "Copy a circular object.",
  "复制的圆对象。": "The copied circular object.",
  "获取参数 U 处的点坐标。": "Obtain the point coordinates at parameter U.",
  "获取参数 U 处的一阶导数。": "Obtain the first derivative at parameter U.",
  "获取参数 U 处的二阶导数。": "Obtain the second derivative at parameter U.",
  "获取参数 U 处的三阶导数。": "Obtain the third derivative at parameter U.",
  "获取参数 U 处的 N 阶导数。": "Obtain the Nth derivative at parameter U.",
  "N 阶导数向量。": "N-order derivative vector.",
  "获取圆的离心率。": "Obtain the eccentricity of a circle.",
  "离心率。": "Centrifuge rate.",
  "获取圆的边。": "Obtain the edges of the circle.",
  "| `p1` | `number` | 第一个参数。 |": "|P1 | Number | The first parameter|",
  "| `p2` | `number` | 第二个参数。 |": "|P2 | number | Second parameter|",
  "圆的边对象。": "The edge object of a circle.",
  "获取圆的第一个参数。": "Get the first parameter of the circle.",
  "第一个参数。": "The first parameter.",
  "检查二次曲线是否具有指定阶数的连续性。": "Check if the quadratic curve has continuity of the specified order.",
  "如果具有指定阶数的连续性，则返回 true，否则返回 false。": "If there is continuity of the specified order, return true; otherwise, return false.",
  "检查圆是否闭合。": "Check if the circle is closed.",
  "如果圆是闭合的，返回 true；否则返回 false。": "If the circle is closed, return true; Otherwise, return false.",
  "检查圆是否周期性。": "Check if the circle is periodic.",
  "如果圆是周期性的，返回 true；否则返回 false。": "If the circle is periodic, return true; Otherwise, return false.",
  "获取圆的最后一个参数。": "Get the last parameter of the circle.",
  "最后一个参数。": "The last parameter.",
  "获取二次曲线的位置。": "Obtain the position of the quadratic curve.",
  "获取圆的偏移曲线。": "Obtain the offset curve of the circle.",
  "| `Offset` | `number` | 偏移值。 |": "|Offset | number | offset value|",
  "| `V` | [`Mx3dGeDir`](Mx3dGeDir.md) | 方向向量。 |": "|V | [Mx3dGeDir] (Mx3dGeDir. md) | Direction vector|",
  "| `isNotCheckC0` | `boolean` | 是否不检查 C0 连续性。 |": "|IsNotCheckC0 | boolean | Do not check C0 continuity|",
  "圆的偏移曲线。": "The offset curve of a circle.",
  "获取二次曲线的右手坐标系。": "Obtain the right-hand coordinate system of the quadratic curve.",
  "获取圆的半径。": "Get the radius of the circle.",
  "反转二次曲线的方向。": "Reverse the direction of the quadratic curve.",
  "获取反向参数。": "Get reverse parameters.",
  "反向参数值。": "Reverse parameter value.",
  "设置二次曲线的轴。": "Set the axis of the quadratic curve.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 轴对象。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Axis object|",
  "设置二次曲线的位置。": "Set the position of the quadratic curve.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 点对象。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Point object|",
  "设置二次曲线的右手坐标系。": "Set the right-hand coordinate system for the quadratic curve.",
  "| `theA2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 右手坐标系对象。 |": "|TheA2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Right hand coordinate system object|",
  "| `R` | `number` | 半径。 |": "|R | number | radius|",
  "对圆进行变换。": "Transform the circle.",
  "获取圆的线。": "Obtain the line of the circle.",
  "圆的线对象。": "A circular line object.",
  "获取二次曲线的 X 轴。": "Obtain the X-axis of the quadratic curve.",
  "X 轴对象。": "X-axis object.",
  "获取二次曲线的 Y 轴。": "Obtain the Y-axis of the quadratic curve.",
  "Y 轴对象。": "Y-axis object.",
  "父类对象转 Mx3dGeomCircle 类对象": "Convert parent class object to Mx3dGeomCircle class object",
  "Mx3dGeomCircle 类对象": "Mx3dGeomCircle class object",
  "三点画圆弧": "Three point drawing arc",
  "| `thePt1` | `UniPoint` | 第一个点 |": "|ThePt1 | UniPoint | First Point|",
  "| `thePt2` | `UniPoint` | 第二个点 |": "|ThePt2 | UniPoint | Second Point|",
  "| `thePt3` | `UniPoint` | 第三个点 |": "|ThePt3 | UniPoint | Third Point|",
  "圆弧曲线": "Circular arc curve",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomConic": "[mxcad_3d API Document](../README. md)/Mx3dGeomConic",
  "表示几何二次曲线(圆锥曲线)的类，继承自 Mx3dGeomCurve。": "The class representing geometric quadratic curves (conic sections) inherits from Mx3dGeomCurve.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomConicalSurface": "[mxcad_3d API Document](../README. md)/Mx3dGeomConicalSurface",
  "表示三维空间中的圆锥曲面。\r": "Represents a conical surface in three-dimensional space.",
  "圆锥曲面由其顶点的半角、参考半径和坐标系定义。": "A conical surface is defined by its vertex half angle, reference radius, and coordinate system.",
  "构造一个具有指定坐标系、半角和半径的圆锥曲面。": "Construct a conical surface with a specified coordinate system, half angle, and radius.",
  "| `A3` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 圆锥曲面的局部坐标系。 |": "|A3 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | The local coordinate system of a conical surface|",
  "| `Ang` | `number` | 圆锥曲面的半角。其绝对值应在 [0, PI/2] 范围内。 |": "|Ang | number | Half angle of a conical surface. Its absolute value should be within the range of [0, PI/2]|",
  "| `Radius` | `number` | 圆锥曲面参考平面上的圆的半径。 |": "|Radius | number | The radius of a circle on the reference plane of a conical surface|",
  "计算并返回圆锥的顶点。顶点在圆锥的旋转轴的负侧（半角为正）或正侧（半角为负）。": "Calculate and return the vertices of a cone. The vertex is located on the negative side (positive half angle) or positive side (negative half angle) of the rotation axis of the cone.",
  "圆锥的顶点。": "The vertex of a cone.",
  "获取表面的主轴（Z轴）。": "Obtain the main axis (Z-axis) of the surface.",
  "表面的主轴定义。": "Definition of the main axis on the surface.",
  "返回圆锥曲面的参数范围。": "Return the parameter range of the conical surface.",
  "| `U1U2V1V2` | [dU1: number, dU2: number, dV1: number, dV2: number] | 参数范围数组 [dU1, dU2, dV1, dV2]。 |": "|U1U2V1V2 | [dU1: number, dU2: number, dV1: number, dV2: number] | Parameter range array [dU1, dU2, dV1, dV2]|",
  "返回圆锥曲面的隐式方程的系数。\r": "Return the coefficients of the implicit equation for a conical surface.",
  "方程形式：A1.X^2 + A2.Y^2 + A3.Z^2 + 2*(B1.X.Y + B2.X.Z + B3.Y.Z) + 2*(C1.X + C2.Y + C3.Z) + D = 0": "Equation form: A1.X^2 + A2.Y^2 + A3.Z^2 + 2*(B1.X.Y + B2.X.Z + B3.Y.Z) + 2*(C1.X + C2.Y + C3.Z) + D = 0",
  "| `A1A2A3B1B2B3C1C2C3D` | [A1: number, A2: number, A3: number, B1: number, B2: number, B3: number, C1: number, C2: number, C3: number, D: number] | 系数数组 [A1, A2, A3, B1, B2, B3, C1, C2, C3, D]。 |": "|A1A2A3B1B2B3C1C2C3D | [A1: number, A2: number, A3: number, B1: number, B2: number, B3: number, C1: number, C2: number, C3: number, D: number] | Coefficient array [A1, A2, A3, B1, B2, B3, C1, C2, C3, D]|",
  "返回表面在全局上的连续性（MxGAShapeEnum）。": "Return the global continuity of the surface (MxGAShapeenum).",
  "表面在全局上的连续性。": "The continuity of the surface on a global scale.",
  "创建并返回一个此圆锥曲面的副本。": "Create and return a copy of this conical surface.",
  "圆锥曲面的副本。": "A copy of a conical surface.",
  "计算并返回曲面上给定参数 (U, V) 处的点。": "Calculate and return the point on the surface at the given parameter (U, V).",
  "| `U` | `number` | U参数。 |": "|The 'U' | 'number' | U parameter|",
  "| `V` | `number` | V参数。 |": "|V | number | V parameter|",
  "计算并返回曲面上给定参数 (U, V) 处的点及其在U和V方向的第一导数。": "Calculate and return the points on the surface at the given parameters (U, V) and their first derivatives in the U and V directions.",
  "| `D1U` | [`Mx3dGeVec`](Mx3dGeVec.md) | U方向的第一导数。 |": "|D1U | [Mx3dGeVec] (Mx3dGeVec. md) | First derivative in the U direction|",
  "| `D1V` | [`Mx3dGeVec`](Mx3dGeVec.md) | V方向的第一导数。 |": "|D1V | [Mx3dGeVec] (Mx3dGeVec. md) | First derivative in the V direction|",
  "计算并返回曲面上给定参数 (U, V) 处的点及其在U和V方向的第一和第二导数。": "Calculate and return the points on the surface at the given parameters (U, V) and their first and second derivatives in the U and V directions.",
  "| `D2U` | [`Mx3dGeVec`](Mx3dGeVec.md) | U方向的第二导数。 |": "|D2U | [Mx3dGeVec] (Mx3dGeVec. md) | Second derivative in the U direction|",
  "| `D2V` | [`Mx3dGeVec`](Mx3dGeVec.md) | V方向的第二导数。 |": "|D2V | [Mx3dGeVec] (Mx3dGeVec. md) | Second derivative in the V direction|",
  "| `D2UV` | [`Mx3dGeVec`](Mx3dGeVec.md) | UV方向的混合导数。 |": "|D2UV | [Mx3dGeVec] (Mx3dGeVec. md) | Mixed derivative in the UV direction|",
  "计算并返回曲面上给定参数 (U, V) 处的点及其在U和V方向的第一、第二和第三导数。": "Calculate and return the points on the surface at the given parameters (U, V) and their first, second, and third derivatives in the U and V directions.",
  "| `D3U` | [`Mx3dGeVec`](Mx3dGeVec.md) | U方向的第三导数。 |": "|D3U | [Mx3dGeVec] (Mx3dGeVec. md) | Third derivative in the U direction|",
  "| `D3V` | [`Mx3dGeVec`](Mx3dGeVec.md) | V方向的第三导数。 |": "|D3V | [Mx3dGeVec] (Mx3dGeVec. md) | Third derivative in the V direction|",
  "| `D3UUV` | [`Mx3dGeVec`](Mx3dGeVec.md) | UU方向的混合导数。 |": "|D3UUV | [Mx3dGeVec] (Mx3dGeVec. md) | Mixed derivative in the UU direction|",
  "| `D3UVV` | [`Mx3dGeVec`](Mx3dGeVec.md) | UV方向的混合导数。 |": "|D3UVV | [Mx3dGeVec] (Mx3dGeVec. md) | Mixed derivative in the UV direction|",
  "计算并返回给定参数 (U, V) 处的指定阶数的导数。": "Calculate and return the derivative of the specified order at the given parameter (U, V).",
  "如果Nu + Nv小于1，或Nu或Nv为负，则抛出异常。": "If Nu+Nv is less than 1, or Nu or Nv is negative, throw an exception.",
  "| `Nu` | `number` | U方向的导数阶数。 |": "|Nu | number | derivative order in the U direction|",
  "| `Nv` | `number` | V方向的导数阶数。 |": "|Nv | number | derivative order in the V direction|",
  "指定阶数的导数向量。": "The derivative vector of a specified order.",
  "动态类型的字符串表示。": "A dynamically typed string representation.",
  "根据圆锥曲面创建一个面。": "Create a face based on a conical surface.",
  "| `TolDegen` | `number` | 简化面容差。 |": "|TolDegen | number | Simplify surface tolerance|",
  "创建的面对象。": "The created face object.",
  "根据给定的线和方向创建一个面。": "Create a face based on the given lines and directions.",
  "| `W` | [`Mx3dShapeWire`](Mx3dShapeWire.md) | 给定的线。 |": "|W | [Mx3dShapeWire] (Mx3dShapeWire. md) | Given line|",
  "| `Inside` | `boolean` | 内部方向标志。 |": "|Inside | boolean | Internal directional marker|",
  "根据指定的参数范围创建一个面。": "Create a face based on the specified parameter range.",
  "| `UMin` | `number` | U参数的最小值。 |": "|UMin | number | The minimum value of the U parameter|",
  "| `UMax` | `number` | U参数的最大值。 |": "|UMax | number | The maximum value of the U parameter|",
  "| `VMin` | `number` | V参数的最小值。 |": "|The minimum value of the VMin | number | V parameter|",
  "| `VMax` | `number` | V参数的最大值。 |": "|The maximum value of the VMax | number | V parameter|",
  "检查表面在 U 参数方向上的连续性是否达到指定的等级。": "Check if the continuity of the surface in the U parameter direction meets the specified level.",
  "| `N` | `number` | 要检查的连续性等级。 |": "|N | number | The continuity level to be checked|",
  "如果连续性等级满足条件，则返回 true；否则返回 false。": "If the continuity level meets the condition, return true; Otherwise, return false.",
  "检查表面在 V 参数方向上的连续性是否达到指定的等级。": "Check if the continuity of the surface in the V-parameter direction meets the specified level.",
  "检查U参数是否闭合。": "Check if the U parameter is closed.",
  "总是返回 true。": "Always return true.",
  "检查U参数是否周期性。": "Check if the U parameter is periodic.",
  "检查V参数是否闭合。": "Check if the V parameter is closed.",
  "总是返回 false。": "Always return false.",
  "检查V参数是否周期性。": "Check if the V parameter is periodic.",
  "获取表面局部坐标系的位置点。": "Obtain the position points of the local coordinate system on the surface.",
  "表面位置点。": "Surface location points.",
  "获取表面的局部坐标系。": "Obtain the local coordinate system of the surface.",
  "表面的局部坐标系。": "The local coordinate system of the surface.",
  "返回圆锥曲面的参考半径。": "Return the reference radius of the conical surface.",
  "参考半径。": "Reference radius.",
  "返回圆锥顶点的半角。": "Return the half angle of the cone vertex.",
  "圆锥的半角。": "The half angle of a cone.",
  "设置表面的主轴（Z轴）。": "Set the main axis (Z-axis) of the surface.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 表面的主轴定义。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Definition of the principal axis of the surface|",
  "设置表面局部坐标系的位置点。": "Set the position points of the surface local coordinate system.",
  "| `theLoc` | [`Mx3dGePoint`](Mx3dGePoint.md) | 新的位置点。 |": "|TheLoc | [Mx3dGePoint] (Mx3dGePoint. md) | New location point|",
  "设置表面的局部坐标系。": "Set the local coordinate system of the surface.",
  "| `theAx3` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 新的坐标系，包含位置和方向。 |": "|TheAx3 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | A new coordinate system that includes position and orientation|",
  "设置放置平面中的圆锥曲面的半径。": "Set the radius of the conical surface in the placement plane.",
  "| `R` | `number` | 新的半径。必须为非负值。 |": "|R | number | New radius. It must be a non negative value|",
  "设置圆锥曲面的半角。": "Set the half angle of the conical surface.",
  "| `Ang` | `number` | 新的半角。其绝对值应在 ]0, PI/2[ 范围内。 |": "|Ang | number | new half corner. Its absolute value should be [0], Within the scope of PI/2|",
  "对圆锥曲面应用变换。": "Apply transformations to conical surfaces.",
  "| `T` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 变换。 |": "|T | [Mx3dGetStrf] (Mx3dGetStrf. md) | Transform|",
  "变换参数。": "Transform parameters.",
  "| `UV` | [dU: number, dV: number] | 参数数组 [dU, dV]。 |": "|UV | [dU: number, dV: number] | Parameter array [dU, dV]|",
  "反转表面在 U 参数方向上的参数化方向。": "Reverse the parameterization direction of the surface in the U parameter direction.",
  "返回反转后的U参数。": "Return the inverted U parameter.",
  "| `U` | `number` | 原始U参数。 |": "|U | number | Original U parameter|",
  "反转后的U参数。": "The inverted U parameter.",
  "反转V参数方向。": "Reverse the direction of the V parameter.",
  "返回反转后的V参数。": "Return the inverted V parameter.",
  "| `V` | `number` | 原始V参数。 |": "|V | number | Original V parameter|",
  "反转后的V参数。": "The inverted V parameter.",
  "父类对象转 Mx3dGeomConicalSurface 类对象": "Convert parent object to Mx3dGeomConicalSurface class object",
  "Mx3dGeomConicalSurface 类对象": "Mx3dGeomConicalSurface class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomCurve": "[mxcad_3d API Document](../README. md)/Mx3dGeomCurve",
  "表示几何曲线的类，继承自 Mx3dGeomObject。": "The class representing geometric curves inherits from Mx3dGeomObject.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomCylindricalSurface": "[mxcad_3d API Document](../README. md)/Mx3dGeomCylindricalSurface",
  "Mx3dGeomCylindricalSurface 类封装了圆柱面几何的功能，继承自 Mx3dGeomElementarySurface。": "The Mx3dGeomCylindricalSurface class encapsulates the functionality of cylindrical geometry and inherits from Mx3dGeomElementarySurface.",
  "构造函数，创建一个新的圆柱面对象。": "Constructor, create a new cylindrical object.",
  "| `A3` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 圆柱面的局部坐标系。 |": "|A3 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Local coordinate system of cylindrical surface|",
  "| `Radius` | `number` | 圆柱面的半径。 |": "|Radius | number | The radius of a cylindrical surface|",
  "获取圆柱面的参数范围。": "Obtain the parameter range of the cylindrical surface.",
  "| `U1U2V1V2` | [dU1: number, dU2: number, dV1: number, dV2: number] | 参数范围 [dU1, dU2, dV1, dV2]。 |": "|U1U2V1V2 | [dU1: number, dU2: number, dV1: number, dV2: number] | Parameter range [dU1, dU2, dV1, dV2]|",
  "获取圆柱面方程的系数。": "Obtain the coefficients of the cylindrical surface equation.",
  "| `A1A2A3B1B2B3C1C2C3D` | [A1: number, A2: number, A3: number, B1: number, B2: number, B3: number, C1: number, C2: number, C3: number, D: number] | 方程系数 [A1, A2, A3, B1, B2, B3, C1, C2, C3, D]。 |": "|A1A2A3B1B2B3C1C2C3D | [A1: number, A2: number, A3: number, B1: number, B2: number, B3: number, C1: number, C2: number, C3: number, D: number] | Equation coefficients [A1, A2, A3, B1, B2, B3, C1, C2, C3, D]|",
  "创建当前圆柱面的副本。": "Create a copy of the current cylindrical surface.",
  "圆柱面的副本。": "Copy of cylindrical surface.",
  "计算当前点在圆柱面上的位置及其法向量。": "Calculate the position of the current point on the cylindrical surface and its normal vector.",
  "| `U` | `number` | 参数 U。 |": "|U | number | parameter U|",
  "| `V` | `number` | 参数 V。 |": "|V | number | parameter V|",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 存储点的位置。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | The location of the storage point|",
  "计算当前点在圆柱面上的位置及其一阶导数。": "Calculate the position of the current point on the cylindrical surface and its first derivative.",
  "| `D1U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 存储 U 方向的一阶导数。 |": "|D1U | [Mx3dGeVec] (Mx3dGeVec. md) | Stores the first derivative in the U direction|",
  "| `D1V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 存储 V 方向的一阶导数。 |": "|D1V | [Mx3dGeVec] (Mx3dGeVec. md) | Stores the first derivative in the V direction|",
  "计算当前点在圆柱面上的位置及其一阶、二阶导数。": "Calculate the position of the current point on the cylindrical surface and its first and second derivatives.",
  "| `D2U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 存储 U 方向的二阶导数。 |": "|D2U | [Mx3dGeVec] (Mx3dGeVec. md) | Stores the second derivative in the U direction|",
  "| `D2V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 存储 V 方向的二阶导数。 |": "|D2V | [Mx3dGeVec] (Mx3dGeVec. md) | Stores the second derivative in the V direction|",
  "| `D2UV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 存储 U 和 V 方向的混合二阶导数。 |": "|D2UV | [Mx3dGeVec] (Mx3dGeVec. md) | Stores mixed second-order derivatives in the U and V directions|",
  "计算当前点在圆柱面上的位置及其一阶、二阶、三阶导数。": "Calculate the position of the current point on the cylindrical surface and its first, second, and third derivatives.",
  "| `D3U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 存储 U 方向的三阶导数。 |": "|D3U | [Mx3dGeVec] (Mx3dGeVec. md) | Stores the third derivative in the U direction|",
  "| `D3V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 存储 V 方向的三阶导数。 |": "|D3V | [Mx3dGeVec] (Mx3dGeVec. md) | Stores the third derivative in the V direction|",
  "| `D3UUV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 存储 U 和 U 方向的混合三阶导数。 |": "|D3UUV | [Mx3dGeVec] (Mx3dGeVec. md) | Stores mixed third-order derivatives in the U and U directions|",
  "| `D3UVV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 存储 U 和 V 方向的混合三阶导数。 |": "|D3UVV | [Mx3dGeVec] (Mx3dGeVec. md) | Stores mixed third-order derivatives in the U and V directions|",
  "计算指定阶数的导数向量。": "Calculate the derivative vector of a specified order.",
  "| `Nu` | `number` | 导数阶数在 U 方向。 |": "|Nu | number | The derivative order is in the U direction|",
  "| `Nv` | `number` | 导数阶数在 V 方向。 |": "|Nv | number | The derivative order is in the V direction|",
  "导数向量。": "Derivative vector.",
  "获取当前对象的动态类型信息。": "Retrieve the dynamic type information of the current object.",
  "对象的类型字符串。": "The type string of the object.",
  "创建圆柱面的面对象。": "Create a cylindrical face object.",
  "| `TolDegen` | `number` | 面的退化容差。 |": "|Tolengen | number | surface degradation tolerance|",
  "面对象。": "Face object.",
  "创建圆柱面的面对象，指定是否包含内部区域。": "Create a cylindrical face object and specify whether it contains an internal area.",
  "| `W` | [`Mx3dShapeWire`](Mx3dShapeWire.md) | 轮廓线。 |": "|W | [Mx3dShapeWire] (Mx3dShapeWire. md) | Contour Line|",
  "| `Inside` | `boolean` | 是否包含内部区域。 |": "|Does' Inside '|' boolean '| contain an internal area|",
  "创建圆柱面的面对象，指定参数范围。": "Create a cylindrical face object and specify the parameter range.",
  "| `UMin` | `number` | 参数 U 的最小值。 |": "|UMin | number | The minimum value of parameter U|",
  "| `UMax` | `number` | 参数 U 的最大值。 |": "|UMax | number | The maximum value of parameter U|",
  "| `VMin` | `number` | 参数 V 的最小值。 |": "|VMin | number | The minimum value of parameter V|",
  "| `VMax` | `number` | 参数 V 的最大值。 |": "|VMax | number | The maximum value of parameter V|",
  "判断圆柱面在 U 方向是否闭合。": "Determine whether the cylindrical surface is closed in the U direction.",
  "如果是闭合的，返回 true，否则返回 false。": "If it is closed, return true; otherwise, return false.",
  "判断圆柱面在 U 方向是否周期性。": "Determine whether the cylindrical surface is periodic in the U direction.",
  "如果是周期性的，返回 true，否则返回 false。": "If it is periodic, return true; otherwise, return false.",
  "判断圆柱面在 V 方向是否闭合。": "Determine whether the cylindrical surface is closed in the V direction.",
  "判断圆柱面在 V 方向是否周期性。": "Determine whether the cylindrical surface is periodic in the V direction.",
  "返回圆柱面的半径。": "Return the radius of the cylindrical surface.",
  "半径值。": "Radius value.",
  "设置圆柱面的半径。": "Set the radius of the cylindrical surface.",
  "| `R` | `number` | 新的半径值。 |": "|R | number | New radius value|",
  "应用变换 T 到圆柱面。": "Apply the transformation T to a cylindrical surface.",
  "变换参数 U 和 V。": "Transform parameters U and V.",
  "| `UV` | [dU: number, dV: number] | 原始参数 [dU, dV]。 |": "|UV | [dU: number, dV: number] | Original parameter [dU, dV]|",
  "返回参数 U 在反向圆柱面上的对应参数值。": "Return the corresponding parameter value of parameter U on the reverse cylindrical surface.",
  "反转表面在 V 参数方向上的参数化方向。": "Reverse the parameterization direction of the surface in the V parameter direction.",
  "返回参数 V 在反向圆柱面上的对应参数值。": "Return the corresponding parameter value of parameter V on the reverse cylindrical surface.",
  "父类对象转 Mx3dGeomCylindricalSurface 类对象": "Convert parent object to Mx3dGeomCylindricalSurface class object",
  "Mx3dGeomCylindricalSurface 类对象": "Mx3dGeomCylindricalSurface class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomElementarySurface": "[mxcad_3d API Document](../README. md)/Mx3dGeomElementarySurface",
  "Mx3dGeomElementarySurface 类是对几何基础表面（Elementary Surface）类的封装，提供了对简单参数方程表面的操作接口。\r": "The Mx3dGeomElementarySurface class encapsulates the Elementary Surface class and provides an interface for operating on surfaces with simple parameter equations.",
  "这些表面包括平面、圆柱、圆锥、球体等。该类继承自 Mx3dGeomSurface，并扩展了相关的几何操作功能。": "These surfaces include planes, cylinders, cones, spheres, etc. This class inherits from Mx3dGeomSurface and extends related geometric operation functions.",
  "返回对象的动态类型名称。": "Return the dynamic type name of the object.",
  "对象的类型名称字符串。": "The type name string of the object.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomEllipse": "[mxcad_3d API Document](../README. md)/Mx3dGeomEclipse",
  "表示参数几何椭圆的类，继承自 Mx3dGeomConic。": "A class representing geometric ellipses with parameters, inherited from Mx3dGeomConic.",
  "构造函数，接受一个坐标系、长轴半径和短轴半径作为参数。": "Constructor that accepts a coordinate system, major axis radius, and minor axis radius as parameters.",
  "| `A2` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 坐标系对象。 |": "|A2 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Coordinate system object|",
  "| `MajorRadius` | `number` | 长轴半径。 |": "|MajorRadius | number | major axis radius|",
  "| `MinorRadius` | `number` | 短轴半径。 |": "|MinorRadius | number | short axis radius|",
  "复制椭圆对象。": "Copy an elliptical object.",
  "复制的椭圆对象。": "Copy the elliptical object.",
  "获取第一个准线。": "Obtain the first guide line.",
  "准线对象。": "Alignment object.",
  "获取第二个准线。": "Obtain the second guideline.",
  "离心率值。": "Centrifuge rate value.",
  "获取椭圆的边形状对象。": "Retrieve the edge shape object of an ellipse.",
  "椭圆的边形状对象。": "Elliptical edge shaped object.",
  "获取椭圆的第一个参数。": "Get the first parameter of the ellipse.",
  "焦距值。": "Focal length value.",
  "获取第一个焦点。": "Get the first focus.",
  "第一个焦点对象。": "The first focal object.",
  "获取第二个焦点。": "Get the second focus.",
  "第二个焦点对象。": "The second focal object.",
  "检查椭圆是否闭合。": "Check if the ellipse is closed.",
  "如果椭圆是闭合的，返回 true；否则返回 false。": "If the ellipse is closed, return true; Otherwise, return false.",
  "检查椭圆是否周期性。": "Check if the ellipse is periodic.",
  "如果椭圆是周期性的，返回 true；否则返回 false。": "If the ellipse is periodic, return true; Otherwise, return false.",
  "获取椭圆的最后一个参数。": "Get the last parameter of the ellipse.",
  "获取长轴半径。": "Obtain the long axis radius.",
  "长轴半径值。": "Long axis radius value.",
  "获取短轴半径。": "Obtain the short axis radius.",
  "短轴半径值。": "Short axis radius value.",
  "获取椭圆的偏移曲线。": "Obtain the offset curve of the ellipse.",
  "| `V` | [`Mx3dGeDir`](Mx3dGeDir.md) | 方向向量，与偏移方向垂直。 |": "|V | [Mx3dGeDir] (Mx3dGeDir. md) | Direction vector, perpendicular to the offset direction|",
  "椭圆的偏移曲线。": "The offset curve of an ellipse.",
  "获取参数。": "Get parameters.",
  "参数值。": "Parameter values.",
  "设置长轴半径。": "Set the long axis radius.",
  "设置短轴半径。": "Set the short axis radius.",
  "对椭圆进行变换。": "Transform the ellipse.",
  "获取椭圆的Wire形状对象。": "Retrieve an elliptical wire shaped object.",
  "椭圆的Wire形状对象。": "Elliptical wire shaped object.",
  "父类对象转 Mx3dGeomEllipse 类对象": "Convert parent class object to Mx3dGeomEllipse class object",
  "Mx3dGeomEllipse 类对象": "Mx3dGeomEllipse class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomHyperbola": "[mxcad_3d API documentation](../README. md)/Mx3dGeomHyperbola",
  "表示参数几何双曲线的类，继承自 Mx3dGeomConic。": "The class representing parameter geometric hyperbolas inherits from Mx3dGeomConic.",
  "获取第一个渐近线。": "Get the first asymptote.",
  "渐近线对象。": "The asymptote object.",
  "获取第二个渐近线。": "Obtain the second asymptote.",
  "获取第一个共轭支。": "Obtain the first conjugate branch.",
  "第一个共轭支对象。": "The first conjugate branch object.",
  "获取第二个共轭支。": "Obtain the second conjugate branch.",
  "第二个共轭支对象。": "The second conjugate branch object.",
  "复制双曲线对象。": "Copy hyperbolic objects.",
  "复制的双曲线对象。": "Copy the hyperbolic object.",
  "获取双曲线的边。": "Obtain the edges of the hyperbola.",
  "双曲线的边对象。": "The edge object of a hyperbola.",
  "获取双曲线的第一个参数。": "Get the first parameter of the hyperbola.",
  "检查双曲线是否闭合。": "Check if the hyperbola is closed.",
  "如果双曲线是闭合的，返回 true；否则返回 false。": "If the hyperbola is closed, return true; Otherwise, return false.",
  "检查双曲线是否周期性。": "Check if the hyperbola is periodic.",
  "如果双曲线是周期性的，返回 true；否则返回 false。": "If the hyperbola is periodic, return true; Otherwise, return false.",
  "获取双曲线的最后一个参数。": "Get the last parameter of the hyperbola.",
  "获取双曲线的偏移曲线。": "Obtain the offset curve of the hyperbola.",
  "| `isNotCheckC0` | `boolean` | 是否检查 C0 连续性。 |": "|IsNotCheckC0 | boolean | Check for C0 continuity|",
  "偏移曲线的边对象。": "Offset the edge object of the curve.",
  "获取另一支双曲线。": "Obtain another hyperbola.",
  "另一支双曲线对象。": "Another hyperbolic object.",
  "父类对象转 Mx3dGeomHyperbola 类对象": "Convert parent class object to Mx3dGeomHyperbola class object",
  "Mx3dGeomHyperbola 类对象": "Mx3dGeomHyperbola class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomLine": "[mxcad_3d API Document](../README. md)/Mx3dGeomLine",
  "表示几何直线的类，继承自 Mx3dGeomCurve。": "The class representing geometric lines inherits from Mx3dGeomCurve.",
  "构造函数，接受一个轴作为参数。": "Constructor that accepts an axis as a parameter.",
  "构造函数，接受一个点和一个方向作为参数。": "Constructor that accepts a point and a direction as parameters.",
  "复制直线对象。": "Copy the line object.",
  "复制的直线对象。": "Copy the line object.",
  "获取直线的边形状对象。": "Get the edge shape object of a straight line.",
  "直线的边形状对象。": "The edge shape object of a straight line.",
  "获取直线的第一个参数。": "Get the first parameter of the line.",
  "检查直线是否是 C^N 连续的。": "Check if the straight line is C ^ N continuous.",
  "如果直线是 C^N 连续的，返回 true；否则返回 false。": "If the line is C ^ N continuous, return true; Otherwise, return false.",
  "如果直线是闭合的，返回 true；否则返回 false。": "If the line is closed, return true; Otherwise, return false.",
  "检查直线是否周期性。": "Check if the straight line is periodic.",
  "如果直线是周期性的，返回 true；否则返回 false。": "If the line is periodic, return true; Otherwise, return false.",
  "获取直线的最后一个参数。": "Get the last parameter of the line.",
  "获取直线的偏移曲线。": "Obtain the offset curve of the straight line.",
  "直线的偏移曲线。": "The offset curve of a straight line.",
  "获取参数变换。": "Obtain parameter transformation.",
  "参数变换值。": "Parameter transformation value.",
  "对直线进行变换。": "Transform the straight line.",
  "变换后的参数值。": "The transformed parameter values.",
  "父类对象转 Mx3dGeomLine 类对象": "Convert parent object to Mx3dGeomLine class object",
  "Mx3dGeomLine 类对象": "Mx3dGeomLine class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomObject": "[mxcad_3d API Document](../README. md)/Mx3dGeomObject",
  "表示参数几何对象的基类。": "Represents the base class of parameter geometric objects.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomParabola": "[mxcad_3d API Document](../README. md)/Mx3dGeomParabola",
  "构造函数，接受一个坐标系和焦距作为参数。": "Constructor that accepts a coordinate system and focal length as parameters.",
  "| `Focal` | `number` | 焦距。 |": "|Focal length | number | focal length|",
  "复制抛物线对象。": "Copy the parabolic object.",
  "复制的抛物线对象。": "Copy the parabolic object.",
  "获取准线。": "Get the guide line.",
  "准线所在轴对象。": "The axis object where the guide line is located.",
  "获取抛物线的边。": "Obtain the edges of the parabola.",
  "抛物线的边对象。": "The edge object of a parabola.",
  "获取抛物线的第一个参数。": "Get the first parameter of the parabola.",
  "获取焦点。": "Get focus.",
  "焦点对象。": "Focus object.",
  "检查抛物线是否闭合。": "Check if the parabola is closed.",
  "如果抛物线是闭合的，返回 true；否则返回 false。": "If the parabola is closed, return true; Otherwise, return false.",
  "检查抛物线是否周期性。": "Check if the parabola is periodic.",
  "如果抛物线是周期性的，返回 true；否则返回 false。": "If the parabola is periodic, return true; Otherwise, return false.",
  "获取抛物线的最后一个参数。": "Get the last parameter of the parabola.",
  "获取抛物线的偏移曲线。": "Obtain the offset curve of the parabola.",
  "设置焦距。": "Set the focal length.",
  "对抛物线进行变换。": "Transform the parabola.",
  "父类对象转 Mx3dGeomParabola 类对象": "Convert parent object to Mx3dGeomParabola class object",
  "Mx3dGeomParabola 类对象": "Mx3dGeomParabola class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomPlane": "[mxcad_3d API Document](../README. md)/Mx3dGeomPlane",
  "Mx3dGeomPlane 类，提供描述和操作3D空间中平面的功能。\r": "The Mx3dGeomPlane class provides the ability to describe and manipulate planes in 3D space.",
  "一个平面由坐标系 (Mx3dGeCSYSR) 定义，可以通过其法向量、原点和参数方向来描述。": "A plane is defined by a coordinate system (Mx3dGeCSYSR) and can be described by its normal vector, origin, and parameter direction.",
  "根据指定的轴向位置构造一个位于3D空间中的平面。": "Construct a plane in 3D space based on the specified axial position.",
  "| `A3` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 定义平面位置和方向的坐标系 (Mx3dGeCSYSR)。 |": "|A3 | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Define the coordinate system for plane position and orientation (Mx3dGeCSYSR)|",
  "根据一个点和法向量构造一个平面。": "Construct a plane based on a point and a normal vector.",
  "| `P` | `UniPoint` | 平面的原点。 |": "|P | UniPoint | The origin of the plane|",
  "| `V` | `UniDir` | 法向量，指向平面的方向。 |": "|V | UniDirt | Normal vector, pointing in the direction of the plane|",
  "根据平面方程的系数构造一个平面。": "Construct a plane based on the coefficients of the plane equation.",
  "| `A` | `number` | 方程 Ax + By + Cz + D = 0 的系数 A。 |": "|A | number | The coefficient A of the equation Ax+By+Cz+D=0|",
  "| `B` | `number` | 方程 Ax + By + Cz + D = 0 的系数 B。 |": "|The coefficient B of the equation Ax+By+Cz+D=0|",
  "| `C` | `number` | 方程 Ax + By + Cz + D = 0 的系数 C。 |": "|The coefficient C of the equation Ax+By+Cz+D=0|",
  "| `D` | `number` | 方程 Ax + By + Cz + D = 0 的系数 D。 |": "|The coefficient D of the equation Ax+By+Cz+D=0|",
  "计算平面的参数范围。": "Calculate the parameter range of the plane.",
  "计算平面方程的系数。": "Calculate the coefficients of the plane equation.",
  "| `ABCD` | [dA: number, dB: number, dC: number, dD: number] | 系数数组 [dA, dB, dC, dD]。 |": "|ABCD | [dA: number, dB: number, dC: number, dD: number] | Coefficient array [dA, dB, dC, dD]|",
  "创建一个新的对象，作为该平面的副本。": "Create a new object as a copy of the plane.",
  "返回新的平面对象 (Mx3dGeomObject)。": "Return a new flat object (Mx3dGeomObject).",
  "计算在指定的 U 和 V 参数值处的点。": "Calculate the point at the specified U and V parameter values.",
  "| `U` | `number` | U 参数值。 |": "|U | number | U parameter value|",
  "| `V` | `number` | V 参数值。 |": "|V | number | V parameter value|",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 用于存储计算点的目标对象 (Mx3dGePoint)。 计算公式为 P = O + U * XDir + V * YDir， 其中 O 为平面的原点，XDir 和 YDir 分别是 U 和 V 参数方向的基向量。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Used to store the target object (Mx3dGePoint) for computing points. The calculation formula is P=O+U * XDir+V * YDir, where O is the origin of the plane, XDir and YDir are the basis vectors in the U and V parameter directions, respectively|",
  "计算在指定的 U 和 V 参数值处的点及其一阶导数。": "Calculate the point and its first derivative at the specified U and V parameter values.",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 用于存储计算点的目标对象 (Mx3dGePoint)。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Used to store the target object (Mx3dGePoint) for computing points|",
  "| `D1U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 U 方向第一导数的目标对象 (Mx3dGeVec)。 |": "|D1U | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) of the first derivative in the U direction|",
  "| `D1V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 V 方向第一导数的目标对象 (Mx3dGeVec)。 计算公式为： - 点：P = O + U * XDir + V * YDir。 - 第一导数：D1U 和 D1V 分别为 XDir 和 YDir 的偏导数。 |": "|D1V | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) for the first derivative in the V direction. The calculation formula is: - point: P = O + U * XDir + V * YDir。 -  The first derivative: D1U and D1V are partial derivatives of XDir and YDir, respectively|",
  "计算在指定的 U 和 V 参数值处的点、第一阶和第二阶导数。": "Calculate the point, first and second derivatives at the specified U and V parameter values.",
  "| `D1V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 V 方向第一导数的目标对象 (Mx3dGeVec)。 |": "|D1V | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) for the first derivative in the V direction|",
  "| `D2U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 U 方向第二导数的目标对象 (Mx3dGeVec)。 |": "|D2U | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) of the second derivative in the U direction|",
  "| `D2V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 V 方向第二导数的目标对象 (Mx3dGeVec)。 |": "|D2V | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) for the second derivative in the V direction|",
  "| `D2UV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 UV 方向第二导数的目标对象 (Mx3dGeVec)。 计算公式为： - 点：P = O + U * XDir + V * YDir。 - 第一导数：D1U 和 D1V 分别为 XDir 和 YDir 的偏导数。 - 第二导数：D2U、D2V 和 D2UV 为二阶偏导数。 |": "|D2UV | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) of the second derivative in the UV direction. The calculation formula is: - point: P = O + U * XDir + V * YDir。 -  The first derivative: D1U and D1V are partial derivatives of XDir and YDir, respectively- Second derivative: D2U, D2V, and D2UV are second-order partial derivatives|",
  "计算在指定的 U 和 V 参数值处的点、第一、第二和第三阶导数。": "Calculate the point, first, second, and third derivatives at the specified U and V parameter values.",
  "| `D2UV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 UV 方向第二导数的目标对象 (Mx3dGeVec)。 |": "|D2UV | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) of the second derivative in the UV direction|",
  "| `D3U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 U 方向第三导数的目标对象 (Mx3dGeVec)。 |": "|D3U | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) for the third derivative in the U direction|",
  "| `D3V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 V 方向第三导数的目标对象 (Mx3dGeVec)。 |": "|D3V | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) for the third derivative in the V direction|",
  "| `D3UUV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 UUU 方向第三导数的目标对象 (Mx3dGeVec)。 |": "|D3UUV | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) of the third derivative in the UUU direction|",
  "| `D3UVV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 用于存储 UVV 方向第三导数的目标对象 (Mx3dGeVec)。 计算公式为： - 点：P = O + U * XDir + V * YDir。 - 第一导数：D1U 和 D1V 分别为 XDir 和 YDir 的偏导数。 - 第二导数：D2U、D2V 和 D2UV 为二阶偏导数。 - 第三导数：D3U、D3V、D3UUV 和 D3UVV 为三阶偏导数。 |": "|D3UVV | [Mx3dGeVec] (Mx3dGeVec. md) | Used to store the target object (Mx3dGeVec) of the third derivative in the UVV direction. The calculation formula is: - point: P = O + U * XDir + V * YDir。 -  The first derivative: D1U and D1V are partial derivatives of XDir and YDir, respectively- Second derivative: D2U, D2V, and D2UV are second-order partial derivatives- Third derivative: D3U, D3V, D3UUV, and D3UVV are third order partial derivatives|",
  "计算在指定的 U 和 V 参数值处的指定阶数的导数。": "Calculate the derivative of the specified order at the specified U and V parameter values.",
  "错误：如果 Nu + Nv < 1 或 Nu < 0 或 Nv < 0，则抛出异常。\r": "Error: If Nu+Nv<1 or Nu<0 or Nv<0, throw an exception.",
  "计算公式为计算指定阶数的偏导数，返回对应的向量。": "The calculation formula is to calculate the partial derivative of a specified order and return the corresponding vector.",
  "| `Nu` | `number` | U 方向的导数阶数。 |": "|Nu | number | derivative order in the U direction|",
  "| `Nv` | `number` | V 方向的导数阶数。 |": "|Nv | number | derivative order in the V direction|",
  "返回计算的向量对象 (Mx3dGeVec)。": "Return the computed vector object (Mx3dGeVec).",
  "类型名称字符串。": "Type name string.",
  "根据公差生成一个平面面。": "Generate a flat surface based on tolerances.",
  "| `TolDegen` | `number` | 公差值。 |": "|Toleden | number | tolerance value|",
  "生成的平面面 (Mx3dShapeFace)。": "The generated flat surface (Mx3dShapeFace).",
  "根据给定的轮廓线和是否在内部生成一个平面面。": "Generate a planar surface based on the given contour line and whether it is internally generated.",
  "| `W` | [`Mx3dShapeWire`](Mx3dShapeWire.md) | 轮廓线 (Mx3dShapeWire)。 |": "|W | [Mx3dShapeWire] (Mx3dShapeWire. md) | Contour Line (Mx3dShapeWire)|",
  "根据 U 和 V 范围以及公差生成一个平面面。": "Generate a flat surface based on the range of U and V and tolerances.",
  "| `UMin` | `number` | U 方向的最小值。 |": "|UMin | number | The minimum value in the U direction|",
  "| `UMax` | `number` | U 方向的最大值。 |": "|UMax | number | maximum value in the U direction|",
  "| `VMin` | `number` | V 方向的最小值。 |": "|VMin | number | minimum value in the V direction|",
  "| `VMax` | `number` | V 方向的最大值。 |": "|VMax | number | maximum value in the V direction|",
  "判断平面在 U 方向上是否闭合。": "Determine whether the plane is closed in the U direction.",
  "返回 false。": "Return false.",
  "判断平面在 U 方向上是否周期性。": "Determine whether the plane is periodic in the U direction.",
  "判断平面在 V 方向上是否闭合。": "Determine whether the plane is closed in the V direction.",
  "判断平面在 V 方向上是否周期性。": "Determine whether the plane is periodic in the V direction.",
  "应用变换 T 到平面上。": "Apply transformation T to the plane.",
  "| `T` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 变换 (Mx3dGeTrsf)。 |": "|T | [Mx3dGeTsf] (Mx3dGeTsf. md) | Transform (Mx3dGeTsf)|",
  "将 U 和 V 参数以及变换 T 应用于平面。": "Apply the U and V parameters, as well as the transformation T, to the plane.",
  "| `UV` | [dU: number, dV: number] | 参数值数组 [dU, dV]。 |": "|UV | [dU: number, dV: number] | Parameter value array [dU, dV]|",
  "翻转平面在 U 参数方向上的方向。": "Flip the direction of the plane in the U parameter direction.",
  "计算在平面翻转 U 参数方向后的 U 参数值。": "Calculate the U-parameter value after flipping the U-parameter direction in the plane.",
  "| `U` | `number` | 原始的 U 参数。 |": "|U | number | The original U parameter|",
  "翻转后的 U 参数。": "Flipped U parameter.",
  "翻转平面在 V 参数方向上的方向。": "Flip the direction of the plane in the direction of the V parameter.",
  "计算在平面翻转 V 参数方向后的 V 参数值。": "Calculate the V parameter value after flipping the V parameter direction in the plane.",
  "| `V` | `number` | 原始的 V 参数。 |": "|V | number | The original V parameter|",
  "翻转后的 V 参数。": "The flipped V parameter.",
  "父类对象转 Mx3dGeomPlane 类对象": "Convert parent class object to Mx3dGeomPlane class object",
  "Mx3dGeomPlane 类对象": "Mx3dGeomPlane class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomSphericalSurface": "[mxcad_3d API Document](../README. md)/Mx3dGeomSphericalSurface",
  "表示三维空间中的球面。\r": "Representing a sphere in three-dimensional space.",
  "此类封装了操作球面属性和方法的功能。": "This type encapsulates the functionality of manipulating spherical properties and methods.",
  "构造一个具有给定坐标系统和半径的球面。": "Construct a sphere with a given coordinate system and radius.",
  "| `A3` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 表面局部坐标系统（Mx3dGeCSYSR）。 |": "|A3 | Mx3dGeCSYSR (Mx3dGeCSYSR. md) | Surface Local Coordinate System (Mx3dGeCSYSR)|",
  "| `Radius` | `number` | 球的半径。 |": "|Radius | number | The radius of a sphere|",
  "计算球面面积。": "Calculate the spherical area.",
  "表面面积。": "Surface area.",
  "检索参数域的边界。": "Retrieve the boundary of the parameter field.",
  "| `U1U2V1V2` | [dU1: number, dU2: number, dV1: number, dV2: number] | 包含边界的数组：[dU1, dU2, dV1, dV2]。 |": "|U1U2V1V2 | [dU1: number, dU2: number, dV1: number, dV2: number] | Array containing boundaries: [dU1, dU2, dV1, dV2]。 |",
  "设置球面隐式方程的系数。": "Set the coefficients of the spherical implicit equation.",
  "| `A1A2A3B1B2B3C1C2C3D` | [A1: number, A2: number, A3: number, B1: number, B2: number, B3: number, C1: number, C2: number, C3: number, D: number] | 系数数组：[A1, A2, A3, B1, B2, B3, C1, C2, C3, D]。 |": "|A1A2A3B1B2B3C1C2C3D | [A1: number, A2: number, A3: number, B1: number, B2: number, B3: number, C1: number, C2: number, C3: number, D: number] | Coefficient array: [A1, A2, A3, B1, B2, B3, C1, C2, C3, D]。 |",
  "创建球面的副本。": "Create a copy of the sphere.",
  "球面的新实例。": "A new instance of a sphere.",
  "计算给定U和V参数的表面点。": "Calculate the surface points for the given U and V parameters.",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 表面上的点。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Points on the surface|",
  "计算给定U和V参数的点及其一阶导数。": "Calculate the point and its first derivative for the given U and V parameters.",
  "| `D1U` | [`Mx3dGeVec`](Mx3dGeVec.md) | U方向的导数。 |": "|D1U | [Mx3dGeVec] (Mx3dGeVec. md) | Derivative in the U direction|",
  "| `D1V` | [`Mx3dGeVec`](Mx3dGeVec.md) | V方向的导数。 |": "|D1V | [Mx3dGeVec] (Mx3dGeVec. md) | Derivative in the V direction|",
  "计算给定U和V参数的点、一阶和二阶导数。": "Calculate the point, first and second derivatives of the given U and V parameters.",
  "| `D2UV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 二阶混合导数。 |": "|D2UV | [Mx3dGeVec] (Mx3dGeVec. md) | Second order mixed derivative|",
  "计算给定U和V参数的点、一阶、二阶和三阶导数。": "Calculate the point, first, second, and third derivatives of the given U and V parameters.",
  "| `D3UUV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 三阶混合导数（U和U）。 |": "|D3UUV | [Mx3dGeVec] (Mx3dGeVec. md) | Third order mixed derivatives (U and U)|",
  "| `D3UVV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 三阶混合导数（U和V）。 |": "|D3UVV | [Mx3dGeVec] (Mx3dGeVec. md) | Third order mixed derivative (U and V)|",
  "计算在U和V方向上的指定阶数导数。": "Calculate the specified order derivative in the U and V directions.",
  "| `Nu` | `number` | U方向上的导数阶数。 |": "|Nu | number | derivative order in the U direction|",
  "| `Nv` | `number` | V方向上的导数阶数。 |": "|Nv | number | derivative order in the V direction|",
  "第N阶导数向量。": "Nth derivative vector.",
  "使用退化容差生成表面的面。": "Generate surfaces using degraded tolerance.",
  "| `TolDegen` | `number` | 退化容差。 |": "|TolDegen | number | Degradation tolerance|",
  "表面表示的面。": "Surface representation of the surface.",
  "使用线框和内部标志生成表面的面。": "Generate surface faces using wireframes and internal markers.",
  "| `W` | [`Mx3dShapeWire`](Mx3dShapeWire.md) | 定义边界的线框。 |": "|W | [Mx3dShapeWire] (Mx3dShapeWire. md) | Define the wireframe of the boundary|",
  "| `Inside` | `boolean` | 布尔值，表示面是否在线框内。 |": "|Inside | boolean | Boolean value, indicating whether the face is within the wireframe|",
  "使用指定的参数范围和退化容差生成表面的面。": "Generate surfaces with specified parameter ranges and degradation tolerances.",
  "| `UMin` | `number` | 参数范围的最小U值。 |": "|UMin | number | The minimum U value of the parameter range|",
  "| `UMax` | `number` | 参数范围的最大U值。 |": "|UMax | number | The maximum U value within the parameter range|",
  "| `VMin` | `number` | 参数范围的最小V值。 |": "|VMin | number | The minimum V value of the parameter range|",
  "| `VMax` | `number` | 参数范围的最大V值。 |": "|VMax | number | The maximum V value within the parameter range|",
  "| `TolDegen` | `number` | 退化容差，用于处理几何退化情况。 |": "|TolDegen | number | Degradation tolerance, used to handle geometric degradation situations|",
  "表面表示的面，通常是一个闭合的曲面片段。": "A surface representation is usually a closed surface segment.",
  "检查表面在U方向是否闭合。": "Check if the surface is closed in the U direction.",
  "如果U方向闭合则为True，否则为False。": "If the U direction is closed, it is True; otherwise, it is False.",
  "检查表面在U方向是否周期性。": "Check if the surface is periodic in the U direction.",
  "如果U方向周期性则为True，否则为False。": "If the U direction is periodic, it is True; otherwise, it is False.",
  "检查表面在V方向是否闭合。": "Check if the surface is closed in the V direction.",
  "如果V方向闭合则为True，否则为False。": "If the V direction is closed, it is True; otherwise, it is False.",
  "检查表面在V方向是否周期性。": "Check if the surface is periodic in the V direction.",
  "如果V方向周期性则为True，否则为False。": "If the V direction is periodic, it is True; otherwise, it is False.",
  "返回球面半径。": "Return the radius of the sphere.",
  "球的半径。": "The radius of the ball.",
  "设置球面半径。": "Set the spherical radius.",
  "| `R` | `number` | 新的球面半径。必须为非负数。 |": "|R | number | New spherical radius. It must be non negative|",
  "应用变换到球面。": "Apply transformation to a sphere.",
  "| `T` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 要应用的变换。 |": "|T | [Mx3dGetStrf] (Mx3dGetStrf. md) | The transformation to be applied|",
  "计算在给定点上U参数方向反转后的U参数值。": "Calculate the U-parameter value after reversing the U-parameter direction at a given point.",
  "| `U` | `number` | 原始的U参数。 |": "|U | number | The original U parameter|",
  "反转后的U参数值。": "The inverted U parameter value.",
  "计算在给定点上V参数方向反转后的V参数值。": "Calculate the value of the V parameter after reversing its direction at a given point.",
  "| `V` | `number` | 原始的V参数。 |": "|V | number | The original V parameter|",
  "反转后的V参数值。": "The inverted value of the V parameter.",
  "计算球面体积。": "Calculate the volume of the sphere.",
  "表面体积。": "Surface volume.",
  "父类对象转 Mx3dGeomSphericalSurface 类对象": "Convert parent class object to Mx3dGeomSphericalSurface class object",
  "Mx3dGeomSphericalSurface 类对象": "Mx3dGeomSphericalSurface class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomSurface": "[mxcad_3d API Document](../README. md)/Mx3dGeomSurface",
  "Mx3dGeomSurface 类，提供了 3D 表面操作的方法。": "The Mx3dGeomSurface class provides methods for 3D surface manipulation.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeomToroidalSurface": "[mxcad_3d API Document](../README. md)/Mx3dGeomToroidalSurface",
  "表示三维空间中的环面（Toroidal Surface）。\r": "Representing a Toroidal Surface in three-dimensional space.",
  "此类封装了操作环面属性和方法的功能。": "This type encapsulates the functionality of manipulating torus properties and methods.",
  "构造一个具有给定坐标系统和主要、次要半径的环面。": "Construct a torus with a given coordinate system and primary and secondary radii.",
  "| `MajorRadius` | `number` | 环面的主要半径。 |": "|MajorRadius | number | The main radius of the torus|",
  "| `MinorRadius` | `number` | 环面的次要半径。 |": "|MinorRadius | number | The minor radius of the torus|",
  "计算并返回环面的表面积。": "Calculate and return the surface area of the torus.",
  "表面积。": "Surface area.",
  "设置参数范围的边界。": "Set the boundary of the parameter range.",
  "| `U1U2V1V2` | [dU1: number, dU2: number, dV1: number, dV2: number] | 参数范围[U1, U2, V1, V2]。 |": "|U1U2V1V2 | [dU1: number, dU2: number, dV1: number, dV2: number] | Parameter range [U1, U2, V1, V2]|",
  "获取隐式方程系数。": "Obtain implicit equation coefficients.",
  "| `Coef` | `number`[] | 系数数组，长度至少为31。 |": "|Coef | number [] | coefficient array, with a length of at least 31|",
  "创建一个新的对象，它是此环面的副本。": "Create a new object that is a copy of this torus.",
  "环面的副本（Mx3dGeomObject）。": "Copy of the torus (Mx3dGeomObject).",
  "计算并返回指定U和V参数处的点。": "Calculate and return the point at the specified U and V parameters.",
  "| `U` | `number` | 参数U。 |": "|U | number | parameter U|",
  "| `V` | `number` | 参数V。 |": "|V | number | parameter V|",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 输出点（Mx3dGePoint）。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Output Point (Mx3dGePoint)|",
  "计算当前点和U、V方向的一阶导数。": "Calculate the first derivative of the current point and the U and V directions.",
  "| `D1U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出U方向的一阶导数（Mx3dGeVec）。 |": "|D1U | [Mx3dGeVec] (Mx3dGeVec. md) | Output the first derivative in the U direction (Mx3dGeVec)|",
  "| `D1V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出V方向的一阶导数（Mx3dGeVec）。 |": "|D1V | [Mx3dGeVec] (Mx3dGeVec. md) | Output the first derivative in the V direction (Mx3dGeVec)|",
  "计算当前点、一阶和二阶导数。": "Calculate the current point, first and second derivatives.",
  "| `D2U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出U方向的二阶导数（Mx3dGeVec）。 |": "|D2U | [Mx3dGeVec] (Mx3dGeVec. md) | Output the second derivative in the U direction (Mx3dGeVec)|",
  "| `D2V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出V方向的二阶导数（Mx3dGeVec）。 |": "|D2V | [Mx3dGeVec] (Mx3dGeVec. md) | Output the second derivative in the V direction (Mx3dGeVec)|",
  "| `D2UV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出U,V方向的二阶混合导数（Mx3dGeVec）。 |": "|D2UV | [Mx3dGeVec] (Mx3dGeVec. md) | Output the second-order mixed derivative in the U and V directions (Mx3dGeVec)|",
  "计算当前点、一阶、二阶和三阶导数。": "Calculate the current point, first, second, and third derivatives.",
  "| `D3U` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出U方向的三阶导数（Mx3dGeVec）。 |": "|D3U | [Mx3dGeVec] (Mx3dGeVec. md) | Output the third derivative in the U direction (Mx3dGeVec)|",
  "| `D3V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出V方向的三阶导数（Mx3dGeVec）。 |": "|D3V | [Mx3dGeVec] (Mx3dGeVec. md) | Output the third derivative in the V direction (Mx3dGeVec)|",
  "| `D3UUV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出U方向的二阶混合三阶导数（Mx3dGeVec）。 |": "|D3UUV | [Mx3dGeVec] (Mx3dGeVec. md) | Output the second-order mixed third-order derivative in the U direction (Mx3dGeVec)|",
  "| `D3UVV` | [`Mx3dGeVec`](Mx3dGeVec.md) | 输出V方向的二阶混合三阶导数（Mx3dGeVec）。 |": "|D3UVV | [Mx3dGeVec] (Mx3dGeVec. md) | Output the second-order mixed third-order derivative in the V direction (Mx3dGeVec)|",
  "计算指定参数(U, V)处的高阶导数。": "Calculate the higher-order derivative at the specified parameters (U, V).",
  "| `Nu` | `number` | 高阶导数的U方向阶数。 |": "|Nu | number | The U-direction order of higher-order derivatives|",
  "| `Nv` | `number` | 高阶导数的V方向阶数。 |": "|Nv | number | The V-direction order of higher-order derivatives|",
  "高阶导数（Mx3dGeVec）。": "Higher order derivative (Mx3dGeVec).",
  "创建一个表示环面的平面（由面容表示）。": "Create a plane representing a torus (represented by a face).",
  "平面（Mx3dShapeFace）。": "Flat (Mx3dShapeFace).",
  "创建一个表示环面的平面（由线条表示）。": "Create a plane representing a torus (represented by lines).",
  "| `W` | [`Mx3dShapeWire`](Mx3dShapeWire.md) | 线条（Mx3dShapeWire）。 |": "|W | [Mx3dShapeWire] (Mx3dShapeWire. md) | Line (Mx3dShapeWire)|",
  "| `Inside` | `boolean` | 表示环面是否在内部。 |": "|Inside | boolean | indicates whether the torus is inside|",
  "创建一个表示环面的平面（指定U, V范围）。": "Create a plane representing a torus (specifying the range of U, V).",
  "| `UMin` | `number` | 最小U参数。 |": "|UMin | number | minimum U parameter|",
  "| `UMax` | `number` | 最大U参数。 |": "|UMax | number | Maximum U parameter|",
  "| `VMin` | `number` | 最小V参数。 |": "|VMin | number | minimum V parameter|",
  "| `VMax` | `number` | 最大V参数。 |": "|VMax | number | maximum V parameter|",
  "检查环面U方向是否闭合。": "Check if the torus U direction is closed.",
  "如果U方向闭合则返回true，否则返回false。": "If the U direction is closed, return true; otherwise, return false.",
  "检查环面U方向是否周期性。": "Check if the U direction of the torus is periodic.",
  "如果U方向周期性则返回true，否则返回false。": "If the U direction is periodic, return true; otherwise, return false.",
  "检查环面V方向是否闭合。": "Check if the V-direction of the torus is closed.",
  "如果V方向闭合则返回true，否则返回false。": "If the V direction is closed, return true; otherwise, return false.",
  "检查环面V方向是否周期性。": "Check if the V-direction of the torus is periodic.",
  "如果V方向周期性则返回true，否则返回false。": "If the V direction is periodic, return true; otherwise, return false.",
  "返回环面的主要半径。": "Return the main radius of the torus.",
  "主要半径。": "Main radius.",
  "返回环面的次要半径。": "Return the secondary radius of the torus.",
  "次要半径。": "Secondary radius.",
  "设置环面主要半径。": "Set the main radius of the torus.",
  "| `MajorRadius` | `number` | 新的主要半径。必须为非负数。 |": "|MajorRadius | number | New primary radius. It must be non negative|",
  "设置环面次要半径。": "Set the secondary radius of the torus.",
  "| `MinorRadius` | `number` | 新的次要半径。必须为非负数。 |": "|MinorRadius | number | New secondary radius. It must be non negative|",
  "应用变换T到环面。": "Apply the transformation T to the torus.",
  "| `T` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 变换（Mx3dGeTrsf）。 |": "|T | [Mx3dGeTsf] (Mx3dGeTsf. md) | Transform (Mx3dGeTsf)|",
  "计算在给定U参数上的环面U方向反转后的参数值。": "Calculate the parameter value of the torus U direction reversed on a given U parameter.",
  "计算在给定V参数上的环面V方向反转后的参数值。": "Calculate the parameter value of the torus V direction reversed on the given V parameter.",
  "计算并返回环面的体积。": "Calculate and return the volume of the torus.",
  "体积。": "Volume.",
  "父类对象转 Mx3dGeomToroidalSurface 类对象": "Convert parent object to Mx3dGeomToroidalSurface class object",
  "Mx3dGeomToroidalSurface 类对象": "Mx3dGeomToroidalSurface class object",
  "[mxcad_3d API 文档](../README.md) / Mx3dGePlane": "[mxcad_3d API Document](../README. md)/Mx3dGePlane",
  "表示3D几何中的平面。\r": "Represents a plane in 3D geometry.",
  "平面对象可通过坐标系、点、方向向量等多种方式定义，并提供了多种几何变换和操作方法。": "Plane objects can be defined in various ways such as coordinate systems, points, direction vectors, etc., and provide multiple geometric transformations and operation methods.",
  "默认构造函数，创建一个平面。": "The default constructor creates a plane.",
  "构造函数，使用指定坐标系初始化平面。": "Constructor, initializes the plane using the specified coordinate system.",
  "| `theA3` | [`Mx3dGeCSYS`](Mx3dGeCSYS.md) | 用于初始化平面的坐标系（CSYS）对象。 |": "|TheA3 | [Mx3dGeCSYS] (Mx3dGeCSYS. md) | Used to initialize the coordinate system (CSYS) object of the plane|",
  "构造函数，使用指定点和向量初始化平面。": "Constructor, initializes a plane using specified points and vectors.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 平面上的点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Point on the plane|",
  "| `theV` | [`Mx3dGeDir`](Mx3dGeDir.md) | 与平面垂直的向量，用于定义平面的方向。 |": "|TheV | [Mx3dGeDir] (Mx3dGeDir. md) | A vector perpendicular to the plane, used to define the direction of the plane|",
  "构造函数，使用平面方程的系数初始化平面。": "Constructor, initialize the plane using the coefficients of the plane equation.",
  "| `theA` | `number` | 平面方程中的系数A。 |": "|The coefficient A in the plane equation|",
  "| `theB` | `number` | 平面方程中的系数B。 |": "|The coefficient B in the plane equation|",
  "| `theC` | `number` | 平面方程中的系数C。 |": "|The coefficient C in the plane equation|",
  "| `theD` | `number` | 平面方程中的系数D。 |": "|The coefficient D in the plane equation|",
  "获取平面的法向轴向。": "Obtain the normal axis of the plane.",
  "平面的法向轴向对象。": "The normal axial object of a plane.",
  "检查点是否在平面上。": "Check if the checkpoint is on the plane.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 需要检查的点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Points that need to be checked|",
  "| `theLinearTolerance` | `number` | 线性容差，用于判定点是否在平面上。 |": "|The LinearTolerance | number | Linear tolerance is used to determine whether a point is on a plane|",
  "如果点在平面上，则返回true；否则返回false。": "If the point is on a plane, return true; Otherwise, return false.",
  "检查平面是否是右手坐标系。": "Check if the plane is in a right-handed coordinate system.",
  "如果平面是右手坐标系，则返回true；否则返回false。": "If the plane is a right-handed coordinate system, return true; Otherwise, return false.",
  "计算两个平面之间的距离。": "Calculate the distance between two planes.",
  "| `theOther` | [`Mx3dGePlane`](Mx3dGePlane.md) | 另一个平面对象。 |": "|` theOther ` | [` Mx3dGePlane `] (Mx3dGePlane. md) | Another planar object|",
  "两个平面之间的距离值。": "The distance value between two planes.",
  "计算点到平面的距离。": "Calculate the distance from a point to a plane.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 需要计算距离的点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Points that require distance calculation|",
  "点到平面的距离值。": "The distance value from the point to the plane.",
  "获取平面上的位置点。": "Obtain the position point on the plane.",
  "平面上的点对象。": "Point objects on a plane.",
  "将平面通过指定轴进行镜像。": "Mirror the plane through the specified axis.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 镜像轴向。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Mirror axis|",
  "将平面通过指定坐标系进行镜像。": "Mirror the plane through the specified coordinate system.",
  "将平面通过指定点进行镜像。": "Mirror the plane through a specified point.",
  "返回镜像平面对象（通过指定轴）。": "Return the mirrored plane object (by specifying the axis).",
  "镜像后的平面对象。": "The mirrored planar object.",
  "返回镜像平面对象（通过指定坐标系）。": "Return the mirrored plane object (by specifying the coordinate system).",
  "返回镜像平面对象（通过指定点）。": "Return the mirrored plane object (by specifying a point).",
  "获取平面的坐标系位置。": "Obtain the coordinate system position of the plane.",
  "平面的坐标系对象。": "The coordinate system object of a plane.",
  "将平面绕指定轴旋转。": "Rotate the plane around the specified axis.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 旋转轴向。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Rotation axis|",
  "返回旋转后的平面对象。": "Return the rotated planar object.",
  "旋转后的平面对象。": "The rotated planar object.",
  "将平面缩放到指定点和比例。": "Scale the plane to a specified point and scale.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 缩放点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Zoom point|",
  "返回缩放后的平面对象。": "Return the scaled planar object.",
  "缩放后的平面对象。": "The scaled planar object.",
  "设置平面的轴向。": "Set the axis of the plane.",
  "| `theA1` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 平面轴向对象。 |": "|TheA1 | [Mx3dGeAxis] (Mx3dGeAxis. md) | Plane axial object|",
  "设置平面的位置。": "Set the position of the plane.",
  "| `theLoc` | [`Mx3dGePoint`](Mx3dGePoint.md) | 平面上的一个点，用于定义平面的具体位置。 |": "|TheLoc | [Mx3dGePoint. md] | A point on a plane used to define the specific position of the plane|",
  "设置平面的位置和方向。": "Set the position and orientation of the plane.",
  "| `theA3` | [`Mx3dGeCSYS`](Mx3dGeCSYS.md) | 用于设置平面位置和方向的坐标系。 |": "|TheA3 | [Mx3dGeCSYS] (Mx3dGeCSYS. md) | Used to set the coordinate system for plane position and orientation|",
  "获取平面的拓扑形状。": "Obtain the topological shape of the plane.",
  "平面形状对象。": "Flat shaped object.",
  "获取平面在指定范围内的拓扑形状。": "Obtain the topological shape of the plane within the specified range.",
  "| `UMin` | `number` | U方向的最小值。 |": "|UMin | number | The minimum value in the U direction|",
  "| `UMax` | `number` | U方向的最大值。 |": "|UMax | number | maximum value in the U direction|",
  "| `VMin` | `number` | V方向的最小值。 |": "|VMin | number | minimum value in the V direction|",
  "| `VMax` | `number` | V方向的最大值。 |": "|VMax | number | maximum value in the V direction|",
  "计算两个平面之间的平方距离。": "Calculate the square distance between two planes.",
  "两个平面之间的平方距离值。": "The square distance value between two planes.",
  "计算点到平面的平方距离。": "Calculate the square distance from a point to a plane.",
  "| `theP` | [`Mx3dGePoint`](Mx3dGePoint.md) | 需要计算平方距离的点。 |": "|TheP | [Mx3dGePoint] (Mx3dGePoint. md) | Points that require square distance calculation|",
  "点到平面的平方距离值。": "The square distance value from a point to a plane.",
  "对平面应用变换。": "Apply transformations to the plane.",
  "返回变换后的平面对象。": "Return the transformed planar object.",
  "变换后的平面对象。": "The transformed planar object.",
  "将平面通过两点平移。": "Translate the plane through two points.",
  "| `theP1` | [`Mx3dGePoint`](Mx3dGePoint.md) | 第一个点。 |": "|TheP1 | [Mx3dGePoint] (Mx3dGePoint. md) | The first point|",
  "| `theP2` | [`Mx3dGePoint`](Mx3dGePoint.md) | 第二个点。 |": "|TheP2 | [Mx3dGePoint] (Mx3dGePoint. md) | Second point|",
  "将平面沿指定向量平移。": "Translate the plane along the specified vector.",
  "返回通过两点平移后的平面对象。": "Return the planar object after two-point translation.",
  "平移后的平面对象。": "Translated planar object.",
  "返回平移后的平面对象。": "Return the translated planar object.",
  "反转U方向。": "Reverse the U direction.",
  "反转V方向。": "Reverse the direction of V.",
  "获取平面X轴的方向。": "Obtain the direction of the plane's X-axis.",
  "平面X轴的轴向对象。": "The axial object of the plane X-axis.",
  "获取平面Y轴的方向。": "Obtain the direction of the Y-axis of the plane.",
  "平面Y轴的轴向对象。": "The axial object of the plane Y-axis.",
  "[mxcad_3d API 文档](../README.md) / Mx3dGePoint": "[mxcad_3d API documentation](../README. md)/Mx3dGePoint",
  "表示三维空间中的一个点。": "Represents a point in three-dimensional space.",
  "提供构造函数以及获取和设置点的坐标的方法。": "Provide constructors and methods for obtaining and setting the coordinates of points.",
  "默认构造一个位于原点 (0, 0, 0) 的点。": "By default, construct a point located at the origin (0,0,0).",
  "使用给定的坐标数组构造一个点。": "Construct a point using the given coordinate array.",
  "| `theXYZ` | `Vector` | 包含X, Y, Z坐标值的数组。 |": "|TheXYZ | Vector | contains X, Y. An array of Z-coordinate values|",
  "使用给定的X, Y, Z坐标值构造一个点。": "Using the given X, Y. Construct a point based on the Z-coordinate value.",
  "| `theX` | `number` | X坐标值。 |": "|TheX | Number | X coordinate value|",
  "| `theY` | `number` | Y坐标值。 |": "|TheY | Number | Y coordinate value|",
  "| `theZ` | `number` | Z坐标值。 |": "|TheZ | Number | Z coordinate value|",
  "获取当前点的拓扑点形状": "Obtain the topological point shape of the current point",
  "拓扑点形状": "Topological point shape",
  "获取点在世界坐标系下的X坐标值": "Obtain the X coordinate value of a point in the world coordinate system",
  "X坐标值": "X-coordinate value",
  "获取点在世界坐标系下的Y坐标值": "Obtain the Y-coordinate value of a point in the world coordinate system",
  "Y坐标值": "Y coordinate value",
  "获取点在世界坐标系下的Z坐标值": "Obtain the Z-coordinate value of a point in the world coordinate system",
  "Z坐标值": "Z-coordinate value",
  "设置点在世界坐标系下的X坐标值": "Set the X coordinate value of the point in the world coordinate system",
  "| `theX` | `number` | X坐标值 |": "|TheX | number | X coordinate value|",
  "设置点在世界坐标系下的X,Y,Z坐标值": "Set the X, Y, Z coordinate values of the point in the world coordinate system",
  "| `theY` | `number` | Y坐标值 |": "|TheY | number | Y coordinate value|",
  "| `theZ` | `number` | Z坐标值 |": "|TheZ | number | Z coordinate value|",
  "设置点在世界坐标系下的Y坐标值": "Set the Y coordinate value of the point in the world coordinate system",
  "设置点在世界坐标系下的Z坐标值": "Set the Z-coordinate value of the point in the world coordinate system",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeTrsf": "[mxcad_3d API Document](../README. md)/Mx3dGetTrsf",
  "表示几何变换": "Representing geometric transformations",
  "将变换矩阵转置": "Transpose the transformation matrix",
  "获取变换矩阵转置后的矩阵": "Obtain the transposed matrix of the transformation matrix",
  "转置矩阵": "Transpose matrix",
  "判断此变换矩阵的行列式是否为负": "Determine whether the determinant of this transformation matrix is negative",
  "是否为负": "Is it negative",
  "获取矩阵相乘之后的结果，[res] = [me] * t，[res]代表结果，[me]代表自身，t是另外的变换矩阵": "Obtain the result of matrix multiplication, [res]=[me] * t, where [res] represents the result, [me] represents itself, and t is another transformation matrix",
  "| `t` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 另一个变换矩阵 |": "|T | [Mx3dGetStrf] (Mx3dGetStrf. md) | Another transformation matrix|",
  "矩阵相乘后的结果": "The result of matrix multiplication",
  "自身乘以另外一个变换矩阵，[me] = [me] * t，[me]代表自身，t是另外的变换矩阵": "Multiplying oneself by another transformation matrix, [me]=[me] * t, where [me] represents oneself and t is another transformation matrix",
  "自身n幂次方运算，[me] * [me] * .......* [me]，[me]代表自身，乘以n次": "Perform a power n operation on oneself, [me] * [me] *.... * [me], where [me] represents oneself and is multiplied n times",
  "| `n` | `number` | 次数 |": "|N | number | times|",
  "获取当前变换矩阵n次幂方运算后的结果，[res] = [me] * [me] * .......* [me]，[res]代表结果，[me]代表自身，n个[me]相乘": "Obtain the result of the nth power operation of the current transformation matrix, [res]=[me] * [me] *.... * [me], where [res] represents the result, [me] represents itself, and n [me] are multiplied",
  "n幂次方的结果": "The result to the power of n",
  "另外一个变换矩阵乘以自身，[me] = t * [me]，[me]代表自身，t是另外的变换矩阵": "Another transformation matrix multiplied by itself, [me]=t * [me], [me] represents itself, and t is another transformation matrix",
  "获取变换的缩放比例": "Obtain the scaling ratio of the transformation",
  "缩放比例": "Scale ratio",
  "设置按照轴镜像变换": "Set up axis mirroring transformation",
  "| `axis` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 镜像轴 |": "|Axis | [Mx3dGeAxis] (Mx3dGeAxis. md) | Mirror Axis|",
  "设置按照坐标系镜像变换，镜像平面是坐标系的XOY平面": "Set up a coordinate system mirror transformation, where the mirror plane is the XOY plane of the coordinate system",
  "| `csysr` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 镜像坐标系 |": "|Csysr | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Mirror coordinate system|",
  "设置按照点镜像变换": "Set up point mirror transformation",
  "| `point` | `UniPoint` | 镜像点 |": "|Point | UniPoint | Mirror Point|",
  "设置按照轴旋转一定角度的变换": "Set the transformation to rotate a certain angle according to the axis",
  "| `axis` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 旋转轴 |": "|Axis | [Mx3dGeAxis] (Mx3dGeAxis. md) | Rotation axis|",
  "| `ang` | `number` | 旋转角度 |": "|'ang' | 'number' | Rotation angle|",
  "设置按照点，以一定的比例进行缩放变换": "Set up scaling transformation based on points and a certain proportion",
  "| `point` | `UniPoint` | 缩放点 |": "|Point | UniPoint | Zoom Point|",
  "| `s` | `number` | 缩放比例 |": "|S | number | scaling ratio|",
  "设置缩放比例": "Set zoom ratio",
  "设置按照起点减去终点构成的向量的平移变换": "Set the translation transformation of the vector formed by subtracting the endpoint from the starting point",
  "| `point1` | `UniPoint` | 起点 |": "|Point1 | UniPoint | Starting Point|",
  "| `point2` | `UniPoint` | 终点 |": "|Point2 | UniPoint | Endpoint|",
  "设置按照向量进行平移变换，移动的方向和距离分别是向量的方向和模长": "Set the translation transformation according to the vector, with the direction and distance of the movement being the direction and magnitude of the vector, respectively",
  "| `vec` | `UniVec` | 向量 |": "|Vec | UniVec | Vector|",
  "单独设置按照向量的平移变换": "Set up separate translation transformations based on vectors",
  "| `vec` | [`Mx3dGeVec`](Mx3dGeVec.md) | 向量 |": "|Vec | [Mx3dGeVec] (Mx3dGeVec. md) | Vector|",
  "设置除了平移变换的仿射变换矩阵": "Set affine transformation matrix other than translation transformation",
  "| `a11` | `number` | 第1行第1列 |": "|A11 | number | Line 1, Column 1|",
  "| `a12` | `number` | 第1行第2列 |": "|A12 | number | Line 1, Column 2|",
  "| `a13` | `number` | 第1行第3列 |": "|A13 | number | Line 1, Column 3|",
  "| `a14` | `number` | 第1行第4列 |": "|A14 | number | Line 1, Column 4|",
  "| `a21` | `number` | 第2行第1列 |": "|A21 | number | 2nd row, 1st column|",
  "| `a22` | `number` | 第2行第2列 |": "|A22 | number | 2nd row, 2nd column|",
  "| `a23` | `number` | 第2行第3列 |": "|A23 | number | 2nd row, 3rd column|",
  "| `a24` | `number` | 第2行第4列 |": "|A24 | number | 2nd row, 4th column|",
  "| `a31` | `number` | 第3行第1列 |": "|A31 | number | Line 3, Column 1|",
  "| `a32` | `number` | 第3行第2列 |": "|A32 | number | Line 3, Column 2|",
  "| `a33` | `number` | 第3行第3列 |": "|A33 | number | Line 3, Column 3|",
  "| `a34` | `number` | 第3行第4列 |": "|A34 | Number | Row 3, Column 4|",
  "对一个点用当前变换矩阵进行变换，参数是引用的，会被函数修改": "Transform a point using the current transformation matrix. The parameters are referenced and will be modified by the function",
  "获取变换矩阵中指定行列的元素值": "Retrieve the element values of the specified row and column in the transformation matrix",
  "| `row` | `number` | 行 |": "|Row | number | row|",
  "| `col` | `number` | 列 |": "|Col | number | column|",
  "元素值": "Element value",
  "[mxcad_3d API 文档](../README.md) / Mx3dGeVec": "[mxcad_3d API documentation](../README. md)/Mx3dGeVec",
  "表示一个三维向量的类。用于三维几何运算。": "A class that represents a three-dimensional vector. Used for 3D geometric operations.",
  "构造一个新的 Mx3dGeVec 实例。\r": "Construct a new Mx3dGeVec instance.",
  "可以不带参数，或者带三个数值参数，或者带两个点。": "It can be without parameters, or with three numerical parameters, or with two points.",
  "将当前向量与另一个向量相加。": "Add the current vector to another vector.",
  "| `other` | [`Mx3dGeVec`](Mx3dGeVec.md) | 另一个向量。 |": "|Other | [Mx3dGeVec] (Mx3dGeVec. md) | Another vector|",
  "返回当前向量与另一个向量相加的结果。": "Return the result of adding the current vector to another vector.",
  "相加后的向量。": "The vector after addition.",
  "计算两个向量之间的角度。": "Calculate the angle between two vectors.",
  "角度值。": "Angle value.",
  "计算两个向量之间的带参考向量的角度。": "Calculate the angle between two vectors with a reference vector.",
  "| `ref` | [`Mx3dGeVec`](Mx3dGeVec.md) | 参考向量。 |": "|Ref | [Mx3dGeVec] (Mx3dGeVec. md) | Reference vector|",
  "带参考向量的角度值。": "Angle values with reference vectors.",
  "计算两个向量的叉积。": "Calculate the cross product of two vectors.",
  "| `right` | [`Mx3dGeVec`](Mx3dGeVec.md) | 另一个向量。 |": "|` right ` | [` Mx3dGeVec `] (Mx3dGeVec. md) | Another vector|",
  "计算三个向量的叉积。": "Calculate the cross product of three vectors.",
  "| `v1` | [`Mx3dGeVec`](Mx3dGeVec.md) | 向量1。 |": "|V1 | [Mx3dGeVec] (Mx3dGeVec. md) | Vector 1|",
  "| `v2` | [`Mx3dGeVec`](Mx3dGeVec.md) | 向量2。 |": "|V2 | [Mx3dGeVec] (Mx3dGeVec. md) | Vector 2|",
  "返回三个向量的叉积结果。": "Return the cross product of three vectors.",
  "叉积后的向量。": "The vector after cross product.",
  "计算两个向量的叉积的模。": "Calculate the modulus of the cross product of two vectors.",
  "叉积的模。": "The module of cross product.",
  "计算两个向量的叉积模的平方。": "Calculate the square of the cross product modulus of two vectors.",
  "叉积模的平方。": "The square of the cross product modulus.",
  "返回两个向量的叉积结果。": "Return the cross product of two vectors.",
  "将当前向量除以一个标量。": "Divide the current vector by a scalar.",
  "| `scalar` | `number` | 标量值。 |": "|Scalar | Number | Scalar value|",
  "返回当前向量除以标量的结果。": "Returns the result of dividing the current vector by a scalar.",
  "除以标量后的向量。": "The vector divided by the scalar.",
  "计算两个向量的点积。": "Calculate the dot product of two vectors.",
  "点积值。": "Dot product value.",
  "计算三个向量的点-叉积。": "Calculate the dot cross product of three vectors.",
  "点-叉积值。": "Point cross product value.",
  "判断两个向量是否相等。": "Determine whether two vectors are equal.",
  "是否相等。": "Is it equal.",
  "判断两个向量是否互为法向量。": "Determine whether two vectors are normal vectors to each other.",
  "是否互为法向量。": "Are they normal vectors to each other.",
  "判断两个向量是否互为反向。": "Determine whether two vectors are opposite to each other.",
  "是否互为反向。": "Are they mutually opposite.",
  "判断两个向量是否平行。": "Determine whether two vectors are parallel.",
  "是否平行。": "Is it parallel.",
  "获取向量的模。": "Obtain the modulus of the vector.",
  "向量的模。": "The modulus of a vector.",
  "根据一个轴镜像当前向量。": "Mirror the current vector based on an axis.",
  "根据一个坐标系镜像当前向量。": "Mirror the current vector based on a coordinate system.",
  "| `csysr` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 坐标系。 |": "|Csysr | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Coordinate system|",
  "根据一个向量镜像当前向量。": "Mirror the current vector based on a vector.",
  "| `vec` | [`Mx3dGeVec`](Mx3dGeVec.md) | 镜像向量。 |": "|Vec | [Mx3dGeVec] (Mx3dGeVec. md) | Mirror vector|",
  "返回根据一个轴镜像后的向量。": "Return the vector mirrored based on an axis.",
  "镜像后的向量。": "The vector after mirroring.",
  "返回根据一个坐标系镜像后的向量。": "Return the vector mirrored based on a coordinate system.",
  "返回根据一个向量镜像后的向量。": "Return the vector mirrored based on a vector.",
  "返回当前向量乘以标量的结果。": "Returns the result of multiplying the current vector by a scalar.",
  "乘以标量后的向量。": "The vector multiplied by a scalar.",
  "将当前向量乘以一个标量。": "Multiply the current vector by a scalar.",
  "将当前向量归一化。": "Normalize the current vector.",
  "返回归一化后的向量。": "Return the normalized vector.",
  "归一化后的向量。": "Normalized vector.",
  "反转当前向量的方向。": "Reverse the direction of the current vector.",
  "返回反转后的向量。": "Return the reversed vector.",
  "反转后的向量。": "The reversed vector.",
  "旋转当前向量。": "Rotate the current vector.",
  "返回旋转后的向量。": "Return the rotated vector.",
  "旋转后的向量。": "The rotated vector.",
  "缩放当前向量。": "Scale the current vector.",
  "| `s` | `number` | 缩放系数。 |": "|S | number | scaling factor|",
  "返回缩放后的向量。": "Return the scaled vector.",
  "缩放后的向量。": "The scaled vector.",
  "设置当前向量为线性组合。": "Set the current vector as a linear combination.",
  "设置向量的 x 分量。": "Set the x-component of the vector.",
  "| `x` | `number` | 新的 x 分量。 |": "|X | number | New x component|",
  "设置向量的 x, y 和 z 分量。": "Set the x of the vector, Y and z components.",
  "| `y` | `number` | 新的 y 分量。 |": "|Y | number | New y component|",
  "| `z` | `number` | 新的 z 分量。 |": "|Z | number | New z component|",
  "设置向量的 y 分量。": "Set the y-component of the vector.",
  "设置向量的 z 分量。": "Set the z-component of the vector.",
  "获取向量模的平方。": "Obtain the square of the vector modulus.",
  "向量模的平方。": "The square of the vector modulus.",
  "从当前向量中减去另一个向量。": "Subtract another vector from the current vector.",
  "返回当前向量减去另一个向量的结果。": "Return the result of subtracting another vector from the current vector.",
  "相减后的向量。": "Subtracted vector.",
  "根据坐标系变换当前向量。": "Transform the current vector based on the coordinate system.",
  "返回根据坐标系变换后的向量。": "Return the vector transformed according to the coordinate system.",
  "变换后的向量。": "The transformed vector.",
  "获取向量的 x 分量。": "Obtain the x-component of the vector.",
  "x 分量。": "X component.",
  "获取向量的 y 分量。": "Obtain the y-component of the vector.",
  "y 分量。": "Y component.",
  "获取向量的 z 分量。": "Obtain the z-component of the vector.",
  "z 分量。": "Z component.",
  "[mxcad_3d API 文档](../README.md) / Mx3dInterpolateBSplineCurve": "[mxcad_3d API Document](../README. md)/Mx3dInterpolateBSplineCurve",
  "表示插值B样条曲线算法。": "Representing the interpolation B-spline curve algorithm.",
  "构造函数，创建用于生成B样条曲线的对象。": "Constructor, creating an object for generating B-spline curves.",
  "| `Points` | [`Mx3dGePoint`](Mx3dGePoint.md)[] | 插值点数组。 |": "|Points | [Mx3dGePoint] (Mx3dGePoint. md) [] | Interpolation point group|",
  "| `PeriodicFlag` | `boolean` | 周期性标志。 |": "|PeriodicFlag | boolean | Periodic flag|",
  "| `Tolerance` | `number` | 精度。 |": "|Tolerance | number | precision|",
  "| `Parameters` | `number`[] | 参数值数组。 |": "|Parameters | number [] | Parameter value array|",
  "获取插值算法生成的B样条曲线。": "Obtain the B-spline curve generated by the interpolation algorithm.",
  "B样条曲线。": "B-spline curve.",
  "判断算法是否执行成功。": "Determine whether the algorithm has been successfully executed.",
  "算法是否执行成功标志，true 成功， false 失败。": "Whether the algorithm has executed successfully flag, true successful, False failed.",
  "设置所有插值点切向。": "Set all interpolation points to be tangential.",
  "| `Tangents` | [`Mx3dGeVec`](Mx3dGeVec.md)[] | 切向数组。 |": "|Tangents | [Mx3dGeVec] (Mx3dGeVec. md) [] | Tangent array|",
  "| `TangentFlags` | `boolean`[] | 是否应用切向数组。 |": "|TangentFlags | boolean [] | Apply tangent array|",
  "设置起点终点切向。": "Set the starting and ending points to be tangential.",
  "| `InitialTangent` | `UniVec` | 起点切向。 |": "|InitialTangent | UniVec | Starting point tangential|",
  "| `FinalTangent` | `UniVec` | 终点切向。 |": "|FinalTangent | UniVec | Tangential endpoint|",
  "执行算法。": "Execute algorithm.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkBox": "[mxcad_3d API Document](../README. md)/Mx3dMkBox",
  "表示建模长方体的类，继承自 Mx3dMkObject": "The class that represents the modeling rectangular prism inherits from Mx3dMkObject",
  "构造函数，接受长方体的两个对角点作为参数。": "Constructor that accepts two diagonal points of a rectangular prism as parameters.",
  "| `thePnt1` | `UniPoint` | 第一个对角点。 |": "|ThePnt1 | UniPoint | The first diagonal point|",
  "| `thePnt2` | `UniPoint` | 第二个对角点。 |": "|ThePnt2 | UniPoint | Second diagonal point|",
  "构造函数，以世界坐标系的(0, 0, 0)点作为第一个角点，接受三个数值(theDX, theDY, theDZ)作为第二个角点参数。": "Constructor, taking the (0,0,0) point in the world coordinate system as the first corner, and accepting three values (theDX, theDY, theDZ) as the second corner parameter.",
  "| `theDX` | `number` | 第二个角点X方向分量。 |": "|TheDX | Number | The second corner point's X-direction component|",
  "| `theDY` | `number` | 第二个角点Y方向分量。 |": "|TheDY | Number | The Y-direction component of the second corner point|",
  "| `theDZ` | `number` | 第二个角点Z方向分量。 |": "|TheDZ | Number | The Z-direction component of the second corner point|",
  "构造函数，以 theAxes 坐标系的(0, 0, 0)点作为第一个角点，接受三个数值(theDX, theDY, theDZ)作为第二个角点参数。": "Constructor, taking the (0,0,0) point in the theAxes coordinate system as the first corner, and accepting three values (theDX, theDY, theDZ) as the second corner parameter.",
  "| `theAxes` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 坐标系对象。 |": "|The Axes | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Coordinate system object|",
  "获取长方体的背面拓扑面形状。": "Obtain the shape of the back topology of the rectangular prism.",
  "拓扑面形状。": "Tuopu surface shape.",
  "获取长方体的底面拓扑面形状。": "Obtain the shape of the bottom topology of the rectangular prism.",
  "执行长方体的建模算法。": "Execute the modeling algorithm for rectangular prisms.",
  "获取长方体的前面拓扑面形状。": "Obtain the shape of the front topology of the rectangular prism.",
  "检查建模算法是否执行完成。": "Check if the modeling algorithm has been executed successfully.",
  "建模算法执行是否完成的标志，true 完成，false 失败。": "The flag indicating whether the modeling algorithm execution has been completed, with true indicating completion and false indicating failure.",
  "获取长方体的左面拓扑面形状。": "Obtain the left side topology shape of the rectangular prism.",
  "获取长方体的右面拓扑面形状。": "Obtain the right side topology shape of the rectangular prism.",
  "获取长方体的拓扑形状。": "Obtain the topological shape of a rectangular prism.",
  "拓扑形状。": "Topological shape.",
  "获取长方体的拓扑外壳形状。": "Obtain the topological shell shape of the rectangular prism.",
  "拓扑壳形状。": "Topological shell shape.",
  "获取长方体的拓扑实体形状。": "Obtain the topological solid shape of a rectangular prism.",
  "拓扑实体形状。": "Topological entity shape.",
  "获取长方体的顶面拓扑面形状。": "Obtain the top topology shape of the rectangular prism.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkCone": "[mxcad_3d API Document](../README. md)/Mx3dMkCone",
  "表示建模圆锥的类，继承自 Mx3dMkObject": "The class representing the modeling cone inherits from Mx3dMkObject",
  "构造函数，接受圆锥的坐标系、底面半径、顶面半径、高度，以及可选的角度参数。": "Constructor that accepts the coordinate system, base radius, top radius, height, and optional angle parameters of a cone.",
  "| `Axes` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 坐标系对象。 |": "|Axes | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Coordinate system object|",
  "| `R1` | `number` | 底面半径。 |": "|R1 | number | Base radius|",
  "| `R2` | `number` | 顶面半径。 |": "|R2 | number | top radius|",
  "| `H` | `number` | 高度。 |": "|H | number | height|",
  "| `angle?` | `number` | （可选）角度。 |": "| `angle?` | ` Number ` | (optional) Angle|",
  "执行圆锥的建模算法。": "Execute the modeling algorithm for cones.",
  "获取圆锥的拓扑面形状。": "Obtain the topological surface shape of the cone.",
  "获取圆锥的拓扑形状。": "Obtain the topological shape of the cone.",
  "获取圆锥的拓扑外壳形状。": "Obtain the topological shell shape of the cone.",
  "获取圆锥的拓扑实体形状。": "Obtain the topological solid shape of the cone.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkCylinder": "[mxcad_3d API Document](../README. md)/Mx3dMkCylinder",
  "表示建模圆柱的类，继承自 Mx3dMkObject": "The class representing the modeling cylinder inherits from Mx3dMkObject",
  "构造函数，接受圆柱的坐标系、半径、高度，以及可选的角度参数。": "Constructor that accepts the coordinate system, radius, height, and optional angle parameters of a cylinder.",
  "| `Angle?` | `number` | （可选）角度。 |": "| `Angle?` | ` Number ` | (optional) Angle|",
  "执行圆柱的建模算法。": "Execute the modeling algorithm for cylinders.",
  "获取圆柱的拓扑面形状。": "Obtain the topological surface shape of the cylinder.",
  "获取圆柱的拓扑形状。": "Obtain the topological shape of the cylinder.",
  "获取圆柱的拓扑外壳形状。": "Obtain the topological shell shape of the cylinder.",
  "获取圆柱的拓扑实体形状。": "Obtain the topological solid shape of the cylinder.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkFace": "[mxcad_3d API Document](../README. md)/Mx3dMkFace",
  "表示建模面的类，继承自 Mx3dMkObject。": "The class representing the modeling surface inherits from Mx3dMkObject.",
  "构造函数，接受一个Wire对象和一个布尔值来初始化面对象。": "Constructor that accepts a Wire object and a Boolean value to initialize a face object.",
  "| `theWire` | [`Mx3dShapeFace`](Mx3dShapeFace.md) \\| [`Mx3dShapeWire`](Mx3dShapeWire.md) | `undefined` | 要使用的线条对象 或 面形状对象(可添加Wire，形成Hole)。 |": "|The Wire | [Mx3dShapeFace. md] \\ | [Mx3dShapeWire] (Mx3dShapeWire. md) | undefined | The line object or face shape object to be used (wire can be added to form a Hole)|",
  "| `OnlyPlane` | `boolean` | `false` | 是否仅限于平面构建，默认为 false。 |": "|OnlyPlane | boolean | false | Whether it is limited to flat construction only, defaults to false|",
  "执行面的建模算法。": "Modeling algorithm for execution surface.",
  "获取面的具体对象。": "Obtain the specific object of the face.",
  "面的具体对象。": "The specific object of the face.",
  "获取面的形状对象。": "Obtain the shape object of the face.",
  "面的形状对象。": "Shape object of the face.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkLoft": "[mxcad_3d API Document](../README. md)/Mx3dMkLoft",
  "表示建模放样体的类，继承自 Mx3dMkObject。": "The class representing the modeling and layout body inherits from Mx3dMkObject.",
  "构造函数，初始化放样体对象。": "Constructor, initialize the layout object.",
  "| `isSolid?` | `boolean` | 是否创建实体放样体，默认为 false。 |": "| `isSolid?` | ` Boolean | Whether to create a solid layout, default is false|",
  "| `ruled?` | `boolean` | 是否使用规则放样，默认为 false。 |": "| `ruled?` | ` Boolean | Whether to use rule layout, default is false|",
  "| `pres3d?` | `number` | 放样体的平面分辨率，默认为 0。 |": "| `pres3d?` | ` Number ` | The plane resolution of the layout body is set to 0 by default|",
  "添加一个顶点到放样体。": "Add a vertex to the loft.",
  "| `aVertex` | [`Mx3dShapeVertex`](Mx3dShapeVertex.md) | 要添加的顶点对象。 |": "|AVertex | [Mx3dShapeVertex] (Mx3dShapeVertex. md) | The vertex object to be added|",
  "添加一个Wire到放样体。": "Add a wire to the layout body.",
  "| `wire` | [`Mx3dShapeWire`](Mx3dShapeWire.md) | 要添加的Wire对象。 |": "|Wire | [Mx3dShapeWire] (Mx3dShapeWire. md) | The wire object to be added|",
  "执行放样体的建模算法。": "Execute the modeling algorithm for the layout body.",
  "获取放样体的连续性。": "Obtain the continuity of the layout body.",
  "当前放样体的连续性枚举值。": "The continuity enumeration value of the current layout body.",
  "设置放样体的连续性。": "Set the continuity of the layout body.",
  "| `C` | [`MxGAShapeEnum`](../enums/MdGe.MxGAShapeEnum.md) | 形状的连续性枚举值。 |": "|C | [MxGAShapeenum] (../enums/MdGe. MxGAShapeenum. md) | The continuity enumeration value of the shape|",
  "设置是否使用平滑处理。": "Set whether to use smoothing processing.",
  "| `UseSmoothing` | `boolean` | 使用平滑处理的标志。 |": "|UseSmoothing | boolean | Use the flag for smoothing processing|",
  "获取放样体的形状。": "Obtain the shape of the layout body.",
  "放样体的形状对象。": "The shape object of the layout body.",
  "检查是否使用平滑处理。": "Check if smoothing is used.",
  "平滑处理的使用状态，true 为使用，false 为不使用。": "The usage status of smoothing processing, true is used, false is not used.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkObject": "[mxcad_3d API Document](../README. md)/Mx3dMkObject",
  "基础几何建模基类，继承自 Mx3dBaseObject": "Basic geometric modeling base class, inherited from Mx3dBaseObject",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkPipe": "[mxcad_3d API documentation](../README. md)/Mx3dMkPipe",
  "表示建模路径扫掠体的类，继承自 Mx3dMkObject": "The class representing the swept volume of the modeling path inherits from Mx3dMkObject",
  "构造函数，接受一条路径和一个截面形状来创建扫掠体。": "Constructor that accepts a path and a cross-sectional shape to create a swept body.",
  "| `Spine` | [`Mx3dShapeWire`](Mx3dShapeWire.md) | 路径线。 |": "|Spine | [Mx3dShapeWire] (Mx3dShapeWire. md) | Path line|",
  "| `Profile` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | 截面形状。 |": "|Profile | [Mx3dShapeObject] (Mx3dShapeObject. md) | Section shape|",
  "构造函数，接受一条路径、一个截面形状、一个模式和一个布尔值来创建扫掠体。": "Constructor that accepts a path, a cross-sectional shape, a pattern, and a boolean value to create a swept body.",
  "| `aMode` | [`MxGFTrihedron`](../enums/MdGe.MxGFTrihedron.md) | 模式。 |": "|AMode | [MxGFTrihedron] (../enums/MdGe. MxGFTrihedron. md) | mode|",
  "| `ForceApproxC1` | `boolean` | 强制近似C1连续性。 |": "|ForceApproxC1 | boolean | Forces approximation of C1 continuity|",
  "执行路径扫掠体的建模算法。": "Execute modeling algorithm for path swept bodies.",
  "获取路径扫掠体的拓扑形状。": "Obtain the topological shape of the path swept body.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkPipeShell": "[mxcad_3d API Document](../README. md)/Mx3dMkPipeShell",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkPolygon": "[mxcad_3d API Document](../README. md)/Mx3dMkPolygon",
  "表示建模多段线的类，继承自 Mx3dMkObject。": "The class that represents modeling polylines inherits from Mx3dMkObject.",
  "构造函数，初始化多段线对象。": "Constructor, initialize polyline object.",
  "添加一个顶点到多段线。": "Add a vertex to a polyline.",
  "| `P` | [`Mx3dGePoint`](Mx3dGePoint.md) | 要添加的点对象。 |": "|P | [Mx3dGePoint] (Mx3dGePoint. md) | Point object to be added|",
  "检查最后添加的顶点是否与前一个顶点重合。": "Check if the last added vertex coincides with the previous vertex.",
  "如果最后一个添加的顶点与前一个顶点不重合，则返回 true；否则返回 false。": "If the last added vertex does not coincide with the previous vertex, return true; Otherwise, return false.",
  "执行多段线的建模算法。": "Execute modeling algorithms for polylines.",
  "闭合多段线，形成一个闭合的图形。": "Close polylines to form a closed shape.",
  "获取多段线的Edge对象。": "Retrieve the Edge object of polylines.",
  "多段线的Edge对象。": "Edge object for polylines.",
  "获取多段线的第一个顶点。": "Get the first vertex of the polyline.",
  "第一个顶点对象。": "The first vertex object.",
  "获取多段线的最后一个顶点。": "Get the last vertex of the polyline.",
  "最后一个顶点对象。": "The last vertex object.",
  "获取多段线的形状。": "Obtain the shape of polylines.",
  "多段线的形状对象。": "The shape object of polylines.",
  "获取多段线的Wire对象。": "Retrieve the Wire object of a polyline.",
  "多段线的Wire对象。": "Wire object for polylines.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkPrism": "[mxcad_3d API Document](../README. md)/Mx3dMkRisk",
  "表示建模拉伸扫掠体的类，继承自 Mx3dMkObject。": "The class that represents modeling stretched swept bodies inherits from Mx3dMkObject.",
  "构造函数，接受一个拓扑形状和一个向量来创建拉伸扫掠体。": "Constructor that accepts a topological shape and a vector to create a stretched swept body.",
  "| `S` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | 拓扑形状对象。 |": "|S | [Mx3dShapeObject] (Mx3dShapeObject. md) | Topological shape object|",
  "| `V` | [`Mx3dGeVec`](Mx3dGeVec.md) | 拉伸方向向量。 |": "|V | [Mx3dGeVec] (Mx3dGeVec. md) | Stretch direction vector|",
  "构造函数，接受一个拓扑形状和一个方向来创建拉伸扫掠体。": "Constructor that accepts a topological shape and a direction to create a stretched swept body.",
  "| `D` | [`Mx3dGeDir`](Mx3dGeDir.md) | 拉伸方向。 |": "|D | [Mx3dGeDir] (Mx3dGeDir. md) | Stretching direction|",
  "执行拉伸扫掠体的建模算法。": "Execute modeling algorithm for stretching swept bodies.",
  "获取拉伸扫掠体的形状。": "Obtain the shape of the stretched swept body.",
  "拉伸扫掠体的形状对象。": "Stretch the shape object of the swept body.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkRevol": "[mxcad_3d API Document](../README. md)/Mx3dMkRevol",
  "表示旋转体建模的类，继承自 Mx3dMkObject": "A class representing the modeling of a rotating body, inherited from Mx3dMkObject",
  "构造函数，接受一个形状对象、旋转轴和可选的旋转角度参数。": "Constructor that accepts a shape object, rotation axis, and optional rotation angle parameter.",
  "| `S` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | 形状对象。 |": "|S | [Mx3dShapeObject] (Mx3dShapeObject. md) | Shape object|",
  "| `A` | [`Mx3dGeAxis`](Mx3dGeAxis.md) | 旋转轴。 |": "|A | [Mx3dGeAxis] (Mx3dGeAxis. md) | Rotation axis|",
  "| `D?` | `number` | （可选）旋转角度。 |": "| `D?` | ` Number ` | (optional) Rotation angle|",
  "执行旋转体的建模算法。": "Execute modeling algorithms for rotating bodies.",
  "获取旋转体的拓扑形状。": "Obtain the topological shape of the rotating body.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkSphere": "[mxcad_3d API Document](../README. md)/Mx3dMkSphere",
  "表示建模球体的类，继承自 Mx3dMkObject": "The class representing the modeled sphere inherits from Mx3dMkObject",
  "构造函数，接受坐标系对象和球体半径作为参数。": "Constructor that accepts coordinate system objects and sphere radius as parameters.",
  "| `R` | `number` | 球体半径。 |": "|R | number | radius of the sphere|",
  "构造函数，接受坐标系对象、球体半径和一个角度参数。": "Constructor that accepts coordinate system objects, sphere radius, and an angle parameter.",
  "| `angle` | `number` | 角度参数。 |": "|Angle | number | angle parameter|",
  "构造函数，接受坐标系对象、球体半径和两个角度参数。": "Constructor that accepts coordinate system objects, sphere radius, and two angle parameters.",
  "| `angle1` | `number` | 第一个角度参数。 |": "|Angle1 | Number | The first angle parameter|",
  "| `angle2` | `number` | 第二个角度参数。 |": "|Angle2 | Number | Second angle parameter|",
  "构造函数，接受坐标系对象、球体半径和三个角度参数。": "Constructor that accepts coordinate system objects, sphere radius, and three angle parameters.",
  "| `angle3` | `number` | 第三个角度参数。 |": "|Angle3 | Number | The third angle parameter|",
  "执行球体的建模算法。": "Execute the modeling algorithm for the sphere.",
  "获取球体的拓扑面形状。": "Obtain the topological surface shape of the sphere.",
  "获取球体的拓扑形状。": "Obtain the topological shape of the sphere.",
  "获取球体的拓扑外壳形状。": "Obtain the topological shell shape of the sphere.",
  "获取球体的拓扑实体形状。": "Obtain the topological entity shape of the sphere.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkThickSolid": "[mxcad_3d API Document](../README. md)/Mx3dMkThickSolid",
  "表示建模厚壁固体的类，继承自 Mx3dMkObject。": "The class that represents modeling thick walled solids inherits from Mx3dMkObject.",
  "构造函数，初始化厚壁固体对象。": "Constructor, initialize thick walled solid objects.",
  "执行厚壁固体的建模算法。\r": "Implement modeling algorithms for thick walled solids.",
  "此方法完成厚壁固体的构建过程。": "This method completes the construction process of thick walled solids.",
  "如果建模算法执行完成，则返回 true；否则返回 false。": "If the modeling algorithm completes execution, return true; Otherwise, return false.",
  "使用连接算法构建厚壁固体。\r": "Build thick walled solids using connection algorithms.",
  "该方法基于一个固体和一组闭合面来创建厚壁固体。": "This method is based on creating a thick walled solid using a solid and a set of closed surfaces.",
  "| `S` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | `undefined` | 要使用的初始固体对象。 |": "|S | [Mx3dShapeObject] (Mx3dShapeObject. md) | undefined | The initial solid object to be used|",
  "| `ClosingFaces` | [`Mx3dShapeObject`](Mx3dShapeObject.md)[] | `undefined` | 要移除的面对象数组。 |": "|ClosingFaces | [Mx3dShapeObject] (Mx3dShapeObject. md) [] | undefined | Object array to be removed|",
  "| `Offset` | `number` | `undefined` | 厚度值，定义壁的厚度。正值表示外侧，负值表示内侧。 |": "|Offset | number | undefined | The thickness value defines the thickness of the wall. Positive values indicate the outer side, while negative values indicate the inner side|",
  "| `Tol` | `number` | `undefined` | 公差值，定义生成形状的重合度标准。 |": "|Tol | number | undefined | The tolerance value defines the coincidence standard for generating shapes|",
  "| `Mode` | [`MxOffsetModeEnum`](../enums/MdGe.MxOffsetModeEnum.md) | `MdGe.MxOffsetModeEnum.Offset_Skin` | 构造模式，默认为 BRepOffset_Skin，定义自由边的平行线构造方式。 |": "|Mode | [MxOffsetModeenum] (../enums/MdGe. MxOffsetModeenum. md) | MdGe. MxOffsetModeenum. Offset_Skin | Construction mode, default to BRepOffset_Skin, defines the parallel line construction method for free edges|",
  "| `Intersection` | `boolean` | `false` | 是否计算交集，默认不计算。 |": "|Intersection | boolean | false | Calculate intersection, not calculated by default|",
  "| `SelfInter` | `boolean` | `false` | 是否消除自交，默认不消除。 |": "|SelfInter | boolean | false | Whether to eliminate self crossing, default not to eliminate|",
  "| `Join` | [`MxGAJoinTypeEnum`](../enums/MdGe.MxGAJoinTypeEnum.md) | `MdGe.MxGAJoinTypeEnum.GA_Arc` | 连接类型，默认为 GeomAbs_Arc，用于填充平行线之间的空隙。 |": "|Join | [MxGAJoinTypeenum] (../ennus/MdGe. MxGAJoinTypeenum. md) | MdGe. MxGAJoinTypeenum. GA-Arc | Connection type, default to GeomAbs_Src, used to fill gaps between parallel lines|",
  "| `RemoveIntEdges` | `boolean` | `false` | 是否移除内部边，默认不移除。 |": "|` RemoveIntEdges ` | ` boolean ` | ` false ` | Whether to remove internal edges, default not to remove|",
  "使用简单算法构建厚壁固体。\r": "Build thick walled solids using simple algorithms.",
  "该方法基于一个固体和一个偏移值来创建厚壁固体。此算法不支持面移除。": "This method is based on creating a thick walled solid using a solid and an offset value. This algorithm does not support face removal.",
  "| `theS` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | 要使用的初始固体对象。 |": "|TheS | [Mx3dShapeObject] (Mx3dShapeObject. md) | The initial solid object to be used|",
  "| `theOffsetValue` | `number` | 厚度值，定义壁的厚度。 |": "|The OffsetValue | number | thickness value, which defines the thickness of the wall|",
  "获取厚壁固体的形状对象。": "Obtain the shape object of a thick walled solid.",
  "厚壁固体的形状对象。": "The shape object of a thick walled solid.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkTorus": "[mxcad_3d API Document](../README. md)/Mx3dMkTorus",
  "表示建模圆环体的类，继承自 Mx3dMkObject": "The class representing the modeling of a circular ring inherits from Mx3dMkObject",
  "构造函数，接受坐标系对象、圆环体主半径和次半径作为参数。": "Constructor that accepts coordinate system objects, primary and secondary radii of the torus as parameters.",
  "| `R1` | `number` | 圆环体主半径。 |": "|R1 | number | principal radius of the circular ring|",
  "| `R2` | `number` | 圆环体次半径。 |": "|R2 | number | sub radius of the circular ring|",
  "构造函数，接受坐标系对象、圆环体主半径、次半径和一个角度参数。": "Constructor that accepts coordinate system objects, primary and secondary radii of a torus, and an angle parameter.",
  "构造函数，接受坐标系对象、圆环体主半径、次半径和两个角度参数。": "Constructor, accepting coordinate system objects, primary radius, secondary radius, and two angle parameters of the torus.",
  "构造函数，接受坐标系对象、圆环体主半径、次半径和三个角度参数。": "Constructor that accepts coordinate system objects, primary radius, secondary radius, and three angle parameters for a torus.",
  "执行圆环体的建模算法。": "Execute modeling algorithms for circular bodies.",
  "获取圆环体的拓扑面形状。": "Obtain the topological surface shape of the torus.",
  "获取圆环体的拓扑形状。": "Obtain the topological shape of the torus.",
  "获取圆环体的拓扑外壳形状。": "Obtain the topological shell shape of the torus.",
  "获取圆环体的拓扑实体形状。": "Obtain the topological solid shape of the torus.",
  "[mxcad_3d API 文档](../README.md) / Mx3dMkWedge": "[mxcad_3d API Document](../README. md)/Mx3dMkEdge",
  "表示建模楔形体的类，继承自 Mx3dMkObject。": "The class representing the modeling wedge is inherited from Mx3dMkObject.",
  "构造函数，接受三个尺寸参数和一个长度参数来创建楔形体。": "Constructor that accepts three size parameters and one length parameter to create a wedge shape.",
  "| `dx` | `number` | 楔形体的宽度沿x轴方向的尺寸。 |": "|The width of a wedge-shaped object along the x-axis|",
  "| `dy` | `number` | 楔形体的宽度沿y轴方向的尺寸。 |": "|The width of the wedge-shaped object along the y-axis direction|",
  "| `dz` | `number` | 楔形体的高度沿z轴方向的尺寸。 |": "|The height dimension of the wedge-shaped object along the z-axis|",
  "| `ltx` | `number` | 楔形体的长度参数。 |": "|Ltx | number | The length parameter of the wedge|",
  "构造函数，接受坐标系和尺寸参数来创建楔形体。": "Constructor, accepts coordinate system and dimension parameters to create a wedge shape.",
  "构造函数，接受尺寸参数和两个边界值来创建楔形体。": "Constructor that accepts size parameters and two boundary values to create a wedge shape.",
  "| `xmin` | `number` | 楔形体在x轴方向的最小边界值。 |": "|Xmin | number | The minimum boundary value of a wedge in the x-axis direction|",
  "| `zmin` | `number` | 楔形体在z轴方向的最小边界值。 |": "|Zmin | number | The minimum boundary value of a wedge in the z-axis direction|",
  "| `xmax` | `number` | 楔形体在x轴方向的最大边界值。 |": "|Xmax | number | The maximum boundary value of a wedge in the x-axis direction|",
  "| `zmax` | `number` | 楔形体在z轴方向的最大边界值。 |": "|Zmax | number | The maximum boundary value of a wedge in the z-axis direction|",
  "构造函数，接受坐标系、尺寸参数和边界值来创建楔形体。": "Constructor that accepts coordinate system, dimension parameters, and boundary values to create a wedge shape.",
  "执行楔形体的建模算法。": "Implement the modeling algorithm for wedge-shaped bodies.",
  "获取楔形体的拓扑形状。": "Obtain the topological shape of the wedge.",
  "拓扑形状对象。": "Topological shape object.",
  "获取楔形体的壳体形状。": "Obtain the shell shape of the wedge-shaped object.",
  "壳体形状对象。": "Shell shaped object.",
  "获取楔形体的实体形状。": "Obtain the solid shape of the wedge.",
  "实体形状对象。": "Solid shaped object.",
  "[mxcad_3d API 文档](../README.md) / Mx3dShapeCompound": "[mxcad_3d API documentation](../README. md)/Mx3dShapeCompound",
  "复合形状对象，由其他类型的形状构成": "Composite shaped object, composed of other types of shapes",
  "获取形状的质心。": "Obtain the centroid of the shape.",
  "| `theAspect` | [`MxQuantAspect`](../enums/MdGe.MxQuantAspect.md) | 需要根据形状类型进行设置的质心类型。 |": "|The centroid type that needs to be set based on the shape type is MxQuantAspect (../ennus/MdGe. MxQuantAspect. md)|",
  "质心点。": "Center of mass point.",
  "遍历形状对象。": "Traverse shape objects.",
  "| `ToFind` | [`MxShapeEnum`](../enums/MdGe.MxShapeEnum.md) | 要查找的形状类型。 |": "|ToFind | [MxShapeenum] (../enums/MdGe. MxShapeenum. md) | The type of shape to search for|",
  "形状对象数组。": "Shape object array.",
  "根据一个轴镜像当前形状对象。": "Mirror the current shape object based on an axis.",
  "根据一个坐标系镜像当前形状对象。": "Mirror the current shape object based on a coordinate system.",
  "| `csysr` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 镜像坐标系。 |": "|Csysr | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | Mirror coordinate system|",
  "根据一个点镜像当前形状对象。": "Mirror the current shape object based on a point.",
  "返回根据一个轴镜像后的形状对象。": "Return the shape object mirrored based on an axis.",
  "镜像后的形状对象。": "The mirrored shape object.",
  "返回根据一个坐标系镜像后的形状对象。": "Return the shape object mirrored based on a coordinate system.",
  "返回根据一个点镜像后的形状对象。": "Returns a shape object that has been mirrored based on a point.",
  "获取形状的朝向": "Obtain the orientation of the shape",
  "朝向": "orientation",
  "获取形状的长度，面积，体积等。": "Obtain the length, area, volume, etc. of the shape.",
  "| `theAspect` | [`MxQuantAspect`](../enums/MdGe.MxQuantAspect.md) | 设置获取长度，面积还是体积。 |": "|The Aspect | [MxQuantAspect] (../ennus/MdGe. MxQuantAspect. md) | Set whether to obtain length, area, or volume|",
  "数量值。": "Quantity value.",
  "旋转当前形状对象。": "Rotate the current shape object.",
  "返回旋转后的形状对象。": "Return the rotated shape object.",
  "旋转后的形状对象。": "The rotated shape object.",
  "缩放当前形状对象。": "Scale the current shape object.",
  "| `point` | [`Mx3dGePoint`](Mx3dGePoint.md) | 缩放中心点。 |": "|Point | [Mx3dGePoint] (Mx3dGePoint. md) | Zoom center point|",
  "返回缩放后的形状对象。": "Return the scaled shape object.",
  "缩放后的形状对象。": "The scaled shape object.",
  "获取形状类型。": "Get the shape type.",
  "形状类型。": "Shape type.",
  "根据变换矩阵变换当前形状对象。": "Transform the current shape object based on the transformation matrix.",
  "| `trsf` | [`Mx3dGeTrsf`](Mx3dGeTrsf.md) | 变换矩阵。 |": "|Trsf | [Mx3dGetTrsf] (Mx3dGetTrsf. md) | Transform matrix|",
  "返回根据变换矩阵变换后的形状对象。": "Return the shape object transformed according to the transformation matrix.",
  "变换后的形状对象。": "The transformed shape object.",
  "根据两个点平移当前形状对象。": "Translate the current shape object based on two points.",
  "根据向量平移当前形状对象。": "Translate the current shape object based on the vector.",
  "根据坐标平移当前形状对象。": "Translate the current shape object based on its coordinates.",
  "| `theX` | `number` | X坐标。 |": "|TheX | number | X coordinate|",
  "| `theY` | `number` | Y坐标。 |": "|TheY | Number | Y coordinate|",
  "| `theZ` | `number` | Z坐标。 |": "|TheZ | Number | Z coordinate|",
  "返回根据两个点平移后的形状对象。": "Return the shape object that has been translated based on two points.",
  "平移后的形状对象。": "The shape object after translation.",
  "返回根据向量平移后的形状对象。": "Return the shape object translated based on the vector.",
  "返回根据坐标平移后的形状对象。": "Return the shape object after coordinate translation.",
  "克隆当前形状对象。": "Clone the current shape object.",
  "克隆后的形状对象。": "The cloned shape object.",
  "返回当前形状对象与另一个形状对象的公共部分。": "Return the common part between the current shape object and another shape object.",
  "| `theOther` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | 另一个形状对象。 |": "|` theOther ` | [` Mx3dShapeObject `] (Mx3dShapeObject. md) | Another shape object|",
  "公共部分的形状对象。": "The shape object of the public part.",
  "从当前形状对象中减去另一个形状对象。": "Subtract another shape object from the current shape object.",
  "削减后的形状对象。": "The reduced shape object.",
  "与另一个形状对象融合。": "Merge with another shape object.",
  "融合后的形状对象。": "The fused shape object.",
  "获取形状对象的边界框。": "Get the bounding box of the shape object.",
  "边界框对象。": "Boundary box object.",
  "移动形状对象到指定位置。": "Move the shape object to the specified position.",
  "| `theLocation` | [`Mx3dGeLocation`](Mx3dGeLocation.md) | 移动的位置。 |": "|TheLocation | [Mx3dGeLocation. md] | The location of the movement|",
  "返回移动后的形状对象。": "Return the shape object after movement.",
  "移动后的形状对象。": "The shape object after movement.",
  "形状反向": "Shape reversed",
  "获取反向后的新形状": "Obtain the new shape after reversing",
  "反向后的新形状": "New shape after reversal",
  "返回当前形状对象与另一个形状对象的相交轮廓。": "Returns the intersecting contour between the current shape object and another shape object.",
  "相交轮廓的形状对象。": "Shape objects with intersecting contours.",
  "使用工具形状对象分割当前形状对象。": "Use the tool shape object to segment the current shape object.",
  "| `theTools` | [`Mx3dShapeObject`](Mx3dShapeObject.md)[] | 工具形状对象数组。 |": "|TheTools | [Mx3dShapeObject] (Mx3dShapeObject. md) [] | Tool Shape Object Array|",
  "分割后的形状对象数组。": "The segmented array of shape objects.",
  "[mxcad_3d API 文档](../README.md) / Mx3dShapeCompSolid": "[mxcad_3d API Document](../README. md)/Mx3dShapeCompSolid",
  "复合实心实体对象，由实心实体构成": "Composite solid entity object, composed of solid entities",
  "[mxcad_3d API 文档](../README.md) / Mx3dShapeDownCast": "[mxcad_3d API documentation](../README. md)/Mx3dShapeDownCast",
  "形状对象的向下类型转换接口": "Downward type conversion interface for shape objects",
  "将 Mx3dShapeObject 对象转换为 Mx3dShapeCompSolid 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeCompSolid)": "Convert Mx3dShapeObject object to Mx3dShapeCompSolid object (the actual type of Mx3dShapeObject needs to be Mx3dShapeCompSolid)",
  "| `S` | [`Mx3dShapeObject`](Mx3dShapeObject.md) | 需要转换的形状对象 |": "|S | [Mx3dShapeObject] (Mx3dShapeObject. md) | Shape object to be converted|",
  "转换后的子类形状对象": "Converted subclass shape object",
  "将 Mx3dShapeObject 对象转换为 Mx3dShapeCompound 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeCompound)": "Convert Mx3dShapeObject object to Mx3dShapeCompound object (the actual type of Mx3dShapeObject needs to be Mx3dShapeCompound)",
  "将 Mx3dShapeObject 对象转换为 Mx3dShapeEdge 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeEdge)": "Convert Mx3dShapeObject object to Mx3dShapeEdge object (the actual type of Mx3dShapeObject needs to be Mx3dShapeEdge)",
  "将 Mx3dShapeObject 对象转换为 Mx3dShapeFace 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeFace)": "Convert Mx3dShapeObject object to Mx3dShapeFace object (the actual type of Mx3dShapeObject needs to be Mx3dShapeFace)",
  "将 Mx3dShapeObject 对象转换为 Mx3dShapeShell 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeShell)": "Convert Mx3dShapeObject object to Mx3dShapeShell object (the actual type of Mx3dShapeObject needs to be Mx3dShapeShell)",
  "将 Mx3dShapeObject 对象转换为 Mx3dShapeSolid 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeSolid)": "Convert Mx3dShapeObject object to Mx3dShapeSolid object (the actual type of Mx3dShapeObject needs to be Mx3dShapeSolid)",
  "将 Mx3dShapeObject 对象转换为 Mx3dShapeVertex 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeVertex)": "Convert Mx3dShapeObject object to Mx3dShapeVertex object (the actual type of Mx3dShapeObject needs to be Mx3dShapeVertex)",
  "将 Mx3dShapeObject 对象转换为 Mx3dShapeWire 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeWire)": "Convert Mx3dShapeObject object to Mx3dShapeWire object (the actual type of Mx3dShapeObject needs to be Mx3dShapeWire)",
  "[mxcad_3d API 文档](../README.md) / Mx3dShapeEdge": "[mxcad_3d API documentation](../README. md)/Mx3dShapeEdge",
  "表示一个边形状": "Representing an edge shape",
  "创建一个边形状，传入起点和终点": "Create an edge shape and input the starting and ending points",
  "| `pt1` | [`Mx3dGePoint`](Mx3dGePoint.md) | 起点 |": "|Pt1 | [Mx3dGePoint] (Mx3dGePoint. md) | Starting Point|",
  "| `pt2` | [`Mx3dGePoint`](Mx3dGePoint.md) | 终点 |": "|Pt2 | [Mx3dGePoint] (Mx3dGePoint. md) | Endpoint|",
  "[mxcad_3d API 文档](../README.md) / Mx3dShapeFace": "[mxcad_3d API documentation](../README. md)/Mx3dShapeFace",
  "表示一个面形状": "Representing a surface shape",
  "[mxcad_3d API 文档](../README.md) / Mx3dShapeObject": "[mxcad_3d API documentation](../README. md)/Mx3dShapeObject",
  "表示三维形状对象的基类。": "Represents the base class for three-dimensional shape objects.",
  "创建一个形状对象，可以选择传入一个对象参数。": "Create a shape object and choose to pass in an object parameter.",
  "| `p?` | `object` | 可选的对象参数。 |": "| `p?` | ` Object ` | Optional object parameters|",
  "[mxcad_3d API 文档](../README.md) / Mx3dShapeShell": "[mxcad_3d API documentation](../README. md)/Mx3dShapeShell",
  "表示一个壳，由面构成，可以是不闭合的": "Represents a shell composed of faces, which can be non closed",
  "[mxcad_3d API 文档](../README.md) / Mx3dShapeSolid": "[mxcad_3d API documentation](../README. md)/Mx3dShapeSolid",
  "实心形状对象": "Solid shaped object",
  "[mxcad_3d API 文档](../README.md) / Mx3dShapeVertex": "[mxcad_3d API documentation](../README. md)/Mx3dShapeVertex",
  "表示一个点形状": "Representing a point shape",
  "[mxcad_3d API 文档](../README.md) / Mx3dShapeWire": "[mxcad_3d API Document](../README. md)/Mx3dShapeWire",
  "表示一个环，由边构成，可以是不闭合的": "Represents a ring composed of edges, which can be non closed",
  "[mxcad_3d API 文档](../README.md) / Mx3dSymbolObject": "[mxcad_3d API Document](../README. md)/Mx3dSymbolObject",
  "符号的基类": "The base class of symbols",
  "[mxcad_3d API 文档](../README.md) / Mx3dSymbolText": "[mxcad_3d API Document](../README. md)/Mx3dSymbolText",
  "表示一个文字符号，继承自 Mx3dSymbolObject": "Represents a text symbol, inherited from Mx3dSymbolObject",
  "创建一个默认的文字符号对象。": "Create a default text symbol object.",
  "使用文本、高度和位置创建一个文字符号对象。": "Create a text symbol object using text, height, and position.",
  "| `text` | `string` | 文本内容。 |": "|Text | string | Text content|",
  "| `height` | `number` | 文本高度。 |": "|Height | Number | Text height|",
  "| `position` | [`Mx3dGePoint`](Mx3dGePoint.md) | 文本位置。 |": "|Position | [Mx3dGePoint] (Mx3dGePoint. md) | Text position|",
  "获取字体样式。": "Get font style.",
  "字体外观样式。": "Font appearance style.",
  "检查是否翻转。": "Check if it has been flipped.",
  "是否翻转。": "Whether to flip.",
  "检查是否有3D方向。": "Check if there is a 3D orientation.",
  "是否有3D方向。": "Is there a 3D orientation.",
  "检查是否有自定义锚点。": "Check if there are custom anchor points.",
  "是否有自定义锚点。": "Is there a custom anchor point.",
  "获取3D方向。": "Obtain 3D orientation.",
  "3D方向。": "3D direction.",
  "设置文本角度。": "Set the text angle.",
  "| `theAngle` | `number` | 文本角度。 |": "|TheAngle | Number | Text angle|",
  "设置文本颜色。": "Set text color.",
  "设置副标题颜色。": "Set subtitle color.",
  "设置显示类型。": "Set display type.",
  "| `theDisplayType` | [`MxTypeOfDisplayText`](../enums/MdGe.MxTypeOfDisplayText.md) | 显示类型。 |": "|The Display Type | [MxTypeOfDisplayText] (../enums/MdGe. MxTypeOfDisplayText. md) | Display Type|",
  "设置是否翻转。": "Set whether to flip.",
  "| `theIsFlipping` | `boolean` | 是否翻转。 |": "|` theIsFlipping ` | ` boolean ` | Whether to flip|",
  "设置字体。": "Set the font.",
  "| `theFont` | `string` | 字体名称。 |": "|The font name is' theFont '|' string '|",
  "设置字体样式。": "Set font style.",
  "| `theFontAspect` | [`MxFontAspect`](../enums/MdGe.MxFontAspect.md) | 字体样式。 |": "|The FontAspect | [MxFontAspect] (../enums/MdGe. MxFontAspect. md) | Font Style|",
  "设置水平对齐方式。": "Set the horizontal alignment method.",
  "| `theHJust` | [`MxHorizontalTextAlignment`](../enums/MdGe.MxHorizontalTextAlignment.md) | 水平对齐方式。 |": "|TheHJust | [MxHorizontalTextAlignment] (../enums/MdGe. MxHorizontalTextAlignment. md) | Horizontal alignment method|",
  "设置文本高度。": "Set the text height.",
  "设置3D方向。": "Set the 3D orientation.",
  "| `theOrientation` | [`Mx3dGeCSYSR`](Mx3dGeCSYSR.md) | 3D方向。 |": "|The Orientation | [Mx3dGeCSYSR] (Mx3dGeCSYSR. md) | 3D direction|",
  "设置是否有自定义锚点。": "Set whether there is a custom anchor point.",
  "| `theOwnAnchorPoint` | `boolean` | 是否有自定义锚点。 |": "|Does' theOwnAnchorPoint '|' boolean '| have a custom anchor point|",
  "设置文本内容。": "Set the text content.",
  "设置垂直对齐方式。": "Set the vertical alignment method.",
  "| `theVJust` | [`MxVerticalTextAlignment`](../enums/MdGe.MxVerticalTextAlignment.md) | 垂直对齐方式。 |": "|TheVJust | [MxVerticalTextAlignment] (../enums/MdGe. MxVerticalTextAlignment. md) | Vertical alignment method|",
  "设置是否可缩放。": "Set whether it is scalable.",
  "| `theIsZoomable` | `boolean` | 是否可缩放。 |": "|Is' theIsZoomable '|' boolean '| scalable|",
  "取消3D方向设置。": "Cancel the 3D orientation setting.",
  "[mxcad_3d API 文档](../README.md) / Mx3dUtils": "[mxcad_3d API documentation](../README. md)/Mx3dUtils",
  "工具类": "Tool category",
  "从URL地址加载文件到虚拟文件系统": "Load files from URL address to virtual file system",
  "| `theFileUrl` | `string` | 资源URL地址 |": "|TheFileURL | string | Resource URL address|",
  "| `theSaveFileName` | `string` | 文件在虚拟文件系统的完整路径 |": "|TheSaveFileName | string | The complete path of the file in the virtual file system|",
  "成功后返回文件在虚拟文件系统中的绝对路径": "Return the absolute path of the file in the virtual file system after success",
  "从虚拟文件系统中读取模型文件，返回模型文件中的形状": "Read the model file from the virtual file system and return the shapes in the model file",
  "| `theFilePath` | `string` | 模型文件的完整路径 |": "|TheFilePath | string | The complete path of the model file|",
  "| `theFormat` | [`MxFormat`](../enums/MdGe.MxFormat.md) | 模型文件的格式 |": "|TheFormat | [MxFormat] (../enums/MdGe. MxFormat. md) | Format of model files|",
  "模型文件中读取到的形状": "The shape read from the model file",
  "[mxcad_3d API 文档](../README.md) / Mx3dView": "[mxcad_3d API Document](../README. md)/Mx3dView",
  "为当前选中对象设置纹理贴图": "Set texture mapping for the currently selected object",
  "| `theFileName` | `string` | 图片在文件系统中的完整路径 |": "|TheFileName | string | The complete path of the image in the file system|",
  "显示标注符号": "Display annotation symbols",
  "| `theDimension` | [`Mx3dDimObject`](Mx3dDimObject.md) | 标注符号对象 |": "|TheDimension | [Mx3dDimObject] (Mx3dDimObject. md) | Annotation Symbol Object|",
  "显示文字符号": "Display text symbols",
  "| `theSymbol` | [`Mx3dSymbolText`](Mx3dSymbolText.md) | 文字符号对象 |": "|TheSymbol | [Mx3dSymbolText] (Mx3dSymbolText. md) | Text symbol object|",
  "开启/关闭用户自定义剖切面": "Enable/disable user-defined cutting surfaces",
  "| `theToEnabled` | `boolean` | 是否开启用户自定义剖切面 |": "|` theToEnabled ` | ` boolean ` | Whether to enable user-defined cutting planes|",
  "开启/关闭X轴剖切面": "Turn on/off the X-axis section plane",
  "| `theToEnabled` | `boolean` | 是否开启X轴剖切面 |": "|` theToEnabled ` | ` boolean ` | Whether to enable the X-axis section plane|",
  "开启/关闭Y轴剖切面": "Turn on/off Y-axis cutting plane",
  "| `theToEnabled` | `boolean` | 是否开启Y轴剖切面 |": "|` theToEnabled ` | ` boolean ` | Whether to enable Y-axis cutting plane|",
  "开启/关闭Z轴剖切面": "Turn on/off Z-axis cutting plane",
  "| `theToEnabled` | `boolean` | 是否开启Z轴剖切面 |": "|` theToEnabled ` | ` boolean ` | Whether to enable Z-axis cutting plane|",
  "视图中的所有对象缩放至适应整个视图": "Scale all objects in the view to fit the entire view",
  "| `theAuto` | `boolean` | 自动缩放 |": "|TheAuto | boolean | Auto scaling|",
  "获取当前文档视图对象的文档": "Retrieve the document of the current document view object",
  "返回文档对象": "Return document object",
  "移除所有": "Remove all",
  "| `theUpdateView` | `boolean` | `true` | 移除后是否立即更新视图 |": "|Update View | boolean | true | Update view immediately after removal|",
  "移除当前选择对象的纹理贴图": "Remove the texture map of the currently selected object",
  "移除选中": "Remove Selection",
  "设置用户自定义剖切面的法向": "Set the normal direction of user-defined cutting planes",
  "| `x` | `number` | 法向的x分量 |": "|X | number | normal x-component|",
  "| `y` | `number` | 法向的y分量 |": "|Y | number | normal y-component|",
  "| `z` | `number` | 法向的z分量 |": "|Z | number | normal z-component|",
  "设置用户自定义剖切面的位置": "Set the position of user-defined cutting planes",
  "| `thePosition` | `number` | 剖切平面相对于世界坐标系原点的位置 |": "|ThePosition | Number | The position of the cutting plane relative to the origin of the world coordinate system|",
  "翻转用户自定义剖切面": "Flip user-defined cutting surface",
  "设置当前的显示模式": "Set the current display mode",
  "| `theMode` | [`MxGlobalDisplayMode`](../enums/MdGe.MxGlobalDisplayMode.md) | 显示模式 |": "|TheMode | [MxGlobalDisplay Mode] (../enums/MdGe. MxGlobalDisplay Mode. md) | Display Mode|",
  "设置渐变背景色": "Set gradient background color",
  "| `theColor1` | [`Mx3dGeColor`](Mx3dGeColor.md) | 颜色对象1 |": "|TheColor1 | [Mx3dGeColor] (Mx3dGeColor. md) | Color Object 1|",
  "| `theColor2` | [`Mx3dGeColor`](Mx3dGeColor.md) | 颜色对象2 |": "|TheColor2 | [Mx3dGeColor] (Mx3dGeColor. md) | Color Object 2|",
  "| `theMethod` | [`MxGradientFillMethod`](../enums/MdGe.MxGradientFillMethod.md) | 渐变方式 |": "|TheMethod | [MxRadiantFillMethod] (../enums/MdGe. MxRadiantFillMethod. md) | Gradient Method|",
  "设置视图方向": "Set view orientation",
  "| `theOrientation` | [`MxV3dTypeOfOrientation`](../enums/MdGe.MxV3dTypeOfOrientation.md) | 视图方向 |": "|The Orientation | [MxV3dTypeOfOrientation] (../enums/MdGe. MxV3dTypeOfOrientation. md) | View Direction|",
  "| `theIsYup` | `boolean` | 是否Y轴向上 |": "|TheIsYup | boolean | Is the Y-axis upward|",
  "设置视图投影模式": "Set the view projection mode",
  "| `theProjection` | [`MxCameraProjection`](../enums/MdGe.MxCameraProjection.md) | 投影模式 |": "|The Projection | [MxCameraProduction] (../enums/MdGe. MxCameraProduction. md) | Projection Mode|",
  "设置当前选中对象的颜色": "Set the color of the currently selected object",
  "| `color` | [`Mx3dGeColor`](Mx3dGeColor.md) | 颜色 |": "|Color | [Mx3dGeColor] (Mx3dGeColor. md) | Color|",
  "设置选中对象的材质": "Set the material of the selected object",
  "| `material` | [`Mx3dGeMaterial`](Mx3dGeMaterial.md) | 材质 |": "|Material | [Mx3dGeMaterial] (Mx3dGeMaterial. md) | Material|",
  "翻转X轴剖切面": "Flip the X-axis section plane",
  "设置X轴剖切面的位置": "Set the position of the X-axis cutting plane",
  "翻转Y轴剖切面": "Flip the Y-axis section plane",
  "设置Y轴剖切面的位置": "Set the position of the Y-axis cutting plane",
  "翻转Z轴剖切面": "Flip the Z-axis section plane",
  "设置Z轴剖切面的位置": "Set the position of the Z-axis cutting plane",
  "显示中心坐标轴": "Display the central coordinate axis",
  "| `theToShow` | `boolean` | true显示，false不显示 |": "|` thetoShow ` | ` boolean ` | True displays, false does not display|",
  "更新显示": "update display",
  "| `isUpAllData` | `boolean` | `true` | 是否更新所有数据 |": "|IsUpAllData | boolean | true | Update all data|",
  "| `isRemoveAll` | `boolean` | `true` | 是否首先移除所有数据 |": "|IsRemoveAll | boolean | true | Do you want to remove all data first|",
  "[mxcad_3d API 文档](../README.md) / Mx3dWireTool": "[mxcad_3d API Document](../README. md)/Mx3dWireTool",
  "处理 Wire 的接口": "Interface for handling wire",
  "将一组边连接成最大长度的线条（线）。连接的标准是边的端点间的距离应小于给定的容差。\r": "Connect a set of edges into the longest line (line). The standard for connection is that the distance between the endpoints of edges should be less than the given tolerance.",
  "该方法将输入的边集合转换为最大长度的线条集合。": "This method converts the input set of edges into a set of lines with the maximum length.",
  "| `edges` | [`Mx3dShapeObject`](Mx3dShapeObject.md)[] | `undefined` | 要连接的边对象数组。 |": "|` edges ` | [` Mx3dShapeObject `] (Mx3dShapeObject. md) [] | ` undefined ` | Array of edge objects to be connected|",
  "| `toler` | `number` | `1e-6` | 边连接时的容差值。 |": "|Tolerant value when connecting edges|",
  "| `shared` | `boolean` | `false` | 如果为 true，则仅在相邻边共享相同顶点时连接；如果为 false，则在相邻边的端点距离小于容差时连接。 |": "|Shared | boolean | false | If true, only connect when adjacent edges share the same vertex; If false, connect when the distance between the endpoints of adjacent edges is less than the tolerance|",
  "一个新的线条对象数组，包含连接后的最大长度的线条。": "A new array of line objects containing the maximum length of connected lines.",
  "将一组线条连接成最大长度的线条（线）。连接的标准是线条的端点间的距离应小于给定的容差。\r": "Connect a set of lines into the longest line (line). The standard for connection is that the distance between the endpoints of the line should be less than the given tolerance.",
  "该方法将输入的线条集合转换为最大长度的线条集合。": "This method converts the input line set into the maximum length line set.",
  "| `wires` | [`Mx3dShapeObject`](Mx3dShapeObject.md)[] | `undefined` | 要连接的线条对象数组。 |": "|Wires | [Mx3dShapeObject] (Mx3dShapeObject. md) [] | undefined | Array of line objects to be connected|",
  "| `toler` | `number` | `1e-6` | 线条连接时的容差值。 |": "|Toler | number | 1e-6 | Tolerance value when connecting lines|",
  "| `shared` | `boolean` | `false` | 如果为 true，则仅在相邻线条共享相同顶点时连接；如果为 false，则在相邻线条的端点距离小于容差时连接。 |": "|Shared | boolean | false | If true, only connect when adjacent lines share the same vertex; If false, connect when the distance between the endpoints of adjacent lines is less than the tolerance|",
  "[mxcad_3d API 文档](../README.md) / MxCAD3DObject": "[mxcad_3d API Document](../README. md)/MxCAD3DObject",
  "文档视图对象\r": "Document View Object",
  "一个文档视图对象对应一个Canvas视图和一个文档": "A document view object corresponds to a Canvas view and a document",
  "初始化当前文档视图对象": "Initialize the current document view object",
  "| `config` | [`MxCAD3DConfig`](../interfaces/MxCAD3DConfig.md) | 初始化需要的相关配置，canvas可以是选择器字符串，也可以是canvas对象 |": "|` config ` | [` MxCAD3DConfig `] (../interfaces/MxCAD3DConfig. md) | Initialize the relevant configurations required. Canvas can be a selector string or a canvas object|",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxCameraProjection": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxCameraProduction",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxCF3dFilletShapeEnum": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxCF3dFilletShapeenum",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxCFDSChamfMode": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxCFDSChamfMode",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxDimensionArrowOrientation": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxDimension ArrowOrientation",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxDimensionTextHorizontalPosition": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxDimension TextHorizontalPosition",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxDimensionTextVerticalPosition": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxDimension TextVerticalPosition",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxDisplayMode": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxDisplay Mode",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxDisplayStatus": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxDisplay Status",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxDocColorType": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxDocColorType",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxFontAspect": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxFontAspect",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxFormat": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxFormat",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxGAJoinTypeEnum": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxGAJoinTypeenum",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxGAShapeEnum": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxGAShapeenum",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxGFTrihedron": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxGFTrihedron",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxGlobalDisplayMode": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxGlobalDisplayMode",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxGradientFillMethod": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxRadiantFillMethod",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxHorizontalTextAlignment": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxHorizontalTextAlignment",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxKindOfDimension": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxKindOfDimension",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxKindOfInteractive": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxKindOfInteractive",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxNameOfColor": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxNameOfColor",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxNameOfMaterial": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxNameOfMaterial",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxOffsetModeEnum": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxOffsetModeenum",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxOrientation": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxOrientation",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxPrs3dTypeOfHLR": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxPs3dTypeOfHLR",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxQuantAspect": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxQuantAspect",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxShapeEnum": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxShapeenum",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxTextPath": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxTextPath",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxTransitionMode": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxTransitionMode",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxTypeOfAngle": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxTypeOfAngle",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxTypeOfAngleArrowVisibility": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxTypeOfAngleArrowVisibility",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxTypeOfColor": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxTypeOfColor",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxTypeOfDisplayText": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxTypeOfDisplayText",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxTypeOfLightSource": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxTypeOfLightSource",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxTypeOfLine": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxTypeOfLine",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxTypeOfMaterial": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxTypeOfMaterial",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxTypeOfReflection": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxTypeOfReflection",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxV3dTypeOfOrientation": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxV3dTypeOfOrientation",
  "[mxcad_3d API 文档](../README.md) / [MdGe](../modules/MdGe.md) / MxVerticalTextAlignment": "[mxcad_3d API documentation](../README. md)/[mdGe] (../modules/mdGe. md)/MxVerticalTextAlignment",
  "[mxcad_3d API 文档](../README.md) / MxCAD3DConfig": "[mxcad_3d API documentation](../README. md)/MxCAD3DConfig",
  "canvas最小高度 默认300": "The default minimum height for canvas is 300",
  "canvas最小宽度 默认300": "The default minimum width of canvas is 300",
  "指定更新Canvas大小的函数，不指定则默认自动处理(指定该函数则 minHeight, minWidth无效)": "Specify the function to update Canvas size, if not specified, it will be automatically processed by default (specifying this function will result in minHeight, minWidth is invalid)",
  "[mxcad_3d API 文档](../README.md) / MdGe": "[mxcad_3d API documentation](../README. md)/MdGe",
  "mxcad_3d API 文档": "Mxcad_3d API documentation",
  "# mxcad_3d API 文档": "#Mxcad_3d API documentation",
  "该模块包含用于3d相关的导出, 所有导出的内容都可以通过mxcad包导入直接使用": "This module contains exports for 3D related applications, and all exported content can be imported directly using the MXCAD package",
  "全局应用程序单实例": "Global Application Single Instance"
}