import{_ as e,o as t,c as a,V as o}from"./chunks/framework.493c336a.js";const u=JSON.parse('{"title":"Interface: MxCADUI","description":"","frontmatter":{},"headers":[],"relativePath":"en/api/interfaces/2d.MxCADUI.md","filePath":"en/api/interfaces/2d.MxCADUI.md"}'),d={name:"en/api/interfaces/2d.MxCADUI.md"},r=o('<p>[mxcad_2d API documentation] (../README. md)/[2d] (../modules/2d. md)/MxCADUI</p><h1 id="interface-mxcadui" tabindex="-1">Interface: MxCADUI <a class="header-anchor" href="#interface-mxcadui" aria-label="Permalink to &quot;Interface: MxCADUI&quot;">​</a></h1><p><a href="./../modules/2d.html">2d</a>.MxCADUI</p><p>The MxCADUI module provides interfaces for plugin programs to use</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><a href="./2d.MxCADUI.html#getserverconfig">getServerConfig</a></li><li><a href="./2d.MxCADUI.html#getuploadfileconfig">getUploadFileConfig</a></li><li><a href="./2d.MxCADUI.html#init">init</a></li><li><a href="./2d.MxCADUI.html#mxcad">mxcad</a></li><li><a href="./2d.MxCADUI.html#mxmap">mxmap</a></li><li><a href="./2d.MxCADUI.html#uploadfile">uploadFile</a></li></ul><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="getserverconfig" tabindex="-1">getServerConfig <a class="header-anchor" href="#getserverconfig" aria-label="Permalink to &quot;getServerConfig&quot;">​</a></h3><p>• <strong>getServerConfig</strong>: () =&gt; <code>any</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (): <code>any</code></p><p>Get the mxServerConfig. json file configuration</p><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>any</code></p><hr><h3 id="getuploadfileconfig" tabindex="-1">getUploadFileConfig <a class="header-anchor" href="#getuploadfileconfig" aria-label="Permalink to &quot;getUploadFileConfig&quot;">​</a></h3><p>• <strong>getUploadFileConfig</strong>: () =&gt; { <code>baseUrl</code>: <code>string</code> ; <code>cutDwgUrl</code>: <code>string</code> ; <code>mxfilepath</code>: <code>string</code> ; <code>printPdfUrl</code>: <code>string</code> ; <code>saveDwgUrl</code>: <code>string</code> ; <code>saveUrl</code>: <code>string</code> }</p><h4 id="type-declaration-1" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-1" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (): <code>Object</code></p><p>Get file download configuration</p><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>baseUrl</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>cutDwgUrl</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>mxfilepath</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>printPdfUrl</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>saveDwgUrl</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>saveUrl</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><hr><h3 id="init" tabindex="-1">init <a class="header-anchor" href="#init" aria-label="Permalink to &quot;init&quot;">​</a></h3><p>• <strong>init</strong>: (<code>plugin</code>: <a href="./../classes/2d.MxCADPluginBase.html"><code>MxCADPluginBase</code></a>) =&gt; <code>void</code></p><h4 id="type-declaration-2" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-2" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>plugin</code>): <code>void</code></p><p>initialization</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Plugin</td><td style="text-align:left;">[MxCADPluginBase] (../classes/2d. MxCADPluginBase. md)</td><td style="text-align:left;">Basic Configuration</td></tr></tbody></table><h5 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><hr><h3 id="mxcad" tabindex="-1">mxcad <a class="header-anchor" href="#mxcad" aria-label="Permalink to &quot;mxcad&quot;">​</a></h3><p>• <strong>mxcad</strong>: <a href="./../classes/2d.McObject.html"><code>McObject</code></a></p><p>MXCAD object</p><hr><h3 id="mxmap" tabindex="-1">mxmap <a class="header-anchor" href="#mxmap" aria-label="Permalink to &quot;mxmap&quot;">​</a></h3><p>• <strong>mxmap</strong>: <a href="./../classes/mapbox.MxMap.html"><code>MxMap</code></a></p><p>Mxmap object</p><hr><h3 id="uploadfile" tabindex="-1">uploadFile <a class="header-anchor" href="#uploadfile" aria-label="Permalink to &quot;uploadFile&quot;">​</a></h3><p>• <strong>uploadFile</strong>: (<code>uploadFile_call</code>: (<code>param</code>: <code>any</code>) =&gt; <code>void</code>, <code>isReloadFile</code>: <code>boolean</code>) =&gt; <code>void</code></p><h4 id="type-declaration-3" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-3" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>uploadFile_call</code>, <code>isReloadFile</code>): <code>void</code></p><p>Upload a file, format it, and use it for subsequent processing.</p><h5 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>uploadFile_call</code></td><td style="text-align:left;">(<code>param</code>: <code>any</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>isReloadFile</code></td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h5 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p>',52),l=[r];function i(c,n,s,h,p,f){return t(),a("div",null,l)}const x=e(d,[["render",i]]);export{u as __pageData,x as default};
