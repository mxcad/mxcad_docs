import{_ as t,o as e,c as a,V as l}from"./chunks/framework.24f0af87.js";const b=JSON.parse('{"title":"Class: IMcDbDwgFiler","description":"","frontmatter":{},"headers":[],"relativePath":"en/api/classes/2d.IMcDbDwgFiler.md","filePath":"en/api/classes/2d.IMcDbDwgFiler.md"}'),s={name:"en/api/classes/2d.IMcDbDwgFiler.md"},n=l(`<p>[mxcad_2d API documentation] (../README. md)/[2d] (../modules/2d. md)/IMcDbDwgFiler</p><h1 id="class-imcdbdwgfiler" tabindex="-1">Class: IMcDbDwgFiler <a class="header-anchor" href="#class-imcdbdwgfiler" aria-label="Permalink to &quot;Class: IMcDbDwgFiler&quot;">​</a></h1><p><a href="./../modules/2d.html">2d</a>.IMcDbDwgFiler</p><p>Used for handling read and write operations of AutoCAD DWG files. This interface provides a set of methods that allow developers to read and write DWG files in the AutoCAD plugin.</p><p><strong><code>Example</code></strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">McDbCustomEntity</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">IMcDbDwgFiler</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mxcad</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Custom Entity Class Inherits McDbCCustoms Entity</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">McDbTestLineCustomEntity</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">McDbCustomEntity</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Define two point objects, pt1 and pt2, within the entity</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">pt1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">McGePoint3d</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">McGePoint3d</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">pt2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">McGePoint3d</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">McGePoint3d</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Read the data field pt1 of the custom entity pt2</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">dwgInFields</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IMcDbDwgFiler</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">pt1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">filter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readPoint</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pt1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">pt2</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">filter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readPoint</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pt2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Write the data field pt1 to the custom entity pt2</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">dwgOutFields</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IMcDbDwgFiler</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">           </span><span style="color:#A6ACCD;">filter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writePoint</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pt1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">pt1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">           </span><span style="color:#A6ACCD;">filter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writePoint</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pt2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">pt2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./2d.IMcDbDwgFiler.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./2d.IMcDbDwgFiler.html#gettype">getType</a></li><li><a href="./2d.IMcDbDwgFiler.html#readdouble">readDouble</a></li><li><a href="./2d.IMcDbDwgFiler.html#readlong">readLong</a></li><li><a href="./2d.IMcDbDwgFiler.html#readpoint">readPoint</a></li><li><a href="./2d.IMcDbDwgFiler.html#readpoints">readPoints</a></li><li><a href="./2d.IMcDbDwgFiler.html#readstring">readString</a></li><li><a href="./2d.IMcDbDwgFiler.html#writedouble">writeDouble</a></li><li><a href="./2d.IMcDbDwgFiler.html#writelong">writeLong</a></li><li><a href="./2d.IMcDbDwgFiler.html#writepoint">writePoint</a></li><li><a href="./2d.IMcDbDwgFiler.html#writepoints">writePoints</a></li><li><a href="./2d.IMcDbDwgFiler.html#writestring">writeString</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new IMcDbDwgFiler</strong>(<code>type</code>)</p><p>Constructor function</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Type</td><td style="text-align:left;">[MxCADCloneType] (../enums/2d. MxCADCloneType. md)</td><td style="text-align:left;">Clone Type</td></tr></tbody></table><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="gettype" tabindex="-1">getType <a class="header-anchor" href="#gettype" aria-label="Permalink to &quot;getType&quot;">​</a></h3><p>▸ <strong>getType</strong>(): <a href="./../enums/2d.MxCADCloneType.html"><code>MxCADCloneType</code></a></p><p>Retrieve the type information of the object</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../enums/2d.MxCADCloneType.html"><code>MxCADCloneType</code></a></p><p>Clone type</p><hr><h3 id="readdouble" tabindex="-1">readDouble <a class="header-anchor" href="#readdouble" aria-label="Permalink to &quot;readDouble&quot;">​</a></h3><p>▸ <code>Abstract</code> <strong>readDouble</strong>(<code>name</code>): <code>Object</code></p><p>Read a floating-point number from an open DWG file.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">String</td><td style="text-align:left;">Floating Point Number Name</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>Whether ret successfully obtained | val floating-point value</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><hr><h3 id="readlong" tabindex="-1">readLong <a class="header-anchor" href="#readlong" aria-label="Permalink to &quot;readLong&quot;">​</a></h3><p>▸ <code>Abstract</code> <strong>readLong</strong>(<code>name</code>): <code>Object</code></p><p>Read a long integer from the opened DWG file.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">string</td><td style="text-align:left;">Long integer name</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>Whether ret successfully obtained | val long integer value</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><hr><h3 id="readpoint" tabindex="-1">readPoint <a class="header-anchor" href="#readpoint" aria-label="Permalink to &quot;readPoint&quot;">​</a></h3><p>▸ <code>Abstract</code> <strong>readPoint</strong>(<code>name</code>): <code>Object</code></p><p>Read a point object from an open DWG file.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">String</td><td style="text-align:left;">Point Object Name</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>Whether ret successfully obtained | val point object array</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td></tr></tbody></table><hr><h3 id="readpoints" tabindex="-1">readPoints <a class="header-anchor" href="#readpoints" aria-label="Permalink to &quot;readPoints&quot;">​</a></h3><p>▸ <strong>readPoints</strong>(<code>name</code>): <code>Object</code></p><p>Read a set of point objects from an open DWG file.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">String</td><td style="text-align:left;">Point Object Array Name</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>Whether ret successfully obtained | val point object array</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a>[]</td></tr></tbody></table><hr><h3 id="readstring" tabindex="-1">readString <a class="header-anchor" href="#readstring" aria-label="Permalink to &quot;readString&quot;">​</a></h3><p>▸ <code>Abstract</code> <strong>readString</strong>(<code>name</code>): <code>Object</code></p><p>Read a string from an open DWG file.</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">String</td><td style="text-align:left;">String Name</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>Did ret successfully obtain the | val string value</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><hr><h3 id="writedouble" tabindex="-1">writeDouble <a class="header-anchor" href="#writedouble" aria-label="Permalink to &quot;writeDouble&quot;">​</a></h3><p>▸ <code>Abstract</code> <strong>writeDouble</strong>(<code>name</code>, <code>val</code>): <code>void</code></p><p>Write a floating-point number to an opened DWG file.</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">String</td><td style="text-align:left;">Floating Point Number Name</td></tr><tr><td style="text-align:left;">Val</td><td style="text-align:left;">number</td><td style="text-align:left;">Floating point numerical value</td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="writelong" tabindex="-1">writeLong <a class="header-anchor" href="#writelong" aria-label="Permalink to &quot;writeLong&quot;">​</a></h3><p>▸ <code>Abstract</code> <strong>writeLong</strong>(<code>name</code>, <code>val</code>): <code>void</code></p><p>Write a long integer to an opened DWG file.</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">string</td><td style="text-align:left;">Long integer name</td></tr><tr><td style="text-align:left;">Val</td><td style="text-align:left;">number</td><td style="text-align:left;">long integer value</td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="writepoint" tabindex="-1">writePoint <a class="header-anchor" href="#writepoint" aria-label="Permalink to &quot;writePoint&quot;">​</a></h3><p>▸ <code>Abstract</code> <strong>writePoint</strong>(<code>name</code>, <code>val</code>): <code>void</code></p><p>Write a point object to an opened DWG file.</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">String</td><td style="text-align:left;">Point Object Name</td></tr><tr><td style="text-align:left;">Val</td><td style="text-align:left;">[McGePoint3d] (2d. McGePoint3d. md)</td><td style="text-align:left;">Point Object</td></tr></tbody></table><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="writepoints" tabindex="-1">writePoints <a class="header-anchor" href="#writepoints" aria-label="Permalink to &quot;writePoints&quot;">​</a></h3><p>▸ <strong>writePoints</strong>(<code>name</code>, <code>vals</code>): <code>void</code></p><p>Write a set of point objects to an opened DWG file.</p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">String</td><td style="text-align:left;">Point Object Array Name</td></tr><tr><td style="text-align:left;">Vals</td><td style="text-align:left;">McGePoint3d (2d. McGePoint3d. md)</td><td style="text-align:left;">Point Object Array</td></tr></tbody></table><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="writestring" tabindex="-1">writeString <a class="header-anchor" href="#writestring" aria-label="Permalink to &quot;writeString&quot;">​</a></h3><p>▸ <code>Abstract</code> <strong>writeString</strong>(<code>name</code>, <code>val</code>): <code>void</code></p><p>Write a string to an opened DWG file.</p><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">String</td><td style="text-align:left;">String Name</td></tr><tr><td style="text-align:left;">Val</td><td style="text-align:left;">string</td><td style="text-align:left;">string value</td></tr></tbody></table><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>`,114),o=[n];function r(i,d,p,c,h,y){return e(),a("div",null,o)}const g=t(s,[["render",r]]);export{b as __pageData,g as default};
